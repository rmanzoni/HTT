? AnalysisDataFormats/CMGTools/interface/CompoundTypes.h.OLD
? CMGTools/Common/interface/DiObjectFactory.h.OLD
? CMGTools/Common/python/__init__.py
? CMGTools/Common/python/CMG/__init__.py
? CMGTools/Common/python/PAT/__init__.py
? CMGTools/Common/python/Tools/__init__.py
? CMGTools/Common/python/eventCleaning/__init__.py
? CMGTools/Common/python/eventContent/__init__.py
? CMGTools/Common/python/factories/__init__.py
? CMGTools/Common/python/factories/cmgDiTau_cfi.py.RIC
? CMGTools/Common/python/generator/__init__.py
? CMGTools/Common/python/miscProducers/__init__.py
? CMGTools/Common/python/miscProducers/collectionSize/__init__.py
? CMGTools/Common/python/miscProducers/mvaMET/__init__.py
? CMGTools/Common/python/miscProducers/mvaMET/metRegression_cff.py.OLD
? CMGTools/Common/python/release_info/__init__.py
? CMGTools/Common/python/roodatasets/__init__.py
? CMGTools/Common/python/runInfoAccounting/__init__.py
? CMGTools/Common/python/selections/__init__.py
? CMGTools/Common/python/skims/__init__.py
? CMGTools/Common/python/templates/__init__.py
? CMGTools/Common/python/testing_sources/__init__.py
? CMGTools/External/python/__init__.py
? CMGTools/H2TauTau/RiccardoWD
? CMGTools/H2TauTau/cvsdiff.txt
? CMGTools/H2TauTau/cvsdiff2.txt
? CMGTools/H2TauTau/cvsdiff3.txt
? CMGTools/H2TauTau/ntuplization
? CMGTools/H2TauTau/Colin/cookDYSoup_2012.py
? CMGTools/H2TauTau/interface/.DiTauWithSVFitProducer.h.swp
? CMGTools/H2TauTau/interface/DiTauWithSVFitProducer.h.OLD
? CMGTools/H2TauTau/interface/DiTauWithSVFitProducer.h.OLD2
? CMGTools/H2TauTau/interface/DiTauWithSVFitProducer.h.RICCARDO_DEBUGGING
? CMGTools/H2TauTau/interface/DiTauWithSVFitProducer.h.WITH_MANY_PRINTOUTS
? CMGTools/H2TauTau/interface/TauTauWithSVFitProducer.h.alkjsdlkajsd
? CMGTools/H2TauTau/plugins/BaseFlatNtp.cc.jose
? CMGTools/H2TauTau/plugins/TauEleFlatNtp.cc.jose
? CMGTools/H2TauTau/plugins/TauMuFlatNtp.cc.jose
? CMGTools/H2TauTau/prod/22Jul
? CMGTools/H2TauTau/prod/25aug_corrMC
? CMGTools/H2TauTau/prod/TauES_test
? CMGTools/H2TauTau/prod/h2TauTau_cfg.py.RIC2
? CMGTools/H2TauTau/prod/test
? CMGTools/H2TauTau/prod/wjets_newrecoil
? CMGTools/H2TauTau/python/__init__.py
? CMGTools/H2TauTau/python/officialJSONS.py.RICCARDO
? CMGTools/H2TauTau/python/eventContent/__init__.py
? CMGTools/H2TauTau/python/histograms/__init__.py
? CMGTools/H2TauTau/python/macros/__init__.py
? CMGTools/H2TauTau/python/macros/tests/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/DYJets/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/TTJets/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/WJets/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/data_03Oct2011/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/data_05Aug2011_v1/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/data_May10ReReco_v1/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/data_PromptReco_v4/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/embed_03Oct2011/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/embed_05Aug2011_v1/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/embed_May10ReReco_v1/__init__.py
? CMGTools/H2TauTau/python/macros/tests/Template/embed_PromptReco_v4/__init__.py
? CMGTools/H2TauTau/python/macros/toodeldo/__init__.py
? CMGTools/H2TauTau/python/objects/TauESCorrector_cfi.py
? CMGTools/H2TauTau/python/objects/__init__.py
? CMGTools/H2TauTau/python/objects/diTauObjectsMVAMET_cff.py.RIC
? CMGTools/H2TauTau/python/proto/__init__.py
? CMGTools/H2TauTau/python/proto/Samples/__init__.py
? CMGTools/H2TauTau/python/proto/analyzers/.__afs447
? CMGTools/H2TauTau/python/proto/analyzers/.__afs5FE5
? CMGTools/H2TauTau/python/proto/analyzers/.__afs64A5
? CMGTools/H2TauTau/python/proto/analyzers/EmbedWeighter.py.JAN
? CMGTools/H2TauTau/python/proto/analyzers/EmbedWeighter.py.RIC
? CMGTools/H2TauTau/python/proto/analyzers/EmbedWeighter.py.RICnew
? CMGTools/H2TauTau/python/proto/analyzers/JetWeighter.py.RIC
? CMGTools/H2TauTau/python/proto/analyzers/LeptonWeighter.py.RIC
? CMGTools/H2TauTau/python/proto/analyzers/__init__.py
? CMGTools/H2TauTau/python/proto/framework/__init__.py
? CMGTools/H2TauTau/python/proto/physicsobjects/__init__.py
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_boh
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_boh2
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_boh3
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_bugged
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_et_jet30
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_et_mit_imperial
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_et_mit_imperial_jet30
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_good
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_mt
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_mt_jet30
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_mt_mit_imperial
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_mt_mit_imperial_jet30
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_tt
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_tt2
? CMGTools/H2TauTau/python/proto/plotter/Comparator_OutDir_withCut
? CMGTools/H2TauTau/python/proto/plotter/__init__.py
? CMGTools/H2TauTau/python/proto/plotter/httSyncCompare.py.RIC
? CMGTools/H2TauTau/python/proto/samples/__init__.py
? CMGTools/H2TauTau/python/proto/samples/run2012/__init__.py
? CMGTools/H2TauTau/python/proto/samples/run2012/diTau_Colin_Feb8.py
? CMGTools/H2TauTau/python/proto/samples/run2012/diTau_Colin_Feb8_down.py
? CMGTools/H2TauTau/python/proto/samples/run2012/diTau_Colin_Feb8_nom.py
? CMGTools/H2TauTau/python/proto/samples/run2012/diTau_Colin_Feb8_up.py
? CMGTools/H2TauTau/python/proto/samples/run2012/ewk.py.RIC
? CMGTools/H2TauTau/python/proto/samples/run2012/samples_nom.txt
? CMGTools/H2TauTau/python/proto/samples/run2012/samples_pub_11aug.txt
? CMGTools/H2TauTau/python/proto/statistics/__init__.py
? CMGTools/H2TauTau/python/proto/weights/__init__.py
? CMGTools/H2TauTau/python/skims/__init__.py
? CMGTools/H2TauTau/python/sources/__init__.py
? CMGTools/H2TauTau/python/sources/VBF_HToTauTau_M_115_7TeV_powheg_pythia6_tauola/__init__.py
? CMGTools/H2TauTau/python/sources/VBF_HToTauTau_M_115_7TeV_powheg_pythia6_tauola/Summer11_PU_S4_START42_V11_v1/__init__.py
? CMGTools/H2TauTau/python/sources/VBF_HToTauTau_M_115_7TeV_powheg_pythia6_tauola/Summer11_PU_S4_START42_V11_v1/AODSIM/__init__.py
? CMGTools/H2TauTau/python/sources/VBF_HToTauTau_M_115_7TeV_powheg_pythia6_tauola/Summer11_PU_S4_START42_V11_v1/AODSIM/V2/__init__.py
? CMGTools/H2TauTau/python/sources/VBF_HToTauTau_M_115_7TeV_powheg_pythia6_tauola/Summer11_PU_S4_START42_V11_v1/AODSIM/V2/PAT_CMG_V2_3_0/__init__.py
? CMGTools/H2TauTau/python/tools/__init__.py
? CMGTools/H2TauTau/python/tools/jsonPick.py
? CMGTools/H2TauTau/python/tools/jsonPick.py.ric
? CMGTools/H2TauTau/python/tools/setupJSON.py.RIC
? CMGTools/Production/python/__init__.py
? CMGTools/Production/python/PFAOD/__init__.py
? CMGTools/RootTools/cvsup.txt
? CMGTools/RootTools/data/vertexWeight/Pileup_2012ABCD.true.root.poasdpoaisd
? CMGTools/RootTools/python/__init__.py
? CMGTools/RootTools/python/DataMC/__init__.py
? CMGTools/RootTools/python/analyzers/__init__.py
? CMGTools/RootTools/python/fwlite/__init__.py
? CMGTools/RootTools/python/html/__init__.py
? CMGTools/RootTools/python/html/templates/__init__.py
? CMGTools/RootTools/python/html/templates/eleTau/__init__.py
? CMGTools/RootTools/python/html/templates/eleTau/eleTau_0jet_high/__init__.py
? CMGTools/RootTools/python/html/templates/eleTau/eleTau_0jet_low/__init__.py
? CMGTools/RootTools/python/html/templates/eleTau/eleTau_boost_high/__init__.py
? CMGTools/RootTools/python/html/templates/eleTau/eleTau_boost_low/__init__.py
? CMGTools/RootTools/python/html/templates/eleTau/eleTau_inclusive/__init__.py
? CMGTools/RootTools/python/html/templates/eleTau/eleTau_vbf/__init__.py
? CMGTools/RootTools/python/json/__init__.py
? CMGTools/RootTools/python/macros/__init__.py
? CMGTools/RootTools/python/physicsobjects/Jet.py.RIC
? CMGTools/RootTools/python/physicsobjects/__init__.py
? CMGTools/RootTools/python/statistics/__init__.py
? CMGTools/RootTools/python/tests/__init__.py
? CMGTools/RootTools/python/utils/__init__.py
? CMGTools/RootTools/python/utils/connect.py.RIC
? CMGTools/RootTools/python/utils/connect.py.RIC2
? CMGTools/RootTools/python/utils/triggerEvolution_all_old.txt
? CMGTools/RootTools/python/utils/vertexWeight/__init__.py
? CMGTools/RootTools/python/yellowreport/YR_8TeV.json.bah
? CMGTools/RootTools/python/yellowreport/__init__.py
? CMGTools/Utilities/data/metRecoilCorrection/recoilfit_datamm53XRR_2012_0jet.root
? CMGTools/Utilities/data/metRecoilCorrection/recoilfit_datamm53XRR_2012_1jet.root
? CMGTools/Utilities/data/metRecoilCorrection/recoilfit_datamm53XRR_2012_2jet.root
? CMGTools/Utilities/data/metRecoilCorrection/recoilfit_zmm53XRR_2012_0jet.root
? CMGTools/Utilities/data/metRecoilCorrection/recoilfit_zmm53XRR_2012_1jet.root
? CMGTools/Utilities/data/metRecoilCorrection/recoilfit_zmm53XRR_2012_2jet.root
? CMGTools/Utilities/interface/RecoilCorrectedMETProducer.h.ORIGINAL
? CMGTools/Utilities/python/__init__.py
? CMGTools/Utilities/python/generator/__init__.py
? CMGTools/Utilities/python/generator/metRecoilCorrection/__init__.py
? CMGTools/Utilities/python/metRecoilCorrection/__init__.py
? CMGTools/Utilities/python/metRecoilCorrection/metRecoilCorrection_cff.py.RIC
? CMGTools/Utilities/python/mvaMET/__init__.py
? CMGTools/Utilities/python/objects/__init__.py
? CMGTools/Utilities/python/tools/__init__.py
? CMGTools/ZJetsTutorial/python/__init__.py
? CMGTools/ZJetsTutorial/python/analyzers/__init__.py
? CMGTools/ZJetsTutorial/python/plotter/__init__.py
? CMGTools/ZJetsTutorial/python/samples/__init__.py
? CMGTools/ZJetsTutorial/python/samples/run2012/__init__.py
? DPGAnalysis/SiStripTools/python/__init__.py
? DPGAnalysis/SiStripTools/python/filters/__init__.py
? DPGAnalysis/SiStripTools/python/filtertest/__init__.py
? DPGAnalysis/Skims/python/__init__.py
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat1.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat2.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat3.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat4.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat5.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat6.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat1.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat2.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat3.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat4.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat5.weights.xml
? EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat6.weights.xml
? EgammaAnalysis/ElectronTools/python/__init__.py
? FWCore/GuiBrowsers/python/__init__.py
? PhysicsTools/PatAlgos/python/__init__.py
? PhysicsTools/PatAlgos/python/cleaningLayer1/__init__.py
? PhysicsTools/PatAlgos/python/famos/__init__.py
? PhysicsTools/PatAlgos/python/mcMatchLayer0/__init__.py
? PhysicsTools/PatAlgos/python/producersHeavyIons/__init__.py
? PhysicsTools/PatAlgos/python/producersLayer1/__init__.py
? PhysicsTools/PatAlgos/python/recoLayer0/__init__.py
? PhysicsTools/PatAlgos/python/selectionLayer1/__init__.py
? PhysicsTools/PatAlgos/python/tools/__init__.py
? PhysicsTools/PatAlgos/python/triggerLayer1/__init__.py
? PhysicsTools/PatUtils/python/__init__.py
? PhysicsTools/PatUtils/python/tools/__init__.py
? RecoEgamma/EgammaTools/python/__init__.py
? RecoLuminosity/LumiDB/python/__init__.py
? RecoMET/METAnalyzers/python/__init__.py
? RecoMET/METFilters/python/__init__.py
? RecoMET/METProducers/python/__init__.py
? RecoParticleFlow/PFProducer/python/__init__.py
? RecoParticleFlow/PostProcessing/python/__init__.py
? RecoTauTag/Configuration/python/__init__.py
? RecoTauTag/Configuration/python/tools/__init__.py
? RecoTauTag/RecoTau/python/__init__.py
? TauAnalysis/CandidateTools/bin/.__afs90FE
? TauAnalysis/CandidateTools/bin/15jul
? TauAnalysis/CandidateTools/interface/NSVfitStandaloneAlgorithm.h.RICCARDO
? TauAnalysis/CandidateTools/src/NSVfitStandaloneAlgorithm.cc.RICCARDO
? TauAnalysis/CandidateTools/src/NSVfitStandaloneLikelihood.cc.RICCARDO
? TauAnalysis/MCEmbeddingTools/python/__init__.py
Index: CMGTools/Common/python/factories/cmgDiTauCor_cfi.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/Common/python/factories/cmgDiTauCor_cfi.py,v
retrieving revision 1.5
diff -r1.5 cmgDiTauCor_cfi.py
7c7
<     metCollection       = cms.InputTag('recoilCorrectedMET'),
---
> #     metCollection       = cms.InputTag('recoilCorrectedMET'),
12,14c12,13
<     shift1Prong1Pi0     = cms.double(0.027), ## 1.5% +1.2% by Phil for summer 13 https://indico.cern.ch/getFile.py/access?contribId=24&sessionId=4&resId=0&materialId=slides&confId=252865
<     ptDependence1Pi0    = cms.double(0.001),
<     ############ for the embedded
---
>     shift1Prong1Pi0     = cms.double(0.012), ## 1.5% +1.0% by Phil for summer 13  (WARINING THIS +1.0% has been turned off) https://indico.cern.ch/getFile.py/access?contribId=24&sessionId=4&resId=0&materialId=slides&confId=252865
>     ptDependence1Pi0    = cms.double(0.),
16,18c15,17
<     ############ for the mc
<     #shift3Prong         = cms.double(0.022),
<     ptDependence3Prong  = cms.double(0.001)
---
>     ptDependence3Prong  = cms.double(0.),
>     shiftMet            = cms.bool(True),
>     shiftTaus           = cms.bool(True)
Index: CMGTools/Common/python/factories/cmgTauMuCor_cfi.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/Common/python/factories/cmgTauMuCor_cfi.py,v
retrieving revision 1.3
diff -r1.3 cmgTauMuCor_cfi.py
7c7
<     metCollection = cms.InputTag('recoilCorrectedMET'),
---
>     #metCollection = cms.InputTag('recoilCorrectedMET'),
12c12
<     shift1Prong1Pi0     = cms.double(0.),
---
>     shift1Prong1Pi0     = cms.double(0.012), ## 1.5% +1.0% by Phil for summer 13  (WARINING THIS +1.0% has been turned off) https://indico.cern.ch/getFile.py/access?contribId=24&sessionId=4&resId=0&materialId=slides&confId=252865
14,15c14,17
<     shift3Prong         = cms.double(0.),
<     ptDependence3Prong  = cms.double(0.)
---
>     shift3Prong         = cms.double(0.012),
>     ptDependence3Prong  = cms.double(0.),
>     shiftMet            = cms.bool(True),
>     shiftTaus           = cms.bool(True)
Index: CMGTools/H2TauTau/interface/DiObjectUpdateFactory.h
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/interface/DiObjectUpdateFactory.h,v
retrieving revision 1.3
diff -r1.3 DiObjectUpdateFactory.h
118c118
<       // PDG Id: e 11, mu 13, tau 15, Z 23, h 25, H 35, A 35  
---
>       // PDG Id: e 11, mu 13, tau 15, Z 23, h 25, H 35, A 36  
Index: CMGTools/H2TauTau/interface/DiTauObjectFactory.h
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/interface/DiTauObjectFactory.h,v
retrieving revision 1.1
diff -r1.1 DiTauObjectFactory.h
26,28c26,28
<             leg1Label_(ps.getParameter<edm::InputTag>("leg1Collection")),
<             leg2Label_(ps.getParameter<edm::InputTag>("leg2Collection")),
<             metLabel_(ps.getParameter<edm::InputTag>("metCollection")),
---
>             leg1Label_  (ps.getParameter<edm::InputTag>("leg1Collection")),
>             leg2Label_  (ps.getParameter<edm::InputTag>("leg2Collection")),
>             metLabel_   (ps.getParameter<edm::InputTag>("metCollection")),
Index: CMGTools/H2TauTau/interface/DiTauWithSVFitProducer.h
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/interface/DiTauWithSVFitProducer.h,v
retrieving revision 1.12
diff -r1.12 DiTauWithSVFitProducer.h
167d166
< 	measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(leg2type, diTau.leg2().p4()));
168a168
> 	measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(leg2type, diTau.leg2().p4()));
172c172,173
<         algo.integrateMarkovChain();
---
>         //algo.integrateMarkovChain();
>         algo.integrateVEGAS();
Index: CMGTools/H2TauTau/interface/TriggerEfficiency.h
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/interface/TriggerEfficiency.h,v
retrieving revision 1.39
diff -r1.39 TriggerEfficiency.h
994c994
<     return (abs(eta)<=2.1)*
---
>     return (fabs(eta)<=2.1)*
1002c1002
<     (abs(eta)>2.1)*
---
>     (fabs(eta)>2.1)*
1089a1090,1126
> // Tau Parked with HLT_DoubleMediumIsoPFTau35_Trk*_eta2p1_v*
> //   double eff2012IsoParkedTau19fb_Simone(double pt, double eta){
> // 
> //     // for real Taus mT<20
> //     if ( fabs(eta) < 1.4 )
> //     {
> //       return (  0.883869 * 0.5 * (TMath::Erf((pt-43.8723)/2./0.946593 /sqrt(pt))+1.) ) ;// 2012CD measured in one go, take this for all as of may 15
> //               
> //     }
> //     
> //     else
> //     {
> //       return (  0.798480 * 0.5 * (TMath::Erf((pt-43.1362)/2./1.04861  /sqrt(pt))+1.) ) ;// 2012CD measured in one go, take this for all as of may 15
> //     }
> //     
> //   }
> // 
> // 
> //   double eff2012IsoParkedTau19fbMC_Simone(double pt, double eta){
> // 
> //     // for real Taus using ggH120
> //     if ( fabs(eta) < 1.4 )
> //     {
> //       return ( 0.814832 * 0.5 * (TMath::Erf((pt-40.1457)/2./0.856575  /sqrt(pt))+1.) ) ;
> //     }
> //     
> //     else
> //     {
> //       return ( 0.661991 * 0.5 * (TMath::Erf((pt-38.0195)/2./0.833499 /sqrt(pt))+1.) ) ;
> //     }
> //     
> //   }
> 
> 
> 
> 
> 
1092,1104c1129,1138
< 
<     // for real Taus mT<20
<     if ( fabs(eta) < 1.4 )
<     {
<       return (  0.883869 * 0.5 * (TMath::Erf((pt-43.8723)/2./0.946593 /sqrt(pt))+1.) ) ;// 2012CD measured in one go, take this for all as of may 15
<               
<     }
<     
<     else
<     {
<       return (  0.798480 * 0.5 * (TMath::Erf((pt-43.1362)/2./1.04861  /sqrt(pt))+1.) ) ;// 2012CD measured in one go, take this for all as of may 15
<     }
<     
---
>     return (  0.826969 * 0.5 * (TMath::Erf((pt-42.2274)/2./0.783258 /sqrt(pt))+1.) ) ;// only one eta bin
>     // to be moved
>     // if (pt < 140.)   return (  0.826969 * 0.5 * (TMath::Erf((pt-42.2274)/2./0.783258 /sqrt(pt))+1.) ) ;// only one eta bin
>     // else if (pt>400) return 2.03467;
>     // else if (pt>300) return 1.31593;
>     // else if (pt>250) return 1.25698;
>     // else if (pt>200) return 1.18941;
>     // else if (pt>180) return 1.17448;
>     // else if (pt>160) return 1.0964 ;
>     // else return 1.09279;
1109,1120c1143,1152
< 
<     // for real Taus using ggH120
<     if ( fabs(eta) < 1.4 )
<     {
<       return ( 0.814832 * 0.5 * (TMath::Erf((pt-40.1457)/2./0.856575  /sqrt(pt))+1.) ) ;
<     }
<     
<     else
<     {
<       return ( 0.661991 * 0.5 * (TMath::Erf((pt-38.0195)/2./0.833499 /sqrt(pt))+1.) ) ;
<     }
<     
---
>     double data_plateau = 0.826969 ;
>     if (pt < 140.)   return ( 0.813769 * 0.5 * (TMath::Erf((pt-39.9322)/2./0.819354  /sqrt(pt))+1.) ) ; // only one eta bin
>     else if (pt>400) return data_plateau / 2.03467;
>     else if (pt>300) return data_plateau / 1.31593;
>     else if (pt>250) return data_plateau / 1.25698;
>     else if (pt>200) return data_plateau / 1.18941;
>     else if (pt>180) return data_plateau / 1.17448;
>     else if (pt>160) return data_plateau / 1.0964 ;
>     else             return data_plateau / 1.09279;
>     // else          return 1. ;  // SF for efficiency drop at high pt, need to go together with data turn on
Index: CMGTools/H2TauTau/plugins/H2TauTauTools.cc
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/plugins/H2TauTauTools.cc,v
retrieving revision 1.8
diff -r1.8 H2TauTauTools.cc
9a10
> 
13c14,15
< DEFINE_FWK_MODULE(MuElePOProducer);
---
> // DEFINE_FWK_MODULE(MuElePOProducer);
> 
16c18
< DEFINE_FWK_MODULE(MuEleUpdatePOProducer);
---
> // DEFINE_FWK_MODULE(MuEleUpdatePOProducer);
Index: CMGTools/H2TauTau/plugins/H2TauTauTools.h
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/plugins/H2TauTauTools.h,v
retrieving revision 1.7
diff -r1.7 H2TauTauTools.h
15c15
< typedef DiTauObjectFactory< cmg::MuEle::type1, cmg::MuEle::type2 > MuEleFactory;
---
> //typedef DiTauObjectFactory< cmg::MuEle::type1, cmg::MuEle::type2 > MuEleFactory;
17c17
< typedef DiObjectUpdateFactory< cmg::TauMu > TauMuUpdateFactory;
---
> typedef DiObjectUpdateFactory< cmg::TauMu  > TauMuUpdateFactory;
19,20c19,20
< typedef DiObjectUpdateFactory< cmg::MuEleDiTau > MuEleUpdateFactory;
< typedef DiObjectUpdateFactory< cmg::DiTau > DiTauUpdateFactory;
---
> //typedef DiObjectUpdateFactory< cmg::MuEle  > MuEleUpdateFactory;
> typedef DiObjectUpdateFactory< cmg::DiTau  > DiTauUpdateFactory;
25c25
< typedef PhysicsObjectProducer<cmg::MuEleFactory> MuElePOProducer;
---
> //typedef PhysicsObjectProducer<cmg::MuEleFactory> MuElePOProducer;
29c29
< typedef PhysicsObjectProducer<cmg::MuEleUpdateFactory> MuEleUpdatePOProducer;
---
> //typedef PhysicsObjectProducer<cmg::MuEleUpdateFactory> MuEleUpdatePOProducer;
36c36
< typedef DiTauWithSVFitProducer< cmg::MuEle > MuEleWithSVFitProducer;
---
> //typedef DiTauWithSVFitProducer< cmg::MuEle > MuEleWithSVFitProducer;
Index: CMGTools/H2TauTau/prod/h2TauTau_cfg.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/prod/h2TauTau_cfg.py,v
retrieving revision 1.71
diff -r1.71 h2TauTau_cfg.py
161,162c161,162
<     process.diTauPath.remove( process.cmgDiTauCorPreSel )
<     process.mvaMETDiTau.src = cms.InputTag('cmgDiTauPreSel')
---
>     process.diTauPath.remove( process.cmgDiTauCor )
>     process.mvaMETDiTau.src = cms.InputTag('mvaMETDiTau')
228c228
< process.cmgTauScaler.cfg.nSigma = tauScaling
---
> # process.cmgTauScaler.cfg.nSigma = tauScaling
296c296
<     process.cmgDiTauSVFit.SVFitVersion = 2
---
>     process.cmgDiTauCorSVFitPreSel.SVFitVersion = 2
300c300
<     process.cmgDiTauSVFit.SVFitVersion = 1
---
>     process.cmgDiTauCorSVFitPreSel.SVFitVersion = 1
Index: CMGTools/H2TauTau/prod/h2TauTau_diTau_cfg.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/prod/h2TauTau_diTau_cfg.py,v
retrieving revision 1.6
diff -r1.6 h2TauTau_diTau_cfg.py
3c3
< from CMGTools.Common.Tools.cmsswRelease import cmsswIs44X,cmsswIs52X
---
> from CMGTools.Common.Tools.cmsswRelease import isNewerThan, cmsswIs44X,cmsswIs52X
12d11
< #process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(1000) )
28a28,30
> # increase to 1000 before running on the batch, to reduce size of log files
> # on your account
> reportInterval = 5000
31,34c33,36
< print 'channel', channel
< print 'jet recalib', jetRecalib
< print 'useCHS', useCHS
< print 'newSVFit', newSVFit
---
> print 'channel'      , channel
> print 'jet recalib'  , jetRecalib
> print 'useCHS'       , useCHS
> print 'newSVFit'     , newSVFit
43,54c45,46
< 
< # process.setName_('H2TAUTAU')
< 
< dataset_user = 'cmgtools' 
< #dataset_name = '/Tau/Run2012D-PromptReco-v1/AOD/PAT_CMG_V5_8_0'
< # dataset_name = '/W2JetsToLNu_TuneZ2Star_8TeV-madgraph/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM/V5_B/PAT_CMG_V5_8_0'
< # dataset_name = '/DYJetsToLL_M-50_TuneZ2Star_8TeV-madgraph-tarball/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM/V5_B/PAT_CMG_V5_8_0'
< # dataset_name = '/DY1JetsToLL_M-50_TuneZ2Star_8TeV-madgraph/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM/V5_B/PAT_CMG_V5_8_0'
< #dataset_name = '/WH_ZH_TTH_HToTauTau_M-110_8TeV-pythia6-tauola/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM/V5_B/PAT_CMG_V5_8_0'
< #dataset_name = '/DoubleMu/StoreResults-DoubleMu_Run2012B_13Jul2012_v4_embedded_trans1_tau132_pttau1_17had2_17_v1-f456bdbb960236e5c696adfe9b04eaae/USER/PAT_CMG_V5_8_0'
< dataset_name = '/GluGluToHToTauTau_M-125_8TeV-powheg-pythia6/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM/V5_B/PAT_CMG_V5_8_0'
< #dataset_name = '/SUSYBBHToTauTau_M-80_8TeV-pythia6-tauola/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM/V5_B/PAT_CMG_V5_8_0'
---
> dataset_user  = 'cmgtools' 
> dataset_name  = '/TauParked/Run2012D-22Jan2013-v1/AOD/PAT_CMG_V5_16_0'
64a57,62
> process.source.inputCommands=cms.untracked.vstring(
>     'keep *',
>     'drop cmgStructuredPFJets_cmgStructuredPFJetSel__PAT'
>     )
> 
> 
81,85c79,80
<     from CMGTools.Common.Tools.applyJSON_cff import applyJSON
<     json="/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions12/8TeV/Prompt/Cert_190456-208686_8TeV_PromptReco_Collisions12_JSON.txt"
<     #json="/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions12/8TeV/Reprocessing/Cert_190456-196531_8TeV_13Jul2012ReReco_Collisions12_JSON_v2.txt"
<     applyJSON(process, json )
< 
---
>     from CMGTools.H2TauTau.tools.setupJSON import setupJSON
>     json = setupJSON(process)
94,96c89,94
< from CMGTools.H2TauTau.tools.setupRecoilCorrection import setupRecoilCorrection,lookup,rootfile_dir
< # WARNING DISABLING RECOIL CORRECTIONS FOR 2012!!!
< setupRecoilCorrection( process, runOnMC, True, cmsswIs52X(), None, channel)
---
> from CMGTools.H2TauTau.tools.setupRecoilCorrection import setupRecoilCorrection
> 
> #recoilEnabled = True
> recoilEnabled = False
> setupRecoilCorrection( process, runOnMC,
>                        enable=recoilEnabled, is53X=isNewerThan('CMSSW_5_2_X'))
162,163c160
< #process.cmgTauScaler.cfg.nSigma = tauScaling # old method
< process.cmgDiTauCorPreSel.cfg.nSigma = tauScaling # new method
---
> process.cmgTauScaler.cfg.nSigma = tauScaling
180c177
< process.MessageLogger.cerr.FwkReport.reportEvery = 100
---
> process.MessageLogger.cerr.FwkReport.reportEvery = reportInterval
197c194,195
<         GT = 'START53_V10::All' # for 53X MC in >= 533
---
>         GT = 'START53_V15::All' # for 53X MC in >= 533
>         # GT = 'START53_V10::All' # for 53X MC in >= 533
201c199,200
<         GT = 'GR_P_V41_AN1::All' # for 53X data in >= 533
---
>         GT = 'GR_P_V42_AN3::All' # for 53X data in >= 533
>         # GT = 'GR_P_V41_AN1::All' # for 53X data in >= 533
235c234
<     process.cmgDiTauSVFit.SVFitVersion = 2
---
>     process.cmgDiTauCorSVFitPreSel.SVFitVersion = 2
240c239,241
<     process.cmgDiTauSVFit.SVFitVersion = 1
---
>     process.cmgDiTauCorSVFitPreSel.SVFitVersion = 1
> 
> # import pdb ; pdb.set_trace()
242c243,246
< # process.tauMu_fullsel_tree_CMG.SelectEvents = cms.untracked.PSet()
---
> process.cmgDiTau.cuts.baseline.tau1Leg.iso = cms.string('leg1().tauID("byCombinedIsolationDeltaBetaCorrRaw3Hits") < 15.')
> process.cmgDiTau.cuts.baseline.tau2Leg.iso = cms.string('leg2().tauID("byCombinedIsolationDeltaBetaCorrRaw3Hits") < 15.')
> process.cmgDiTau.cuts.baseline.tau1Leg.kinematics.pt = cms.string('leg1().pt()>35.')
> process.cmgDiTau.cuts.baseline.tau2Leg.kinematics.pt = cms.string('leg2().pt()>35.')
Index: CMGTools/H2TauTau/python/officialJSONS.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/officialJSONS.py,v
retrieving revision 1.16
diff -r1.16 officialJSONS.py
2c2
< # 2011
---
> # 2011 
73,75c73
<     '/Tau.*/Run2012C-24Aug2012-v1/AOD':aug24_2012,
<     '/Tau.*/Run2012C-PromptReco-v2/AOD':pr2012,
<     '/Tau.*/Run2012C-PromptReco-v1/AOD':pr2012, # Weird:  /Tau/Run2012C-PromptReco-v1/AOD still on the twiki.
---
>     '/Tau.*/Run2012C-13Jul2012-v1/AOD':jul13_2012,
80c78
<     '/Tau.*/Run2012D-PromptReco-v1/AOD':pr2012,
---
>     '/Tau.*/Run2012D-13Jul2012-v1/AOD':jul13_2012,
100,103c98,108
<         '/TauPlusX/Run2012B-13Jul2012-v1/AOD',
<         '/TauPlusX/Run2012C-24Aug2012-v1/AOD',
<         '/TauPlusX/Run2012C-PromptReco-v2/AOD',
<         '/TauPlusX/Run2012D-PromptReco-v1/AOD',
---
> #         '/TauPlusX/Run2012B-13Jul2012-v1/AOD',
> #         '/TauPlusX/Run2012C-24Aug2012-v1/AOD',
> #         '/TauPlusX/Run2012C-PromptReco-v2/AOD',
> #         '/TauPlusX/Run2012D-PromptReco-v1/AOD',
> #         '/Tau/Run2012A-13Jul2012-v1/AOD',
> #         '/Tau/Run2012B-13Jul2012-v1/AOD',
> #         '/Tau/Run2012C-PromptReco-v1/AOD',
> #         '/Tau/Run2012C-24Aug2012-v1/AOD',
> #         '/Tau/Run2012D-PromptReco-v1/AOD',
> #         '/TauPlusX/Run2012D-22Jan2013-v1/AOD/',
> #         '/DoubleMuParked/StoreResults-Run2012D_22Jan2013_v1_RHembedded_trans1_tau116_ptmu1_16had1_18_v1-f456bdbb960236e5c696adfe9b04eaae/USER/V5_B'
105,110c110,116
<         '/Tau/Run2012B-13Jul2012-v1/AOD',
<         '/Tau/Run2012C-PromptReco-v1/AOD',
<         '/Tau/Run2012C-24Aug2012-v1/AOD',
<         '/Tau/Run2012D-PromptReco-v1/AOD',
<         '/TauPlusX/Run2012D-22Jan2013-v1/AOD/',
<         '/DoubleMuParked/StoreResults-Run2012D_22Jan2013_v1_RHembedded_trans1_tau116_ptmu1_16had1_18_v1-f456bdbb960236e5c696adfe9b04eaae/USER/V5_B'
---
>         '/TauParked/Run2012B-13Jul2012-v1/AOD',
>         '/TauParked/Run2012C-13Jul2012-v1/AOD',
>         '/TauParked/Run2012D-13Jul2012-v1/AOD',
>         '/DoubleMu/StoreResults-Run2012A_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
>         '/DoubleMuParked/StoreResults-Run2012B_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
>         '/DoubleMuParked/StoreResults-Run2012C_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
>         '/DoubleMuParked/StoreResults-Run2012D_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
Index: CMGTools/H2TauTau/python/eventContent/diTau_cff.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/eventContent/diTau_cff.py,v
retrieving revision 1.4
diff -r1.4 diTau_cff.py
91d90
< diTau+=["keep *_mvaMETdiTau__H2TAUTAU"] 
Index: CMGTools/H2TauTau/python/objects/diTauObjectsMVAMET_cff.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/objects/diTauObjectsMVAMET_cff.py,v
retrieving revision 1.8
diff -r1.8 diTauObjectsMVAMET_cff.py
3,5c3,8
< from CMGTools.Common.diTau_cff import *
< from CMGTools.H2TauTau.objects.diTauCuts_cff import * 
< 
---
> from CMGTools.Common.Tools.cmsswRelease                             import cmsswIs44X,cmsswIs52X
> from CMGTools.Common.diTau_cff                                      import *
> from CMGTools.H2TauTau.objects.diTauCuts_cff                        import * 
> from CMGTools.Common.factories.cmgDiTauCor_cfi                      import cmgDiTauCor 
> from CMGTools.H2TauTau.objects.diTauSVFit_cfi                       import diTauSVFit 
> from CMGTools.Common.eventCleaning.goodPVFilter_cfi                 import goodPVFilter
7,12c10,11
< from CMGTools.Common.factories.cmgTauScaler_cfi import  cmgTauScaler
< from CMGTools.Common.factories.cmgDiTauCor_cfi import cmgDiTauCor 
< from CMGTools.H2TauTau.objects.diTauSVFit_cfi import diTauSVFit 
< from CMGTools.Common.Tools.cmsswRelease import cmsswIs44X,cmsswIs52X
< 
< 
---
> from CMGTools.Utilities.mvaMET.mvaMET_cff                           import *
> from CMGTools.Common.factories.cmgBaseMETFromPFMET_cfi              import cmgBaseMETFromPFMET
14d12
< # no correction, no svfit ---------------------------------------------------
16,17c14
< # attaching the cuts defined in this module
< # to the di-tau factory
---
> # build diTau ----------------------------------------------------------
19,25c16
< cmgDiTau.cfg.leg1Collection = 'cmgTauScaler'
< cmgDiTau.cfg.leg2Collection = 'cmgTauScaler'
< 
< # preselection 
< cmgDiTauPreSel = cmgDiTauSel.clone( cut = 'getSelection("cuts_baseline") && leg1().pt()>40 && leg2().pt()>40')
< 
< # Correct tau (+ MET) before MVA MET in di-tau channel
---
> cmgDiTau.cfg.metsigCollection = cms.InputTag('')
27,34c18,26
< cmgDiTauCorPreSel = cmgDiTauCor.clone()
< # cmgDiTauCorPreSel.cfg.metCollection = 'mvaBaseMETDiTau'
< cmgDiTauCorPreSel.cfg.diObjectCollection = 'cmgDiTauPreSel'
< 
< diTauStdSequence = cms.Sequence( cmgTauScaler +
<                                  cmgDiTau +
<                                  cmgDiTauPreSel +
<                                  cmgDiTauCorPreSel
---
> # pT preselection ------------------------------------------------------
> cmgDiTauPreSel = cmgDiTauSel.clone( 
>  src = 'cmgDiTau',
>  cut = 'leg1().pt()>38. && leg2().pt()>38. && leg1().tauID("byCombinedIsolationDeltaBetaCorrRaw3Hits") < 10. &&  leg2().tauID("byCombinedIsolationDeltaBetaCorrRaw3Hits") < 10.',
>  )
>  
> # sequence -------------------------------------------------------------
> diTauStdSequence = cms.Sequence( cmgDiTau       +
>                                  cmgDiTauPreSel
36a29,30
> # mva MET --------------------------------------------------------------
> mvaMETDiTau.recBosonSrc = 'cmgDiTauPreSel'
38,48d31
< # correction and svfit ------------------------------------------------------
< 
< # this is done for preselected di-taus
< 
< # mva MET
< 
< from CMGTools.Common.eventCleaning.goodPVFilter_cfi import goodPVFilter
< 
< from CMGTools.Utilities.mvaMET.mvaMET_cff import *
< # from CMGTools.Common.factories.cmgBaseMETFromPFMET_cfi import cmgBaseMETFromPFMET
< mvaMETDiTau.recBosonSrc = 'cmgDiTauCorPreSel'
50,54c33,41
< cmgDiTauMVAPreSel = cmgDiTauCor.clone()
< # cmgDiTauMVAPreSel.cfg.metCollection = 'mvaBaseMETDiTau'
< cmgDiTauMVAPreSel.cfg.diObjectCollection = 'cmgDiTauPreSel'
< 
< # recoil correction
---
> # correct TauES (after MVA MET according to current baseline) ----------
> cmgDiTauCor = cmgDiTauCor.clone()
> cmgDiTauCor.cfg.diObjectCollection = cms.InputTag('mvaMETDiTau')
> 
> # this selector goes after the TauES correction ------------------------
> cmgDiTauPtSel = cmgDiTauSel.clone(
>     src = cms.InputTag( "cmgDiTauCor" ),
>     cut = cms.string( "leg1().pt()>45. && leg2().pt()>45." )
>     )
56,57c43
< # metForRecoil = 'mvaMETDiTau'
< diTausForRecoil = 'mvaMETDiTau'
---
> # recoil correction ----------------------------------------------------
59,61c45
<     recBosonSrc = diTausForRecoil
<     # ,
<     # metSrc = metForRecoil
---
>     recBosonSrc = 'cmgDiTauPtSel',
64,79c48,53
< # mvaBaseMETDiTau = cmgBaseMETFromPFMET.clone()
< 
< # SWITCH OFF RECOIL CORRECTIONS HERE
< 
< # mvaBaseMETDiTau.cfg.inputCollection = 'recoilCorMETDiTau'
< #mvaBaseMETDiTau.cfg.inputCollection = 'mvaMETDiTau'
< 
< # sequence
< 
< mvaMETSequence = cms.Sequence( goodPVFilter + 
<                                mvaMETDiTau +
<                                recoilCorMETDiTau
<                                # +
<                                # mvaBaseMETDiTau
<                                #    # +
<                                #    # cmgDiTauMVAPreSel
---
> # sequence -------------------------------------------------------------
> mvaMETSequence = cms.Sequence( goodPVFilter      + 
>                                mvaMETDiTau       +
>                                cmgDiTauCor       +
>                                cmgDiTauPtSel     +
>                                recoilCorMETDiTau 
81a56,59
> # SVFit ----------------------------------------------------------------
> cmgDiTauCorSVFitPreSel = diTauSVFit.clone()
> cmgDiTauCorSVFitPreSel.diTauSrc = cms.InputTag('recoilCorMETDiTau')
> #cmgDiTauCorSVFitPreSel.verbose = True
83,92c61
< cmgDiTauCorPreSVFitSel = cmgDiTauSel.clone( src = 'recoilCorMETDiTau',
<                                              cut = 'leg1().pt()>45 && leg2().pt()>45',
<                                              ) 
< 
< # SVFit
< 
< cmgDiTauSVFit = diTauSVFit.clone()
< cmgDiTauSVFit.diTauSrc = 'cmgDiTauCorPreSVFitSel'
< # cmgDiTauSVFit.metsigSrc = 'mvaMETDiTau'
< cmgDiTauCorSVFitFullSel = cmgDiTauSel.clone( src = 'cmgDiTauSVFit',
---
> cmgDiTauCorSVFitFullSel = cmgDiTauSel.clone( src = 'cmgDiTauCorSVFitPreSel',
96,100c65,67
< diTauCorSVFitSequence = cms.Sequence( #
<     mvaMETSequence +
<     # cmgDiTauCorPreSel +
<     cmgDiTauCorPreSVFitSel +
<     cmgDiTauSVFit +
---
> diTauCorSVFitSequence = cms.Sequence(
>     mvaMETSequence          +
>     cmgDiTauCorSVFitPreSel  +
Index: CMGTools/H2TauTau/python/objects/diTauSVFit_cfi.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/objects/diTauSVFit_cfi.py,v
retrieving revision 1.6
diff -r1.6 diTauSVFit_cfi.py
9c9
<     SVFitVersion =  cms.int32(1), # 1 for 2011 version , 2 for new 2012 (slow) version
---
>     SVFitVersion =  cms.int32(2), # 1 for 2011 version , 2 for new 2012 (slow) version
Index: CMGTools/H2TauTau/python/objects/tauCuts_cff.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/objects/tauCuts_cff.py,v
retrieving revision 1.18
diff -r1.18 tauCuts_cff.py
11c11
<         pt = cms.string('{leg}().pt()>{ptCut}'.format(leg=leg, ptCut=ptCut)),
---
>         pt  = cms.string('{leg}().pt()>{ptCut}'.format(leg=leg, ptCut=ptCut)),
Index: CMGTools/H2TauTau/python/proto/analyzers/EmbedWeighter.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/EmbedWeighter.py,v
retrieving revision 1.11
diff -r1.11 EmbedWeighter.py
27,28c27
<         #import pdb ; pdb.set_trace()
<         if self.cfg_comp.isEmbed:
---
>         if self.cfg_comp.isEmbed or self.cfg_comp.name == 'TTJets_emb' :
80c79,83
<         isRHEmbedded = False
---
>         isRHEmbedded = self.cfg_ana.isRecHit
>         if 'PFembedded' in self.cfg_comp.name and isRHEmbedded :
>           'WARNING: in the cfg you set RecHit, but this appears to be PF embedded'
>         if 'RHembedded' in self.cfg_comp.name and not isRHEmbedded :
>           'WARNING: in the cfg you set PF, but this appears to be RecHit embedded'
88c91
<         if self.cfg_comp.isEmbed:
---
>         if self.cfg_comp.isEmbed or self.cfg_comp.name == 'TTJets_emb' :
100c103
<                 return False
---
>                 return False	
112c115
<             
---
> 
Index: CMGTools/H2TauTau/python/proto/analyzers/H2TauTauSyncTreeTauTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/H2TauTauSyncTreeTauTau.py,v
retrieving revision 1.2
diff -r1.2 H2TauTauSyncTreeTauTau.py
4a5,16
> 
> 
> 
> 
> 
> # from CMGTools.RootTools.utils.connect import connect
> # from CMGTools.H2TauTau.proto.samples.run2012.higgs import *
> # aliases = {'/VBF.*START53.*':'HiggsVBF'}
> # pat = '%HTT_22Jul_manzoni_Nom'
> # connect( [HiggsVBF125], pat, 'diTau.*root', aliases, cache=False, verbose=False)
> 
> 
15,16c27,29
< 
<         var( tr, 'run', int)
---
>         var( tr, 'NUP' , int)
>         
>         var( tr, 'run' , int)
18c31
<         var( tr, 'evt', int)
---
>         var( tr, 'evt' , int)
26a40
>         var( tr, 'decaymodeweight')
30c44
<         var( tr, 'm_vis')
---
>         var( tr, 'mvis')
54a69
>         var( tr, 'againstMuonLoose_1')
59a75
>         var( tr, 'againstElectronNewLooseMVA3_1')
81a98
>         var( tr, 'againstMuonLoose_2')
85a103
>         var( tr, 'againstElectronNewLooseMVA3_2')
147d164
< 
160a178,188
>         ####### EMBEDDED WEIGHTS
>         var( tr, 'genfilter')
>         var( tr, 'tauspin'  )
>         var( tr, 'zmumusel' )
>         var( tr, 'muradcorr')
>         var( tr, 'genTau2PtVsGenTau1Pt'    )
>         var( tr, 'genTau2EtaVsGenTau1Eta'  )
>         var( tr, 'genDiTauMassVsGenDiTauPt')
> 
> 
> 
174,182c202
< #         import pdb ; pdb.set_trace()
<         #COLIN : tau tau problem:
<         # not event.thirdLeptonVeto or \
<         # not event.leptonAccept:
<         # len(event.muons)+len(event.electrons) > 0 or no need to apply it here, it is applied in TauTauAnalyzer.py
<         if not event.isSignal or \
<            (hasattr(event, 'thirdLeptonVeto') and not event.thirdLeptonVeto ) or \
<            (hasattr(event, 'leptonAccept')    and not event.leptonAccept    ) :
<             return False
---
>         
184a205
> 
199a221
>         fill( tr, 'NUP', event.NUP )
201,202c223,224
<         fill( tr, 'mcweight', event.eventWeight) 
<         fill( tr, 'puweight', event.vertexWeight) #OK
---
>         #fill( tr, 'mcweight', event.eventWeight) 
>         #fill( tr, 'puweight', event.vertexWeight) #OK
204,206c226,239
<         leg1 = event.diLepton.leg1()
<         leg2 = event.diLepton.leg2()
<         fill( tr, 'effweight', leg1.weight*leg2.weight) 
---
>         
>         ### taus pt hierarchy can be swapped after TauES correction
>         if event.diLepton.leg1().pt() >= event.diLepton.leg2().pt() :   
>           leg1 = event.diLepton.leg1()
>           leg2 = event.diLepton.leg2()
>           fill( tr, 'mt_1', event.diLepton.mTLeg1())
>           fill( tr, 'mt_2', event.diLepton.mTLeg2())
>         if event.diLepton.leg1().pt() < event.diLepton.leg2().pt() :   
>           leg2 = event.diLepton.leg1()
>           leg1 = event.diLepton.leg2()
>           fill( tr, 'mt_2', event.diLepton.mTLeg1())
>           fill( tr, 'mt_1', event.diLepton.mTLeg2())
>         
>         #fill( tr, 'effweight', leg1.weight*leg2.weight) 
209c242
<         fill( tr, 'm_vis', event.diLepton.mass() )
---
>         fill( tr, 'mvis', event.diLepton.mass() )
211c244
<         fill( tr, 'm_sv_Up', -1) #? tau up 3%
---
>         fill( tr, 'm_sv_Up'  , -1) #? tau up 3%
225d257
<         fill( tr, 'mt_1', event.diLepton.mTLeg1())
233a266
>         fill( tr, 'againstMuonLoose_1'           , leg1.tauID("againstMuonLoose"))
237a271
>         fill( tr, 'againstElectronNewLooseMVA3_1', leg1.NewLooseAntiEleMVA3)
239,245c273,279
<         fill( tr, 'gen_pt_2', leg2.physObj.genJetp4().pt())
<         fill( tr, 'pt_2', leg2.pt())
<         fill( tr, 'phi_2', leg2.phi())
<         fill( tr, 'eta_2', leg2.eta())
<         fill( tr, 'm_2', leg2.mass())
<         fill( tr, 'q_2', leg2.charge())
<         fill( tr, 'iso_2', leg2.tauID("byRawIsoMVA"))
---
>         fill( tr, 'gen_pt_2' , leg2.physObj.genJetp4().pt())
>         fill( tr, 'pt_2'     , leg2.pt())
>         fill( tr, 'phi_2'    , leg2.phi())
>         fill( tr, 'eta_2'    , leg2.eta())
>         fill( tr, 'm_2'      , leg2.mass())
>         fill( tr, 'q_2'      , leg2.charge())
>         fill( tr, 'iso_2'    , leg2.tauID("byRawIsoMVA"))
247c281
<         fill( tr, 'passid_2',  1)
---
>         fill( tr, 'passid_2' , 1)
249d282
<         fill( tr, 'mt_2', event.diLepton.mTLeg1())
251,252c284,285
<         fill( tr, 'idweight_2', leg2.idWeight)
<         fill( tr, 'isoweight_2', leg2.isoWeight)
---
>         fill( tr, 'idweight_2'  , leg2.idWeight)
>         fill( tr, 'isoweight_2' , leg2.isoWeight)
257a291
>         fill( tr, 'againstMuonLoose_2'           , leg2.tauID("againstMuonLoose"))
261a296
>         fill( tr, 'againstElectronNewLooseMVA3_2', leg2.NewLooseAntiEleMVA3)
271,278c306,322
<         metsig = self.handles['pfmetsig'].product().significance()
<         fill( tr, 'metcov00', metsig(0,0))
<         fill( tr, 'metcov01', metsig(0,1))
<         fill( tr, 'metcov10', metsig(1,0))
<         fill( tr, 'metcov11', metsig(1,1))
<         
< #         import pdb ; pdb.set_trace()
<         
---
>         fill( tr, 'mvacov00', event.diLepton.metSig().significance()(0,0))
>         fill( tr, 'mvacov01', event.diLepton.metSig().significance()(0,1))
>         fill( tr, 'mvacov10', event.diLepton.metSig().significance()(1,0))
>         fill( tr, 'mvacov11', event.diLepton.metSig().significance()(1,1))
> 
>         fill( tr, 'metcov00', event.metsig.significance()(0,0))
>         fill( tr, 'metcov01', event.metsig.significance()(0,1))
>         fill( tr, 'metcov10', event.metsig.significance()(1,0))
>         fill( tr, 'metcov11', event.metsig.significance()(1,1))
> 
> #         metsig = self.handles['pfmetsig'].product().significance()
> #         fill( tr, 'metcov00', metsig(0,0))
> #         fill( tr, 'metcov01', metsig(0,1))
> #         fill( tr, 'metcov10', metsig(1,0))
> #         fill( tr, 'metcov11', metsig(1,1))
> #         
> #         
285,290c329,334
<         if hasattr( event.diLepton, 'mvaMetSig'):
<           mvametsig = event.diLepton.mvaMetSig.significance()
<           fill( tr, 'mvacov00', mvametsig(0,0))
<           fill( tr, 'mvacov01', mvametsig(0,1))
<           fill( tr, 'mvacov10', mvametsig(1,0))
<           fill( tr, 'mvacov11', mvametsig(1,1))
---
> #         if hasattr( event.diLepton, 'mvaMetSig'):
> #           mvametsig = event.diLepton.mvaMetSig.significance()
> #           fill( tr, 'mvacov00', mvametsig(0,0))
> #           fill( tr, 'mvacov01', mvametsig(0,1))
> #           fill( tr, 'mvacov10', mvametsig(1,0))
> #           fill( tr, 'mvacov11', mvametsig(1,1))
333,335c377,379
<             fill( tr, 'jdphi', abs(vbf.dphi))
<             fill( tr, 'dijetpt', vbf.dijetpt)
<             fill( tr, 'dijetphi', vbf.dijetphi)
---
>             fill( tr, 'jdphi'    , abs(vbf.dphi))
>             fill( tr, 'dijetpt'  , vbf.dijetpt)
>             fill( tr, 'dijetphi' , vbf.dijetphi)
338c382
<             fill( tr, 'ptvis', vbf.ptvis)
---
>             fill( tr, 'ptvis'    , vbf.ptvis)
345,346c389,390
<           fill( tr, 'l1TrigMatched_diTau' , 0)
<           fill( tr, 'l2TrigMatched_diTau' , 0)
---
>           fill( tr, 'l1TrigMatched_diTau' , -1)
>           fill( tr, 'l2TrigMatched_diTau' , -1)
354,356c398,400
<           fill( tr, 'l1TrigMatched_diTauJet' , 0)
<           fill( tr, 'l2TrigMatched_diTauJet' , 0)
<           fill( tr, 'jetTrigMatched_diTauJet', 0)
---
>           fill( tr, 'l1TrigMatched_diTauJet' , -1)
>           fill( tr, 'l2TrigMatched_diTauJet' , -1)
>           fill( tr, 'jetTrigMatched_diTauJet', -1)
364,366c408,410
<           fill( tr, 'triggerWeight_diTauJet' ,0)
<           fill( tr, 'triggerEffMC_diTauJet'  ,0)
<           fill( tr, 'triggerEffData_diTauJet',0)
---
>           fill( tr, 'triggerWeight_diTauJet' ,1)
>           fill( tr, 'triggerEffMC_diTauJet'  ,1)
>           fill( tr, 'triggerEffData_diTauJet',1)
374,376c418,420
<           fill( tr, 'triggerWeight_diTau' ,0)
<           fill( tr, 'triggerEffMC_diTau'  ,0)
<           fill( tr, 'triggerEffData_diTau',0)
---
>           fill( tr, 'triggerWeight_diTau' ,1)
>           fill( tr, 'triggerEffMC_diTau'  ,1)
>           fill( tr, 'triggerEffData_diTau',1)
395a440,459
>         ####### EMBEDDED WEIGHTS
>         fill( tr, 'genfilter'               , event.genfilter                )
>         fill( tr, 'tauspin'                 , event.tauspin                  )
>         fill( tr, 'zmumusel'                , event.zmumusel                 )
>         fill( tr, 'muradcorr'               , event.muradcorr                )
>         fill( tr, 'genTau2PtVsGenTau1Pt'    , event.genTau2PtVsGenTau1Pt     )
>         fill( tr, 'genTau2EtaVsGenTau1Eta'  , event.genTau2EtaVsGenTau1Eta   )
>         fill( tr, 'genDiTauMassVsGenDiTauPt', event.genDiTauMassVsGenDiTauPt )
>         
>         ### MY WEIGTHS
>         fill( tr, 'effweight'       , event.triggerWeight_diTau )
>         fill( tr, 'puweight'        , event.vertexWeight        )
>         fill( tr, 'mcweight'        , 1./event.ntot             )  
>         DMweight = 1.
>         if leg1.decayMode()==0 :
>           DMweight *= 0.88 
>         if leg2.decayMode()==0 :
>           DMweight *= 0.88 
>         fill( tr, 'decaymodeweight' , DMweight)
> 
Index: CMGTools/H2TauTau/python/proto/analyzers/H2TauTauTreeProducerTauTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/H2TauTauTreeProducerTauTau.py,v
retrieving revision 1.12
diff -r1.12 H2TauTauTreeProducerTauTau.py
31,41c31,62
<             var('{pName}Px'.format(pName=pName))
<             var('{pName}Py'.format(pName=pName))
<             var('{pName}Pz'.format(pName=pName))
<             var('{pName}E'.format(pName=pName))
<             var('{pName}Pt'.format(pName=pName))
<             var('{pName}Eta'.format(pName=pName))
<             var('{pName}Phi'.format(pName=pName))
<             var('{pName}Charge'.format(pName=pName))
<             var('{pName}Mass'.format(pName=pName))
<             #var('{pName}Iso'.format(pName=pName))
<             #var('{pName}Id'.format(pName=pName))
---
>             var('{pName}Px'.format(pName=pName)                         )
>             var('{pName}Py'.format(pName=pName)                         )
>             var('{pName}Pz'.format(pName=pName)                         )
>             var('{pName}E'.format(pName=pName)                          )
>             var('{pName}Pt'.format(pName=pName)                         )
>             var('{pName}Eta'.format(pName=pName)                        )
>             var('{pName}Phi'.format(pName=pName)                        )
>             var('{pName}Charge'.format(pName=pName)                     )
>             var('{pName}Mass'.format(pName=pName)                       )            
>             if not ('diTau' in pName or 'jet' in pName):
>               var('{pName}DecayMode'.format(pName=pName)                  )
>               var('{pName}RawDB3HIso'.format(pName=pName)                 )
>               var('{pName}LooseDB3HIso'.format(pName=pName)               )
>               var('{pName}MediumDB3HIso'.format(pName=pName)              )
>               var('{pName}TightDB3HIso'.format(pName=pName)               )
>               var('{pName}LooseEle'.format(pName=pName)                   )
>               var('{pName}MedEle'.format(pName=pName)                     )
>               var('{pName}MVAEle'.format(pName=pName)                     )
>               var('{pName}LooseMu'.format(pName=pName)                    )
>               var('{pName}jetMass'.format(pName=pName)                    )
>               var('{pName}jetPt'.format(pName=pName)                      )
>               var('{pName}againstElectronMVA3raw'.format(pName=pName)     )
>               var('{pName}againstElectronLooseMVA3'.format(pName=pName)   )
>               var('{pName}againstElectronMediumMVA3'.format(pName=pName)  )
>               var('{pName}againstElectronTightMVA3'.format(pName=pName)   )
>               var('{pName}againstElectronVTightMVA3'.format(pName=pName)  )
>               var('{pName}againstElectronMVA3category'.format(pName=pName))
>               var('{pName}againstElectronNewLooseMVA3'.format(pName=pName))
>               var('{pName}againstMuonLoose2'.format(pName=pName)          )
>               var('{pName}againstMuonMedium2'.format(pName=pName)         )
>               var('{pName}againstMuonTight2'.format(pName=pName)          )
>               var('{pName}VertexZ'.format(pName=pName)                    )
43,45c64,65
<             
<         varInt('run')
<         varInt('lumi')
---
>         varInt('run'  )
>         varInt('lumi' )
48c68,70
<         var('visMass')
---
> 	varInt('isRealTau')
> 	
>         var('visMass'  )
53a76,79
>         var('mvacov00')
>         var('mvacov01')
>         var('mvacov10')
>         var('mvacov11')
78,93d103
<         var('l1DecayMode')
<         varInt('l1LooIso')
<         varInt('l1MedIso')
<         varInt('l1TigIso')
<         var('l1RawMVAIso')
<         var('l1RawMVA2Iso')
<         var('l1RawDB3HIso')
<         varInt('l1MedMVAIso')
<         varInt('l1TigMVAIso')
<         varInt('l1LooseDB3HIso')
<         varInt('l1MediumDB3HIso')
<         varInt('l1TightDB3HIso')
<         varInt('l1LooseEle')
<         varInt('l1MedEle')
<         varInt('l1MVAEle')
<         varInt('l1LooseMu')
98,124c108
<         var('l1againstElectronMVA3raw')
<         var('l1againstElectronLooseMVA3')
<         var('l1againstElectronMediumMVA3')
<         var('l1againstElectronTightMVA3')
<         var('l1againstElectronVTightMVA3')
<         var('l1againstMuonLoose2')
<         var('l1againstMuonMedium2')
<         var('l1againstMuonTight2')
< 
<         var('l2DecayMode')
<         varInt('l2LooIso')
<         varInt('l2MedIso')
<         varInt('l2TigIso')
<         var('l2RawMVAIso')
<         var('l2RawMVA2Iso')
<         var('l2RawDB3HIso')
<         varInt('l2MedMVAIso')
<         varInt('l2TigMVAIso')
<         varInt('l2LooseDB3HIso')
<         varInt('l2MediumDB3HIso')
<         varInt('l2TightDB3HIso')
<         
<         
<         varInt('l2LooseEle')
<         varInt('l2MedEle')
<         varInt('l2MVAEle')
<         varInt('l2LooseMu')
---
> 
129,138d112
<         var('l2againstElectronMVA3raw')
<         var('l2againstElectronLooseMVA3')
<         var('l2againstElectronMediumMVA3')
<         var('l2againstElectronTightMVA3')
<         var('l2againstElectronVTightMVA3')
< 
<         var('l2againstMuonLoose2')
<         var('l2againstMuonMedium2')
<         var('l2againstMuonTight2')
< 
142,143d115
<         var('l1VertexZ')
<         var('l2VertexZ')
145,147d116
<         var('genMass')
<         var('genMassSmeared')
<         var('svfitMassSmeared')
150,152d118
<         varInt('l1TrigMatched')
<         varInt('l2TrigMatched')
<         varInt('jetTrigMatched')
154,155c120,134
<         #var('genTauVisMass')
<         #var('genJetVisMass')
---
>         ####### TRIGGER MATCHING
>         varInt( 'l1TrigMatched_diTau'    )
>         varInt( 'l2TrigMatched_diTau'    )
>         varInt( 'l1TrigMatched_diTauJet' )
>         varInt( 'l2TrigMatched_diTauJet' )
>         varInt( 'jetTrigMatched_diTauJet')
> 
>         ####### TRIGGER WEIGHTS
>         var( 'triggerWeight_diTauJet' )
>         var( 'triggerEffMC_diTauJet'  )
>         var( 'triggerEffData_diTauJet')
> 
>         var( 'triggerWeight_diTau' )
>         var( 'triggerEffMC_diTau'  )
>         var( 'triggerEffData_diTau')
156a136
>         ####### JETS VARIABLES
164d143
<         ## Riccardo
166,167c145
<         var('allJetPt')
< 
---
>         #var('allJetPt')
171,172c149
<         ## Riccardo
<         var('sumbJetPt')
---
>         #var('sumbJetPt')
174a152
>         ####### WEIGHTS AND VERTICES
181d158
<         
183a161
>         ####### GENERATOR VARIABLES
185,186c163,170
<         varInt('isFake')
<         varInt('isPhoton')
---
>         varInt('isFake'    )
>         varInt('isZtt'     )
>         varInt('isZee'     )
>         varInt('isZmm'     )
>         varInt('isZj'      )
>         varInt('isZttj'    )
>         varInt('isZttll'   )
>         varInt('isPhoton'  )
188,191c172,177
<         varInt('isMuon')
< 
<         varInt('hasW')
<         varInt('hasZ')
---
>         varInt('isMuon'    )
>         varInt('hasW'      )
>         varInt('hasZ'      )
>         var('genMass'         )
>         #var('genMassSmeared'  )
>         #var('svfitMassSmeared')
193,194c179,180
<         var('electron1Pt')
<         var('muon1Pt')
---
>         ####### THIRD LEPTON VETO
>         var('electron1Pt' )
196d181
<         var('muon1Eta')
197a183,184
>         var('muon1Pt' )
>         var('muon1Eta')
199c186,201
< 
---
>         
>         ####### HIGGS PT WEIGHTS
>         var('higgsPtWeightNom')
>         var('higgsPtWeightUp')
>         var('higgsPtWeightDown')
> 
>         ####### EMBEDDED WEIGHTS
>         var('genfilter'               )
>         var('tauspin'                 )
>         var('zmumusel'                )
>         var('muradcorr'               )
>         var('genTau2PtVsGenTau1Pt'    )
>         var('genTau2EtaVsGenTau1Eta'  )
>         var('genDiTauMassVsGenDiTauPt')
>         
>         ####### NUM OF GEN JETS FOR STITCHING
202,204c204,205
< 	self.triggers=['HLT_LooseIsoPFTau35_Trk20_Prong1_v6',
<          'HLT_LooseIsoPFTau35_Trk20_Prong1_MET70_v6',
<          'HLT_LooseIsoPFTau35_Trk20_Prong1_MET75_v6',
---
> 	self.triggers=[
> 	 'HLT_LooseIsoPFTau35_Trk20_Prong1_v6',
208c209,217
<          'HLT_DoubleMediumIsoPFTau35_Trk5_eta2p1_Prong1_v6']
---
>          'HLT_DoubleMediumIsoPFTau35_Trk5_eta2p1_Prong1_v6',
>          'HLT_Mu17_Mu8_v16',
>          'HLT_Mu17_Mu8_v17',
>          'HLT_Mu17_Mu8_v18',
>          'HLT_Mu17_Mu8_v19',
>          'HLT_Mu17_Mu8_v21',
>          'HLT_Mu17_Mu8_v21',
>          'HLT_Mu17_Mu8_v22',
>          ]
215a225,228
>         #if event.eventId in notPassed :
>         #  print 'WEIRD!! I have this event'
>         #  import pdb ; pdb.set_trace()
> 
222,230c235,266
<             fill('{pName}Px'.format(pName=pName)    , particle.px()*scale     )
<             fill('{pName}Py'.format(pName=pName)    , particle.py()*scale     )
<             fill('{pName}Pz'.format(pName=pName)    , particle.pz()*scale     )
<             fill('{pName}E'.format(pName=pName)     , particle.energy()*scale )
<             fill('{pName}Pt'.format(pName=pName)    , particle.pt()*scale     )
<             fill('{pName}Eta'.format(pName=pName)   , particle.eta()          )
<             fill('{pName}Phi'.format(pName=pName)   , particle.phi()          )
<             fill('{pName}Charge'.format(pName=pName), particle.charge()       )
<             fill('{pName}Mass'.format(pName=pName)  , particle.mass()*scale   )
---
>             fill('{pName}Px'.format(pName=pName)     , particle.px()*scale     )
>             fill('{pName}Py'.format(pName=pName)     , particle.py()*scale     )
>             fill('{pName}Pz'.format(pName=pName)     , particle.pz()*scale     )
>             fill('{pName}E'.format(pName=pName)      , particle.energy()*scale )
>             fill('{pName}Pt'.format(pName=pName)     , particle.pt()*scale     )
>             fill('{pName}Eta'.format(pName=pName)    , particle.eta()          )
>             fill('{pName}Phi'.format(pName=pName)    , particle.phi()          )
>             fill('{pName}Charge'.format(pName=pName) , particle.charge()       )
>             fill('{pName}Mass'.format(pName=pName)   , particle.mass()*scale   )
>             if not ('diTau' in pName or 'jet' in pName):
>               fill('{pName}DecayMode'.format(pName=pName)                  , particle.decayMode()                                         )
>               fill('{pName}RawDB3HIso'.format(pName=pName)                 , particle.tauID("byCombinedIsolationDeltaBetaCorrRaw3Hits")   )
>               fill('{pName}LooseDB3HIso'.format(pName=pName)               , particle.tauID("byLooseCombinedIsolationDeltaBetaCorr3Hits") )
>               fill('{pName}MediumDB3HIso'.format(pName=pName)              , particle.tauID("byMediumCombinedIsolationDeltaBetaCorr3Hits"))
>               fill('{pName}TightDB3HIso'.format(pName=pName)               , particle.tauID("byTightCombinedIsolationDeltaBetaCorr3Hits") )
>               fill('{pName}LooseEle'.format(pName=pName)                   , particle.tauID("againstElectronLoose")                       )
>               fill('{pName}MedEle'.format(pName=pName)                     , particle.tauID("againstElectronMedium")                      )
>               fill('{pName}MVAEle'.format(pName=pName)                     , particle.tauID("againstElectronMVA")                         )
>               fill('{pName}LooseMu'.format(pName=pName)                    , particle.tauID("againstMuonLoose")                           )
>               fill('{pName}jetMass'.format(pName=pName)                    , particle.jetRefp4().mass()                                   )
>               fill('{pName}jetPt'.format(pName=pName)                      , particle.jetRefp4().pt()                                     )
>               fill('{pName}againstElectronMVA3raw'.format(pName=pName)     , particle.tauID("againstElectronMVA3raw")                     )
>               fill('{pName}againstElectronLooseMVA3'.format(pName=pName)   , particle.tauID("againstElectronLooseMVA3")                   )
>               fill('{pName}againstElectronMediumMVA3'.format(pName=pName)  , particle.tauID("againstElectronMediumMVA3")                  )
>               fill('{pName}againstElectronTightMVA3'.format(pName=pName)   , particle.tauID("againstElectronTightMVA3")                   )
>               fill('{pName}againstElectronVTightMVA3'.format(pName=pName)  , particle.tauID("againstElectronVTightMVA3")                  )
>               fill('{pName}againstElectronMVA3category'.format(pName=pName), particle.tauID("againstElectronMVA3category")                )
>               fill('{pName}againstElectronNewLooseMVA3'.format(pName=pName), particle.NewLooseAntiEleMVA3                                 )
>               fill('{pName}againstMuonLoose2'.format(pName=pName)          , particle.tauID("againstMuonLoose2")                          )
>               fill('{pName}againstMuonMedium2'.format(pName=pName)         , particle.tauID("againstMuonMedium2")                         )
>               fill('{pName}againstMuonTight2'.format(pName=pName)          , particle.tauID("againstMuonTight2")                          )
>               fill('{pName}VertexZ'.format(pName=pName)                    , particle.tau.vz()                                            )
233c269
<             fill('run', event.run)
---
>           fill('run', event.run)
235c271
<             fill('lumi', event.lumi)
---
>           fill('lumi', event.lumi)
237c273
<             fill('event', event.eventId)
---
>           fill('event', event.eventId)
238a275,277
>         if hasattr(event,"isRealTau"):
>           fill('isRealTau', event.isRealTau)
>           
244,245d282
<         fill('mt1'      , event.diLepton.mTLeg1()*scale)
<         fill('mt2'      , event.diLepton.mTLeg2()*scale)
249,260c286,297
<         #fill( tr, 'mvacov00', mvametsig(0,0))
<         #fill( tr, 'mvacov01', mvametsig(0,1))
<         #fill( tr, 'mvacov10', mvametsig(1,0))
<         #fill( tr, 'mvacov11', mvametsig(1,1))
<         fill('metPhi', event.diLepton.met().phi()*scale)
<         fill('mex'   , event.diLepton.met().px()*scale)
<         fill('mey'   , event.diLepton.met().py()*scale)
<         fill('met'   , event.diLepton.met().pt()*scale)
<         fill('rawMET', event.rawMET[0].pt())
<         fill('dRtt'  , sqrt(pow(deltaPhi(event.diLepton.leg1().phi(),event.diLepton.leg2().phi()),2)+pow(fabs(event.diLepton.leg1().eta()-event.diLepton.leg2().eta()),2)))
<         fill('dPhitt', deltaPhi(event.diLepton.leg1().phi(),event.diLepton.leg2().phi()))
<         fill('dEtatt', fabs(event.diLepton.leg1().eta()-event.diLepton.leg2().eta()))
---
>         fill('mvacov00', event.diLepton.metSig().significance()(0,0))
>         fill('mvacov01', event.diLepton.metSig().significance()(0,1))
>         fill('mvacov10', event.diLepton.metSig().significance()(1,0))
>         fill('mvacov11', event.diLepton.metSig().significance()(1,1))
>         fill('metPhi'  , event.diLepton.met().phi()*scale)
>         fill('mex'     , event.diLepton.met().px()*scale)
>         fill('mey'     , event.diLepton.met().py()*scale)
>         fill('met'     , event.diLepton.met().pt()*scale)
>         fill('rawMET'  , event.rawMET[0].pt())
>         fill('dRtt'    , sqrt(pow(deltaPhi(event.diLepton.leg1().phi(),event.diLepton.leg2().phi()),2)+pow(fabs(event.diLepton.leg1().eta()-event.diLepton.leg2().eta()),2)))
>         fill('dPhitt'  , deltaPhi(event.diLepton.leg1().phi(),event.diLepton.leg2().phi()))
>         fill('dEtatt'  , fabs(event.diLepton.leg1().eta()-event.diLepton.leg2().eta()))
264,265c301,311
<         leg1=event.diLepton.leg1()
<         leg2=event.diLepton.leg2()
---
>         ### taus pt hierarchy can be swapped after TauES correction
>         if event.diLepton.leg1().pt() >= event.diLepton.leg2().pt() :   
>           leg1 = event.diLepton.leg1()
>           leg2 = event.diLepton.leg2()
>           fill('mt1', event.diLepton.mTLeg1()*scale)
>           fill('mt2', event.diLepton.mTLeg2()*scale)
>         elif event.diLepton.leg1().pt() < event.diLepton.leg2().pt() :   
>           leg2 = event.diLepton.leg1()
>           leg1 = event.diLepton.leg2()
>           fill('mt2', event.diLepton.mTLeg1()*scale)
>           fill('mt1', event.diLepton.mTLeg2()*scale)
273,294d318
<         fill('l1DecayMode', leg1.decayMode() )
<         fill('l1LooIso'    , leg1.tauID("byLooseCombinedIsolationDeltaBetaCorr") )
<         fill('l1MedIso'    , leg1.tauID("byMediumCombinedIsolationDeltaBetaCorr") )
<         fill('l1TigIso'    , leg1.tauID("byTightCombinedIsolationDeltaBetaCorr") )
< 
< 
<         fill('l1RawMVAIso' , leg1.tauID("byRawIsoMVA") )
<         fill('l1RawMVA2Iso', leg1.tauID("byIsolationMVA2raw") )
<         fill('l1RawDB3HIso', leg1.tauID("byCombinedIsolationDeltaBetaCorrRaw3Hits") )
<         fill('l1MedMVAIso' , leg1.tauID("byMediumIsoMVA") )
<         fill('l1TigMVAIso' , leg1.tauID("byTightIsoMVA") )
<         fill('l1LooseDB3HIso' , leg1.tauID("byLooseCombinedIsolationDeltaBetaCorr3Hits"))
<         fill('l1MediumDB3HIso', leg1.tauID("byMediumCombinedIsolationDeltaBetaCorr3Hits"))
<         fill('l1TightDB3HIso' , leg1.tauID("byTightCombinedIsolationDeltaBetaCorr3Hits"))
< 
< 
<         fill('l1LooseEle'  , leg1.tauID("againstElectronLoose") )
<         fill('l1MedEle'    , leg1.tauID("againstElectronMedium") )
<         fill('l1MVAEle'    , leg1.tauID("againstElectronMVA") )
<         fill('l1LooseMu'   , leg1.tauID("againstMuonLoose2") )
<         fill('l1jetMass'   , leg1.jetRefp4().mass() )
<         fill('l1jetPt'     , leg1.jetRefp4().pt() )
298,305d321
<         fill('l1againstElectronMVA3raw'   , leg1.tauID("againstElectronMVA3raw"))
<         fill('l1againstElectronLooseMVA3' , leg1.tauID("againstElectronLooseMVA3"))
<         fill('l1againstElectronMediumMVA3', leg1.tauID("againstElectronMediumMVA3"))
<         fill('l1againstElectronTightMVA3' , leg1.tauID("againstElectronTightMVA3"))
<         fill('l1againstElectronVTightMVA3', leg1.tauID("againstElectronVTightMVA3"))
<         fill('l1againstMuonLoose2'        , leg1.tauID("againstMuonLoose2"))
<         fill('l1againstMuonMedium2'       , leg1.tauID("againstMuonMedium2"))
<         fill('l1againstMuonTight2'        , leg1.tauID("againstMuonTight2"))
307,329d322
< #         import pdb ; pdb.set_trace()
< 
< 
<         fill('l2DecayMode', leg2.decayMode() )
<         fill('l2LooIso'   , leg2.tauID("byLooseCombinedIsolationDeltaBetaCorr") )
<         fill('l2MedIso'   , leg2.tauID("byMediumCombinedIsolationDeltaBetaCorr") )
<         fill('l2TigIso'   , leg2.tauID("byTightCombinedIsolationDeltaBetaCorr") )
<         
<         fill('l2RawMVAIso'    , leg2.tauID("byRawIsoMVA") )
<         fill('l2RawMVA2Iso'   , leg2.tauID("byIsolationMVA2raw") )
<         fill('l2RawDB3HIso'   , leg2.tauID("byCombinedIsolationDeltaBetaCorrRaw3Hits") )        
<         fill('l2MedMVAIso'    , leg2.tauID("byMediumIsoMVA") )
<         fill('l2TigMVAIso'    , leg2.tauID("byTightIsoMVA") )
<         fill('l2LooseDB3HIso' , leg2.tauID("byLooseCombinedIsolationDeltaBetaCorr3Hits"))
<         fill('l2MediumDB3HIso', leg2.tauID("byMediumCombinedIsolationDeltaBetaCorr3Hits"))
<         fill('l2TightDB3HIso' , leg2.tauID("byTightCombinedIsolationDeltaBetaCorr3Hits"))
< 
<         fill('l2LooseEle', leg2.tauID("againstElectronLoose") )
<         fill('l2MedEle'  , leg2.tauID("againstElectronMedium") )
<         fill('l2MVAEle'  , leg2.tauID("againstElectronMVA") )
<         fill('l2LooseMu' , leg2.tauID("againstMuonLoose2") )
<         fill('l2jetMass' , leg2.jetRefp4().mass() )
<         fill('l2jetPt'   , leg2.jetRefp4().pt() )
334,345d326
<         fill('l2againstElectronMVA3raw'   , leg2.tauID("againstElectronMVA3raw"))
<         fill('l2againstElectronLooseMVA3' , leg2.tauID("againstElectronLooseMVA3"))
<         fill('l2againstElectronMediumMVA3', leg2.tauID("againstElectronMediumMVA3"))
<         fill('l2againstElectronTightMVA3' , leg2.tauID("againstElectronTightMVA3"))
<         fill('l2againstElectronVTightMVA3', leg2.tauID("againstElectronVTightMVA3"))
<         fill('l2againstMuonLoose2'        , leg2.tauID("againstMuonLoose2"))
<         fill('l2againstMuonMedium2'       , leg2.tauID("againstMuonMedium2"))
<         fill('l2againstMuonTight2'        , leg2.tauID("againstMuonTight2"))
< 
<         fill('l1VertexZ', leg1.tau.vz() )
<         fill('l2VertexZ', leg2.tau.vz() )
< 
366,372c347,350
< 	if hasattr(event,"l1TrigMatched"):
<             fill('l1TrigMatched', event.l1TrigMatched )
< 	else:
<             fill('l1TrigMatched', -1 )
< 
< 	if hasattr(event,"l2TrigMatched"):
<             fill('l2TrigMatched', event.l2TrigMatched )
---
>         # trigger matching for diTau trigger present in parked dataset 
> 	if hasattr(event,"l1TrigMatched_diTau") and hasattr(event,"l2TrigMatched_diTau") :
>           fill( 'l1TrigMatched_diTau' , event.l1TrigMatched_diTau )
>           fill( 'l2TrigMatched_diTau' , event.l2TrigMatched_diTau )
374c352,353
<             fill('l2TrigMatched', -1 )
---
>           fill( 'l1TrigMatched_diTau' , -1)
>           fill( 'l2TrigMatched_diTau' , -1)
376,377c355,359
< 	if hasattr(event,"jetTrigMatched"):
<             fill('jetTrigMatched', event.jetTrigMatched )
---
>         # trigger matching for diTauJet trigger 
> 	if hasattr(event,"l1TrigMatched_diTauJet") and hasattr(event,"l2TrigMatched_diTauJet") and hasattr(event,"jetTrigMatched_diTauJet"):
>           fill( 'l1TrigMatched_diTauJet' , event.l1TrigMatched_diTauJet )
>           fill( 'l2TrigMatched_diTauJet' , event.l2TrigMatched_diTauJet )
>           fill( 'jetTrigMatched_diTauJet', event.jetTrigMatched_diTauJet)
379,395c361,383
<             fill('jetTrigMatched', -1 )
< 
<         #if event.diLepton.leg1().genTaup4() and event.diLepton.leg2().genTaup4():
<         #  fill('genTauVisMass', sqrt(
< 	#   pow(event.diLepton.leg1().genTaup4().energy()+event.diLepton.leg2().genTaup4().energy(),2)
< 	#   -pow(event.diLepton.leg1().genTaup4().px()+event.diLepton.leg2().genTaup4().px(),2)
< 	#   -pow(event.diLepton.leg1().genTaup4().py()+event.diLepton.leg2().genTaup4().py(),2)
< 	#   -pow(event.diLepton.leg1().genTaup4().pz()+event.diLepton.leg2().genTaup4().pz(),2)
< 	#   ))
< 
<         #if event.diLepton.leg1().genJetp4() and event.diLepton.leg2().genJetp4():
<         #  fill('genJetVisMass', sqrt(
< 	#   pow(event.diLepton.leg1().genJetp4().energy()+event.diLepton.leg2().genJetp4().energy(),2)
< 	#   -pow(event.diLepton.leg1().genJetp4().px()+event.diLepton.leg2().genJetp4().px(),2)
< 	#   -pow(event.diLepton.leg1().genJetp4().py()+event.diLepton.leg2().genJetp4().py(),2)
< 	#   -pow(event.diLepton.leg1().genJetp4().pz()+event.diLepton.leg2().genJetp4().pz(),2)
< 	#   ))
---
>           fill( 'l1TrigMatched_diTauJet' , -1)
>           fill( 'l2TrigMatched_diTauJet' , -1)
>           fill( 'jetTrigMatched_diTauJet', -1)
> 
> 
> 	if hasattr(event,"triggerWeight_diTauJet") and hasattr(event,"triggerEffMC_diTauJet") and hasattr(event,"triggerEffData_diTauJet"):
>           fill( 'triggerWeight_diTauJet' ,event.triggerWeight_diTauJet )
>           fill( 'triggerEffMC_diTauJet'  ,event.triggerEffMC_diTauJet  )
>           fill( 'triggerEffData_diTauJet',event.triggerEffData_diTauJet)
>         else :
>           fill( 'triggerWeight_diTauJet' ,1)
>           fill( 'triggerEffMC_diTauJet'  ,1)
>           fill( 'triggerEffData_diTauJet',1)
> 
> 
> 	if hasattr(event,"triggerWeight_diTau") and hasattr(event,"triggerEffMC_diTau") and hasattr(event,"triggerEffData_diTau"):
>           fill( 'triggerWeight_diTau' ,event.triggerWeight_diTau )
>           fill( 'triggerEffMC_diTau'  ,event.triggerEffMC_diTau  )
>           fill( 'triggerEffData_diTau',event.triggerEffData_diTau)
>         else :
>           fill( 'triggerWeight_diTau' ,1)
>           fill( 'triggerEffMC_diTau'  ,1)
>           fill( 'triggerEffData_diTau',1)
440,442d427
<         
<           
< 
463c448,464
< 
---
>         
>         if hasattr( event, 'isZtt') and hasattr( event, 'isZee') and hasattr( event, 'isZmm') and hasattr( event, 'isZj') and hasattr( event, 'isZttll') and hasattr( event, 'isZttj') : 
>           fill('isZtt'  , event.isZtt   )
>           fill('isZee'  , event.isZee   )
>           fill('isZmm'  , event.isZmm   )
>           fill('isZj'   , event.isZj    )
>           fill('isZttll', event.isZttll )
>           fill('isZttj' , event.isZttj  )
>         else :
>           fill('isZtt'  , -1 )
>           fill('isZee'  , -1 )
>           fill('isZmm'  , -1 )
>           fill('isZj'   , -1 )
>           fill('isZttll', -1 )
>           fill('isZttj' , -1 )
>         
>         
505a507,519
>         fill('higgsPtWeightNom' ,event.higgsPtWeightNom )
>         fill('higgsPtWeightUp'  ,event.higgsPtWeightUp  )
>         fill('higgsPtWeightDown',event.higgsPtWeightDown)
> 
>         ####### EMBEDDED WEIGHTS
>         fill( 'genfilter'               , event.genfilter                )
>         fill( 'tauspin'                 , event.tauspin                  )
>         fill( 'zmumusel'                , event.zmumusel                 )
>         fill( 'muradcorr'               , event.muradcorr                )
>         fill( 'genTau2PtVsGenTau1Pt'    , event.genTau2PtVsGenTau1Pt     )
>         fill( 'genTau2EtaVsGenTau1Eta'  , event.genTau2EtaVsGenTau1Eta   )
>         fill( 'genDiTauMassVsGenDiTauPt', event.genDiTauMassVsGenDiTauPt )
> 
Index: CMGTools/H2TauTau/python/proto/analyzers/JetWeighter.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/JetWeighter.py,v
retrieving revision 1.2
diff -r1.2 JetWeighter.py
40a41
> 	#import pdb ; pdb.set_trace()
48,49c49,50
<             self.jet1.triggerEffData = self.trigEff.lepEff( self.jet1.pt(),
<                                                               self.jet1.eta() )
---
>             #import pdb ; pdb.set_trace()
>             self.jet1.triggerEffData = self.trigEff.lepEff( self.jet1.pt(), self.jet1.eta() )
52,55c53,55
<             if self.trigEff.lepEffMC is not None and \
<                    len(self.cfg_comp.triggers)>0:
<                 self.jet1.triggerEffMC = self.trigEff.lepEffMC( self.jet1.pt(),
<                                                                   self.jet1.eta() )
---
>             #import pdb ; pdb.set_trace()
>             if self.trigEff.lepEffMC is not None and len(self.cfg_comp.triggers)>0:
>                 self.jet1.triggerEffMC = self.trigEff.lepEffMC( self.jet1.pt(), self.jet1.eta() )
60a61,62
>         #import pdb ; pdb.set_trace()
> 
74a77,87
> 
> ######## commented for now, need to change the variables names
> #         event.eventWeight *= self.jet1.weight
> # 	if not hasattr(event,"triggerWeight") : event.triggerWeight  = 1.0
> # 	event.triggerWeight  *= self.jet1.triggerWeight
> # 	if not hasattr(event,"triggerEffMC")  : event.triggerEffMC   = 1.0
> #         event.triggerEffMC   *= self.jet1.triggerEffMC
> # 	if not hasattr(event,"triggerEffData"): event.triggerEffData = 1.0
> #         event.triggerEffData *= self.jet1.triggerEffData
> 
> 
76,77c89,97
< 	if not hasattr(event,"triggerWeight"): event.triggerWeight=1.0
< 	event.triggerWeight *= self.jet1.triggerWeight
---
> 	if not hasattr(event,"triggerWeight_diTauJet") : event.triggerWeight_diTauJet  = 1.0
> 	event.triggerWeight_diTauJet  *= self.jet1.triggerWeight
> 	if not hasattr(event,"triggerEffMC_diTauJet")  : event.triggerEffMC_diTauJet   = 1.0
>         event.triggerEffMC_diTauJet   *= self.jet1.triggerEffMC
> 	if not hasattr(event,"triggerEffData_diTauJet"): event.triggerEffData_diTauJet = 1.0
>         event.triggerEffData_diTauJet *= self.jet1.triggerEffData
> 
> 
> 
Index: CMGTools/H2TauTau/python/proto/analyzers/LeptonWeighter.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/LeptonWeighter.py,v
retrieving revision 1.20
diff -r1.20 LeptonWeighter.py
20,24c20,22
<         if (self.cfg_comp.isMC or self.cfg_comp.isEmbed) and \
<                not ( hasattr(self.cfg_ana,'disable') and self.cfg_ana.disable is True ):
<                 self.trigEff = TriggerEfficiency()
<                 self.trigEff.lepEff = getattr( self.trigEff,
<                                                self.cfg_ana.effWeight )
---
>         if (self.cfg_comp.isMC or self.cfg_comp.isEmbed) and not ( hasattr(self.cfg_ana,'disable') and self.cfg_ana.disable is True ):
>                 self.trigEff          = TriggerEfficiency()
>                 self.trigEff.lepEff   = getattr( self.trigEff, self.cfg_ana.effWeight )
27,28c25
<                     self.trigEff.lepEffMC = getattr( self.trigEff,
<                                                      self.cfg_ana.effWeightMC )
---
>                   self.trigEff.lepEffMC = getattr( self.trigEff,self.cfg_ana.effWeightMC )
34c31
<         self.averages.add('weight', Average('weight') )
---
>         self.averages.add('weight'       , Average('weight') )
36,40c33,37
<         self.averages.add('eff_data', Average('eff_data') )
<         self.averages.add('eff_MC', Average('eff_MC') )
<         self.averages.add('recEffWeight', Average('recEffWeight') )
<         self.averages.add('idWeight', Average('idWeight') )
<         self.averages.add('isoWeight', Average('isoWeight') )
---
>         self.averages.add('eff_data'     , Average('eff_data') )
>         self.averages.add('eff_MC'       , Average('eff_MC') )
>         self.averages.add('recEffWeight' , Average('recEffWeight') )
>         self.averages.add('idWeight'     , Average('idWeight') )
>         self.averages.add('isoWeight'    , Average('isoWeight') )
46,47c43,44
<         lep.weight = 1
<         lep.triggerWeight = 1
---
>         lep.weight         = 1
>         lep.triggerWeight  = 1
49,54c46,51
<         lep.triggerEffMC = 1 
<         lep.recEffWeight = 1
<         lep.idWeight = 1
<         lep.isoWeight = 1 
<         if (self.cfg_comp.isMC or self.cfg_comp.isEmbed) and \
<            not ( hasattr(self.cfg_ana,'disable') and self.cfg_ana.disable is True ):
---
>         lep.triggerEffMC   = 1 
>         lep.recEffWeight   = 1
>         lep.idWeight       = 1
>         lep.isoWeight      = 1 
> 
>         if (self.cfg_comp.isMC or self.cfg_comp.isEmbed) and not ( hasattr(self.cfg_ana,'disable') and self.cfg_ana.disable is True ):
56,63c53,59
<             lep.triggerEffData = self.trigEff.lepEff( lep.pt(),
<                                                       lep.eta() )
<             lep.triggerWeight = lep.triggerEffData
< 
<             if self.trigEff.lepEffMC is not None and \
<                    len(self.cfg_comp.triggers)>0:
<                 lep.triggerEffMC = self.trigEff.lepEffMC( lep.pt(),
<                                                           lep.eta() )
---
> 
>             lep.triggerEffData = self.trigEff.lepEff( lep.pt(), lep.eta() )
>             lep.triggerWeight  = lep.triggerEffData
> 
>             if self.trigEff.lepEffMC is not None and len(self.cfg_comp.triggers)>0:
>                 lep.triggerEffMC = self.trigEff.lepEffMC( lep.pt(), lep.eta() )
>                 
79c75,76
< 
---
>             
>             #### these are == 1. for tautau
85,86c82,107
<         lep.recEffWeight = lep.idWeight * lep.isoWeight
<         lep.weight = lep.triggerWeight * lep.recEffWeight
---
>         lep.recEffWeight = lep.idWeight      * lep.isoWeight
>         lep.weight       = lep.triggerWeight * lep.recEffWeight
> 
>         #### fill variables for diTauJet
>         if self.cfg_ana.effWeightMC == 'eff2012IsoTau19fbMC_Simone' :        
> 
> 	  if not hasattr(event,"triggerWeight_diTauJet") : event.triggerWeight_diTauJet = 1.0
> 	  if not hasattr(event,"triggerEffMC_diTauJet")  : event.triggerEffMC_diTauJet  = 1.0
> 	  if not hasattr(event,"triggerEffData_diTauJet"): event.triggerEffData_diTauJet= 1.0
> 
>           event.eventWeight             *= lep.weight
>           event.triggerWeight_diTauJet  *= lep.triggerWeight
>           event.triggerEffMC_diTauJet   *= lep.triggerEffMC
>           event.triggerEffData_diTauJet *= lep.triggerEffData
> 
>         #### fill variables for diTau
>         if self.cfg_ana.effWeightMC == 'eff2012IsoParkedTau19fbMC_Simone' :        
> 
> 	  if not hasattr(event,"triggerWeight_diTau") : event.triggerWeight_diTau = 1.0
> 	  if not hasattr(event,"triggerEffMC_diTau")  : event.triggerEffMC_diTau  = 1.0
> 	  if not hasattr(event,"triggerEffData_diTau"): event.triggerEffData_diTau= 1.0
> 
>           event.eventWeight          *= lep.weight
>           event.triggerWeight_diTau  *= lep.triggerWeight
>           event.triggerEffMC_diTau   *= lep.triggerEffMC
>           event.triggerEffData_diTau *= lep.triggerEffData
88,90d108
<         event.eventWeight *= lep.weight
< 	if not hasattr(event,"triggerWeight"): event.triggerWeight=1.0
<         event.triggerWeight *= lep.triggerWeight
Index: CMGTools/H2TauTau/python/proto/analyzers/NJetsAnalyzer.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/NJetsAnalyzer.py,v
retrieving revision 1.1
diff -r1.1 NJetsAnalyzer.py
60a61
>             #import pdb ; pdb.set_trace()
Index: CMGTools/H2TauTau/python/proto/analyzers/TauTauAnalyzer.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/TauTauAnalyzer.py,v
retrieving revision 1.22
diff -r1.22 TauTauAnalyzer.py
42,43d41
< 
< 
45c43
<             self.mchandles['genParticles'] = AutoHandle( 'genParticlesPruned','std::vector<reco::GenParticle>' )
---
>             self.mchandles['genParticles']     = AutoHandle( 'genParticlesPruned','std::vector<reco::GenParticle>' )
47,50c45,51
<             self.mchandles['generator'] = AutoHandle( 'generator','GenEventInfoProduct' )
<         if self.cfg_comp.isMC and ("DY" in self.cfg_comp.name or "W" in self.cfg_comp.name and not "WW" in self.cfg_comp.name and not "WZ" in self.cfg_comp.name) :
<             self.mchandles['source'] =  AutoHandle('source','LHEEventProduct')
< 
---
>             self.mchandles['generator']        = AutoHandle( 'generator','GenEventInfoProduct' )
>         if self.cfg_comp.isMC and ("DY" in self.cfg_comp.name or "W" in self.cfg_comp.name and not "WW" in self.cfg_comp.name and not "WZ" in self.cfg_comp.name and not "_new" in self.cfg_comp.name) :
>             self.mchandles['source']           =  AutoHandle('source','LHEEventProduct')
>         #if self.cfg_comp.isEmb or self.cfg_comp.name == "TTJets_emb" :
>         if 'emb' in self.cfg_comp.name :
>             self.embhandles['genParticlesEmb'] = AutoHandle( 'genParticles','std::vector<reco::GenParticle>' )
>               
118,121d118
<         #if event.eventId in notPassed :
<         #  print 'before anything'
<         #  import pdb ; pdb.set_trace()
<           
132,133d128
<  
< 	result = self.selectionSequence(event, fillCounter=True)
138a134
> 	#event.hltPath = []
144a141
>                 #event.hltPath.append(trig) 
145a143,144
>  
> 	result = self.selectionSequence(event, fillCounter=True)
147d145
< 	  	  
190a189
>         #import pdb ; pdb.set_trace()
192c191,197
<         if self.cfg_comp.isMC and ("DY" in self.cfg_comp.name or "W" in self.cfg_comp.name and not "WW" in self.cfg_comp.name and not "WZ" in self.cfg_comp.name) :
---
>         #if self.cfg_comp.isEmb or self.cfg_comp.name == "TTJets_emb" :
>         if 'emb' in self.cfg_comp.name :
>             genParticles = self.embhandles['genParticlesEmb'].product()
>             #import pdb ; pdb.set_trace()
>             self.splitDYJets( event, genParticles, event.diLepton, require_status=False)
> 
>         if self.cfg_comp.isMC and ("DY" in self.cfg_comp.name or "W" in self.cfg_comp.name and not "WW" in self.cfg_comp.name and not "WZ" in self.cfg_comp.name and not "_new" in self.cfg_comp.name) :
200a206,207
>             
>             # useless now
202,205c209,212
< 	    event.leg1DeltaR=leg1DeltaR
<             event.leg2DeltaR=leg2DeltaR
<             if leg1DeltaR>-1 and leg1DeltaR < 0.1 and \
<                leg2DeltaR>-1 and leg2DeltaR < 0.1:
---
> 	    event.leg1DeltaR = leg1DeltaR
>             event.leg2DeltaR = leg2DeltaR
>             if leg1DeltaR>-1 and leg1DeltaR < 0.3 and \
>                leg2DeltaR>-1 and leg2DeltaR < 0.3 :
208a216,218
>           
>             self.splitDYJets( event, genParticles, event.diLepton)
>                         
218,223c228,230
<                 if abs(gen.pdgId()) in [23, 25, 35, 36, 37]:
<                     event.genMass=gen.mass()
<                 if abs(gen.pdgId()) in [23]:
<                     event.hasW=True
<                 if abs(gen.pdgId()) in [24]:
<                     event.hasZ=True
---
>         
>         #import pdb ; pdb.set_trace()
> 
266a274
>         #import pdb ; pdb.set_trace()
316a325
>         #import pdb ; pdb.set_trace()
336c345
<         if len(event.muons)>0+len(event.electrons) > 0: ## FOR SYNCHING!!!
---
>         if len(event.muons)+len(event.electrons)> 0: 
339c348
<         if "DY" in self.cfg_comp.name or "Higgs" in self.cfg_comp.name or self.cfg_comp.isEmbed:
---
>         if ("DY" in self.cfg_comp.name and event.isZtt) or "Higgs" in self.cfg_comp.name or (self.cfg_comp.isEmbed and event.isZtt):
346c355,368
<         
---
>         #import pdb ; pdb.set_trace()
> 
> 
>         if ("DY" in self.cfg_comp.name and event.isZtt) or "Higgs" in self.cfg_comp.name or (self.cfg_comp.isEmbed and event.isZtt):
>           if event.leg1.decayMode() == 0 :
>             event.leg1.prongWeight = 0.88
>           else :
>             event.leg1.prongWeight = 1.
>           if event.leg2.decayMode() == 0 :
>             event.leg2.prongWeight = 0.88
>           else :
>             event.leg2.prongWeight = 1.
>         #import pdb ; pdb.set_trace()
> 
350a373,401
>    
>         event.ntot = 1.
> #         ngenevts = { 'W1Jets'         : 23141598.* 1.0           ,
> #                      'W2Jets'         : 34044921.* 1.0           ,
> #                      'W3Jets'         : 15539503.* 0.997191011236,
> #                      'W4Jets'         : 13382803.* 0.996168582375,
> #                      #'WJets'         : 18393090 * 1.0           ,
> #                      'WJets'          : 57709905.* 1.0           ,
> #                      'HiggsGGH125'    : 968134.  * 1.0           ,
> #                      'HiggsVBF125'    : 998836.  * 1.0           ,
> #                      'TTJetsFullLept' : 12011428 * 1.0           ,
> #                      'TTJetsHadronic' : 31223821 * 1.0           ,
> #                      'TTJetsSemiLept' : 24953451 * 1.0           ,
> #                      'DYJets'         : 30459503 * 1.0           ,
> #                      'HiggsSUSYBB'    : 999976   * 1.0           ,
> #                      'HiggsSUSYGluGlu': 981688   * 1.0           ,
> #                      'HiggsSUSYBB'    : 996960   * 1.0           ,
> #                      'HiggsSUSYGluGlu': 985800   * 1.0           ,
> #                    }
>         
>         ngenevts = { 
>                      'HiggsSUSYGluGlu110': 1000348 * 0.990003 ,
>                    }
>         
>         #import pdb ; pdb.set_trace()
>         for name in ngenevts.keys() :
>           if name in self.cfg_comp.name :   
>             event.ntot = ngenevts[name]
> 
368d418
<         ## for embedded no hltPaths (for now)
371a422,423
>         #import pdb ; pdb.set_trace() 
>         
420d471
<               
469a521
>           #if len(event.hltPath)==0 : return False
472,480d523
<         if "DY" in self.cfg_comp.name or "Higgs" in self.cfg_comp.name or self.cfg_comp.isEmbed:
<           if event.leg1.decayMode() == 0 :
<             event.leg1.prongWeight = 0.88
<           else :
<             event.leg1.prongWeight = 1.
<           if event.leg2.decayMode() == 0 :
<             event.leg2.prongWeight = 0.88
<           else :
<             event.leg2.prongWeight = 1.
499,500c542,543
< 	        leg.tauID("againstElectronLoose")  > -0.5     and \
< 	        leg.tauID("againstMuonLoose")      > -0.5)
---
> 	        leg.tauID("againstElectronLoose")  > 0.5     and \
> 	        leg.tauID("againstMuonLoose")      > 0.5)
517,518c560,561
< 	        leg.tauID("againstElectronLoose")  > -0.5     and \
< 	        leg.tauID("againstMuonLoose")      > -0.5)
---
> 	        leg.tauID("againstElectronLoose")  > 0.5     and \
> 	        leg.tauID("againstMuonLoose")      > 0.5)
521d563
<     
642a685,772
> 
>     def match(self, myPair, genParticles):
>       
>       dR2leg1Min = 999.
>       dR2leg2Min = 999.
>       dR2leg1 = 999.
>       dR2leg2 = 999.
> 
>       for genPart in genParticles:
>         dR2leg1 = deltaR2(myPair.leg1().eta(), myPair.leg1().phi(), genPart.eta(), genPart.phi() )
>         dR2leg2 = deltaR2(myPair.leg2().eta(), myPair.leg2().phi(), genPart.eta(), genPart.phi() )
>         if dR2leg1 <  dR2leg1Min: dR2leg1Min = dR2leg1
>         if dR2leg2 <  dR2leg2Min: dR2leg2Min = dR2leg2
> 
>       self.leg1DeltaR = math.sqrt( dR2leg1Min )
>       self.leg2DeltaR = math.sqrt( dR2leg2Min )
>       return (self.leg1DeltaR, self.leg2DeltaR)        
> 
>     def splitDYJets( self, event, genParticles, myPair, require_status = True, bosons = [23,25,35,36]) : 
>       
>       ## require_status: yes, status==3 for MCs, but status may vary for emb, therefore it is switched off
>       ## PDG Id: e 11, mu 13, tau 15, Z 23, h 25, H 35, A 36, H+ 37  
>       ## DYJets sample gets split by gen matching and
>       ## Higgs samples are given a flag (isZtt) to require reco taus matched to gen taus
>       	    
>       ## flag to split DYJets into ZTT, ZL, ZJ
>       event.isZtt   = False  ## two taus gen matched
>       event.isZttj  = False  ## two taus that fail the matching
>       event.isZee   = False  ## two electrons, both fake taus
>       event.isZmm   = False  ## two muons, both fake taus
>       event.isZttll = False  ## ZTT->LL, both lepton fake taus
>       event.isZj    = False  ## whatever else
>       
>       ## lists with the index of Z boson's daughters
>       genTausFromZ       = []
>       genMuonsFromZ      = []
>       genElectronsFromZ  = []
>       genLeptonsFromTaus = []
>                         
>       for index, gen in enumerate(genParticles):
>         
>         status   = gen.status()
>         id       = gen.pdgId()
>         motherId = 0
>         if gen.numberOfMothers()>0 :
>           motherId = gen.mother().pdgId()
>         
>         if ((not require_status) or status==3) and abs(id)==15 and abs(motherId) in bosons : genTausFromZ.append(index)
>         if ((not require_status) or status==3) and abs(id)==13 and abs(motherId) in bosons : genMuonsFromZ.append(index)
>         if ((not require_status) or status==3) and abs(id)==11 and abs(motherId) in bosons : genElectronsFromZ.append(index)
>         if ((not require_status) or status==3) and abs(id)==11 and abs(motherId)==15 : genLeptonsFromTaus.append(index)
>         if ((not require_status) or status==3) and abs(id)==13 and abs(motherId)==15 : genLeptonsFromTaus.append(index)
>     
>         if abs(gen.pdgId()) in [23] : event.hasW = True
>         if abs(gen.pdgId()) in [24] : event.hasZ = True
>     
>         if abs(gen.pdgId()) in [23, 25, 35, 36, 37] : event.genMass = gen.mass()
> 
>       if   len(genTausFromZ)      == 2 : 
>         ##### we don't match the embedded and therefore we don't match the DY->TT
>         #event.isZtt = True
>         ##### now we do 26/8/2013
>         leg1TauDR, leg2TauDR = self.match( myPair, [ genParticles[genTausFromZ[0]],genParticles[genTausFromZ[1]] ] )
>         if leg1TauDR < 0.3 and leg2TauDR < 0.3 :
>           event.isZtt = True   
>         else :
>           event.isZttj = True   
>       
>       elif len(genMuonsFromZ)     == 2 : 
>         leg1MuDR, leg2MuDR   = self.match( myPair, [ genParticles[genMuonsFromZ[0]],genParticles[genMuonsFromZ[1]] ] )
>         if leg1MuDR < 0.3  and leg2MuDR < 0.3 :
>           event.isZmm = True    
>       
>       elif len(genElectronsFromZ) == 2 : 
>         leg1ElDR, leg2ElDR   = self.match( myPair, [ genParticles[genElectronsFromZ[0]],genParticles[genElectronsFromZ[1]] ] )              
>         if leg1ElDR < 0.3  and leg2ElDR < 0.3 :
>           event.isZee = True  
> 
>       elif len(genLeptonsFromTaus) == 2 : 
>         leg1LepDR, leg2LepDR   = self.match( myPair, [ genParticles[genLeptonsFromTaus[0]],genParticles[genLeptonsFromTaus[1]] ] )              
>         if leg1LepDR < 0.3  and leg2LepDR < 0.3 :
>           event.isZttll = True  
>       
>       ## needs to be rerun with all samples
>       #if not(event.isZtt or event.isZee or event.isZmm or event.isZttll or event.isZttj) :
>       if not(event.isZtt or event.isZee or event.isZmm) :
>         event.isZj  = True
>         
Index: CMGTools/H2TauTau/python/proto/analyzers/VBFAnalyzer.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/analyzers/VBFAnalyzer.py,v
retrieving revision 1.26
diff -r1.26 VBFAnalyzer.py
39d38
<         # import pdb; pdb.set_trace()
73a73
>         event.looseJets = []
94a95,96
>             if self.testJetLoose( jet ):
>                 event.looseJets.append(jet)
116d117
<         
117a119,123
>         event.cleanJetsLoose, dummy = cleanObjectCollection( event.looseJets,
>                                                         masks = [leg1,
>                                                                  leg2 ],
>                                                         deltaRMin = 0.5 )
>         
208d213
< 
222a228,233
>     def testJetLoose( self, jet ):
>         # 2 is loose pile-up jet id
>         return jet.pt() > self.cfg_ana.looseJetPt and \
>                abs( jet.eta() ) < self.cfg_ana.jetEta and \
>                self.testJetID(jet)
>                # jet.passPuJetId('full', 2)
Index: CMGTools/H2TauTau/python/proto/plotter/DYEstimate_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/DYEstimate_diTau.py,v
retrieving revision 1.3
diff -r1.3 DYEstimate_diTau.py
8,10c8,10
< antiLeptons  = ' && l2againstElectronLooseMVA3>0.5 '
< antiLeptons += ' && l1LooseEle>0.5 && l2LooseEle>0.5'
< antiLeptons += ' && l1againstMuonLoose2>0.5 && l2againstMuonLoose2>0.5'
---
> antiLeptons  = ' & l2againstElectronNewLooseMVA3>0.5 '
> antiLeptons += ' & l1LooseEle>0.5  & l2LooseEle>0.5  '
> antiLeptons += ' & l1LooseMu >0.5  & l2LooseMu >0.5  '
11a12,18
> def embeddedScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, prong, trigMatch=True, susy=False):
>     
>     cut    = ' l1Pt>45 & l2Pt>45 & abs(l1Eta)<2.1 & abs(l2Eta)<2.1 & diTauCharge==0'
>     cut   += ' & l1RawDB3HIso<1.0 & l2RawDB3HIso<1.0'
>     cut   += antiLeptons
>     cut   += ' & muon1Pt == -1 & electron1Pt == -1 '
>     #cut   += ' & nbJets == 0 '
12a20,28
>     cutDY  = cut 
>     cutEmb = cut
>     
>     cutDY += '& isZtt'
>     if trigMatch and susy:
>       cutDY += ' & (l1TrigMatched_diTau > 0.5 & l2TrigMatched_diTau > 0.5)'
>     if trigMatch and not susy:
>       cutDY += ' & ((l1TrigMatched_diTau > 0.5  & l2TrigMatched_diTau   >0.5) || \
>                     (l1TrigMatched_diTauJet>0.5 & l2TrigMatched_diTauJet>0.5  &  jetTrigMatched_diTauJet>0.5 & jet1Pt>50 & abs(jet1Eta)<3.0) )'
14,44d29
< def embeddedScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, prong, trigMatch=True):
<     if trigMatch :
<       ### mva
<       #cutDY = 'abs(jet1Eta)<3.0 && jet1Pt>50. && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && isFake==0 && isElectron==0 && l2MVAEle>0.5 && l1MedMVAIso>0.5 && l2MedMVAIso>0.5 && (l1TrigMatched==1 && l2TrigMatched==1 && jetTrigMatched!=0)'
< #       cutDY = 'l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && isFake==0 && isElectron==0 && l1MedMVAIso>0.5 && l2MedMVAIso>0.5 && (l1TrigMatched==1 && l2TrigMatched==1)'
<       ### mva2
<       #cutDY = 'abs(jet1Eta)<3.0 && jet1Pt>50. && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && isFake==0 && isElectron==0 && l2MVAEle>0.5 && l1RawMVA2Iso>0.9 && l2RawMVA2Iso>0.9 && (l1TrigMatched==1 && l2TrigMatched==1 && jetTrigMatched!=0)'
<       ### db3h
<       #cutDY = 'abs(jet1Eta)<3.0 && jet1Pt>50. && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && isFake==0 && isElectron==0 && l2MVAEle>0.5 && l1RawDB3HIso<1.0 && l2RawDB3HIso<1.0 && (l1TrigMatched==1 && l2TrigMatched==1 && jetTrigMatched!=0)'
<       cutDY = ' l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && isFake==0 && isElectron==0 && l1RawDB3HIso<1.0 && l2RawDB3HIso<1.0 && (l1TrigMatched==1 && l2TrigMatched==1)'+ antiLeptons
<     else:
<       cutDY = 'abs(jet1Eta)<3.0 && jet1Pt>50. && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && isFake==0 && isElectron==0 && l2MVAEle>0.5 && l1MedMVAIso>0.5 && l2MedMVAIso>0.5 '
<     if prong :
<       cutDY += ' && l1DecayMode<3  && l2DecayMode<3'
<       cutDY.replace('abs(jet1Eta)<3.0 && jet1Pt>50.','')
<     inclusiveForEmbeddedNormalizationDY    = H2TauTauDataMC('svfitMass', anaDir, selCompsNoSignal, weightsNoSignal,
<      			    #50,0,500,
<      			    30,0,300,
<      			    cut    = cutDY, 
<      			    #weight = 'weight/triggerWeight',
<      			    weight = 'weight',
<      			    embed  = False)
<     
<     ### mva
<     #cutEmb = 'abs(jet1Eta)<3.0 && jet1Pt>50. && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && l2MVAEle>0.5 && l1MedMVAIso>0.5 && l2MedMVAIso>0.5 '
< #     cutEmb = 'l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && l1MedMVAIso>0.5 && l2MedMVAIso>0.5 '
<     ### mva2
<     #cutEmb = 'abs(jet1Eta)<3.0 && jet1Pt>50. && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && l2MVAEle>0.5 && l1RawMVA2Iso>0.9  && l2RawMVA2Iso>0.9 '
<     ### db3h
<     #cutEmb = 'abs(jet1Eta)<3.0 && jet1Pt>50. && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && l2MVAEle>0.5 && l1RawDB3HIso<1.0  && l2RawDB3HIso<1.0 '
<     cutEmb = ' l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && l1RawDB3HIso<1.0  && l2RawDB3HIso<1.0 '
46,53c31,68
<       cutEmb += ' && l1DecayMode<3  && l2DecayMode<3'
<       cutEmb.replace('abs(jet1Eta)<3.0 && jet1Pt>50.','')
<     inclusiveForEmbeddedNormalizationEmbed = H2TauTauDataMC('svfitMass', anaDir, selCompsNoSignal, weightsNoSignal,
<      			    #50,0,500,
<      			    30,0,300,
<      			    cut    = cutEmb, 
<      			    weight = 'weight',
<      			    embed  = False)
---
>       cutDY  += ' & l1DecayMode<3  & l2DecayMode<3'
>       cutEmb += ' & l1DecayMode<3  & l2DecayMode<3'
>       cutDY.replace( 'abs(jet1Eta)<3.0 & jet1Pt>50.','')
>       cutEmb.replace('abs(jet1Eta)<3.0 & jet1Pt>50.','')
> 
>     ## if diTau is matched, apply diTau data/MC correction factor 
>     weight  = '   ( ((l1TrigMatched_diTau>0.5) && (l2TrigMatched_diTau>0.5))*triggerWeight_diTau +\
>                     ((l1TrigMatched_diTau<0.5) || (l2TrigMatched_diTau<0.5))                     ) '
>     ## if diTauJet is matched, apply diTau data/MC correction factor 
>     weight += ' * ( ((l1TrigMatched_diTauJet>0.5) && (l2TrigMatched_diTauJet>0.5) && (jetTrigMatched_diTauJet)>0.5)*triggerWeight_diTauJet +\
>                     ((l1TrigMatched_diTauJet<0.5) || (l2TrigMatched_diTauJet<0.5) || (jetTrigMatched_diTauJet)<0.5)                        ) '
>     ## apply the diTau data turn on on embed sample
>     weight += ' * ( (embedWeight == 1) + (embedWeight != 1)*triggerEffData_diTau )'
>     ## stitching weight
>     weight += ' * ( weight * (1/(triggerWeight_diTau*triggerWeight_diTauJet)) )'
>     ## scale down real taus with decay mode 1 prong no pi zero by 0.88
>     weight += ' * ( ((isRealTau==1) * ((l1DecayMode==0)*0.88 + (l1DecayMode!=0))) + (isRealTau==0) ) ' 
>     weight += ' * ( ((isRealTau==1) * ((l2DecayMode==0)*0.88 + (l2DecayMode!=0))) + (isRealTau==0) ) ' 
> 
>     inclusiveForEmbeddedNormalizationDY    = H2TauTauDataMC('svfitMass', 
>                                                             anaDir, 
>                                                             selCompsNoSignal, 
>                                                             weightsNoSignal ,
>      			                                    35,0,350,
>      			                                    cut    = cutDY  , 
>      			                                    weight = weight ,
>      			                                    embed  = False  ,
>      			                                    susy   = susy )
>     
>     inclusiveForEmbeddedNormalizationEmbed = H2TauTauDataMC('svfitMass', 
>                                                             anaDir, 
>                                                             selCompsNoSignal, 
>                                                             weightsNoSignal ,
>      			                                    35,0,350        ,
>      			                                    cut    = cutEmb , 
>      			                                    weight = weight ,
>      			                                    embed  = False  ,
>      			                                    susy   = susy )
65,66c80,81
<     print "DY events in inclusive      ", inclusiveForEmbeddedNormalizationDY.Hist("DYJets").Integral()
<     print "Embedded events in inclusive", embeddedHist.Integral()
---
>     print "DY events in inclusive      ", inclusiveForEmbeddedNormalizationDY.Hist("DYJets").weighted.Integral(0,35)
>     print "Embedded events in inclusive", embeddedHist.weighted.Integral(0,35)
68c83
<     embeddedScaleFactor = inclusiveForEmbeddedNormalizationDY.Hist("DYJets").Integral()/embeddedHist.Integral()
---
>     embeddedScaleFactor = inclusiveForEmbeddedNormalizationDY.Hist("DYJets").weighted.Integral(0,35)/embeddedHist.weighted.Integral(0,35)
91c106
< def zeeScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, embed):
---
> def zeeScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, embed, susy=False):
94c109
<     inclusiveForEmbeddedNormalizationZeeBB = H2TauTauDataMC('l1Pt', anaDir, selCompsNoSignal, weightsNoSignal,
---
>     inclusiveForEmbeddedNormalizationZeeBB = H2TauTauDataMC('visMass', anaDir, selCompsNoSignal, weightsNoSignal,
96,100c111,117
<      			    40,40,80,
<      			    cut = 'abs(l1Eta)<1.5 && abs(l2Eta)<1.5 && l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 && l1RawDB3HIso<1.0 && l2RawDB3HIso<1.0 && l1againstElectronLooseMVA3<0.5 && l2againstElectronLooseMVA3<0.5', weight=weight,
<      			    embed=embed)
<     print "Data events in boosted ee", inclusiveForEmbeddedNormalizationZeeBB.Hist("Data").weighted.Integral()
<     print "DYJets events in boosted ee", (inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets").weighted.Integral()+inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets_Electron").weighted.Integral())
---
>      			    50,70,120,
>      			    cut    = 'isZee & abs(l1Eta)<1.5 & abs(l2Eta)<1.5 & l1Pt>45 & l2Pt>45 & abs(l1Eta)<2.1 & abs(l2Eta)<2.1 & diTauCharge==0 & l1RawDB3HIso<1.0 & l2RawDB3HIso<1.0 & l1againstElectronNewLooseMVA3<0.5 & l2againstElectronNewLooseMVA3<0.5', 
>      			    weight = weight,
>      			    embed  = embed,
>      			    susy   = susy)
>     print "Data events in boosted ee"  , inclusiveForEmbeddedNormalizationZeeBB.Hist("Data").weighted.Integral()
>     print "DYJets events in boosted ee", (inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets").weighted.Integral()+inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets_ZL").weighted.Integral())
103c120,123
<         (inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets").weighted.Integral()+inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets_Electron").weighted.Integral())
---
>         (inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets").weighted.Integral()+inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets_ZL").weighted.Integral())
>     
>     #zeeScaleFactor = 1.
>     
106c126
<     ymax = max(inclusiveForEmbeddedNormalizationZeeBB.Hist("Data").GetMaximum(),(inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets").GetMaximum()+inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets_Electron").GetMaximum()))*1.5
---
>     ymax = max(inclusiveForEmbeddedNormalizationZeeBB.Hist("Data").GetMaximum(),(inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets").GetMaximum()+inclusiveForEmbeddedNormalizationZeeBB.Hist("DYJets_ZL").GetMaximum()))*1.5
Index: CMGTools/H2TauTau/python/proto/plotter/H2TauTauDataMC_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/H2TauTauDataMC_diTau.py,v
retrieving revision 1.2
diff -r1.2 H2TauTauDataMC_diTau.py
48c48
< 
---
>         
89a90,93
> 
>             # not needed
>             #if 'Higgs' in compName :
>             #  self.cut += ' & isZtt'
99a104,105
>               ## once I'll have the new samples
>               #self._BuildHistogram(tree, comp, 'DYJets_ZJ', self.varName, self.cut + ' & (isZj || isZttll || isZttj)', layer)
Index: CMGTools/H2TauTau/python/proto/plotter/PrepareDictionaries_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/PrepareDictionaries_diTau.py,v
retrieving revision 1.2
diff -r1.2 PrepareDictionaries_diTau.py
17,18c17,36
<   if susy : bkg    = ['DYJets','WJets','WW','WZ','ZZ','TTJets','T_tW','Tbar_tW','HiggsGGH125','HiggsVBF125','HiggsVH125']
<   else    : bkg    = ['DYJets','WJets','WW','WZ','ZZ','TTJets','T_tW','Tbar_tW']
---
>   bkg = ['DYJets'         ,
>          'WJets'          ,
>          'Tbar_tW'        ,
>          'T_tW'           ,
>          'TTJetsFullLept' ,
>          'TTJetsSemiLept' ,
>          'TTJetsHadronic' ,
>          'WWJetsTo2L2Nu'  ,
>          'WZJetsTo2L2Q'   ,
>          'WZJetsTo3LNu'   ,
>          'ZZJetsTo4L'     ,
>          'ZZJetsTo2L2Nu'  ,
>          'ZZJetsTo2L2Q'   ,
>          #'HiggsGGHtoWW125',
>          #'HiggsVBFtoWW125',
>          #'HiggsVHtoWW125' ,
>         ]   #,'TTJets','WW','WZ','ZZ'
>   
>   if susy : bkg.extend(['HiggsGGH125','HiggsVBF125','HiggsVH125']) 
>   else    : pass                                      
21,22c39,40
<   data2012  = ['data_Run2012A_22Jan2013_v1', 'data_Run2012B_22Jan2013_v1','data_Run2012C_22Jan2013_v1','data_Run2012D_22Jan2013_v1']
<   embed2012 = ['embed_Run2012A_13Jul2012_v1','embed_Run2012A_recover_06Aug2012_v1','embed_Run2012B_13Jul2012_v4','embed_Run2012C_24Aug2012_v1','embed_Run2012C_PromptReco_v2','embed_2012D_PromptReco_v1'  ]
---
>   data2012  = ['data_Run2012A_22Jan2013_v1' , 'data_Run2012B_22Jan2013_v1' , 'data_Run2012C_22Jan2013_v1' , 'data_Run2012D_22Jan2013_v1' ]
>   embed2012 = ['embed_Run2012A_22Jan2013_v1', 'embed_Run2012B_22Jan2013_v1', 'embed_Run2012C_22Jan2013_v1', 'embed_Run2012D_22Jan2013_v1']
25,26c43,44
<   else       : masses = [110,115,120,125,130,135,140,145]
<   if susy    : masses = [80,90,100,110,120,130,140,160,180,200,250,300,350,400,450,500,600,700,800,1000]
---
>   else       : masses = [90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
>   if susy    : masses = [80,90,100,110,120,130,140,160,180,200,250,300,350,400,450,500,600,700,800,900,1000]
55c73
<     
---
> 
Index: CMGTools/H2TauTau/python/proto/plotter/QCDEstimation_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/QCDEstimation_diTau.py,v
retrieving revision 1.2
diff -r1.2 QCDEstimation_diTau.py
9c9
<       QCDtightSS.Add(plotVarDataSS.Hist("DYJets_Fakes"),-1)
---
>       QCDtightSS.Add(plotVarDataSS.Hist("DYJets_ZJ"),-1)
11c11
<       QCDtightSS.Add(plotVarDataSS.Hist("DYJets_Electron"),-1)
---
>       QCDtightSS.Add(plotVarDataSS.Hist("DYJets_ZL"),-1)
14,17c14,28
<       QCDtightSS.Add(plotVarDataSS.Hist("WW"),-1)
<       QCDtightSS.Add(plotVarDataSS.Hist("WZ"),-1)
<       QCDtightSS.Add(plotVarDataSS.Hist("ZZ"),-1)
<       QCDtightSS.Add(plotVarDataSS.Hist("TTJets"),-1)
---
>       #QCDtightSS.Add(plotVarDataSS.Hist("WW"),-1)
>       #QCDtightSS.Add(plotVarDataSS.Hist("WZ"),-1)
>       #QCDtightSS.Add(plotVarDataSS.Hist("ZZ"),-1)
>       #QCDtightSS.Add(plotVarDataSS.Hist("TTJets"),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist("TTJetsFullLept"),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist("TTJetsSemiLept"),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist("TTJetsHadronic"),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist('WWJetsTo2L2Nu'),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist('WZJetsTo2L2Q'),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist('WZJetsTo3LNu'),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist('ZZJetsTo4L'),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist('ZZJetsTo2L2Nu'),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist('ZZJetsTo2L2Q'),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist("Tbar_tW"),-1)
>       QCDtightSS.Add(plotVarDataSS.Hist("T_tW"),-1)
Index: CMGTools/H2TauTau/python/proto/plotter/SaveHistograms_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/SaveHistograms_diTau.py,v
retrieving revision 1.2
diff -r1.2 SaveHistograms_diTau.py
11,12c11,26
<     TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('ZZ'))
<     TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('WZ'))
---
>     #TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('ZZ'))
>     #TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('WZ'))
> 
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('WZJetsTo2L2Q'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('WZJetsTo3LNu'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('ZZJetsTo4L'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('ZZJetsTo2L2Nu'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('ZZJetsTo2L2Q'))
> 
>     ## we add single top to dibosons
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('T_tW'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('Tbar_tW'))
>     #TightIsoOS.Hist('T_tW').Add(TightIsoOS.Hist('Tbar_tW'))
> 
>     TightIsoOS.Hist('TTJetsFullLept').Add(TightIsoOS.Hist('TTJetsSemiLept'))
>     TightIsoOS.Hist('TTJetsFullLept').Add(TightIsoOS.Hist('TTJetsHadronic'))
15,22c29,42
<         'DYJets'            :'ZTT',
<         'DYJets_Electron'   :'ZL',
<         'DYJets_Fakes'      :'ZJ',
<         'WJets'             :'W',
<         'TTJets'            :'TT',
<         'WW'                :'VV',
<         'QCDdata'           :'QCD',
<         'Data'              :'data_obs'        
---
>         'DYJets'          :'ZTT',
>         'DYJets_ZL'       :'ZL',
>         'DYJets_ZJ'       :'ZJ',
>         'WJets'           :'W',
>         #'TTJets'        :'TT',
>         'TTJetsFullLept'  :'TT',
>         #'T_tW'          :'T',
>         #'WW'            :'VV',
>         'WWJetsTo2L2Nu'   :'VV',
>         'QCDdata'         :'QCD',
>         'Data'            :'data_obs'        
>         #'HiggsGGHtoWW125' :'ggH_hww_SM125',
>         #'HiggsVBFtoWW125' :'qqH_hww_SM125',
>         #'HiggsVHtoWW125'  :'VH_hww_SM125' ,
26,28d45
<       TightIsoOS.Hist('HiggsGGH125').Add(TightIsoOS.Hist('HiggsVBF125')) ## adding SM Higgs as a bkg
<       TightIsoOS.Hist('HiggsGGH125').Add(TightIsoOS.Hist('HiggsVH125'))  ## adding SM Higgs as a bkg
<       noscomp.update({'HiggsGGH125':'ggH_SM125+qqH_SM125+VH_SM125'})
32a50,52
>       noscomp.update({'HiggsGGH125':'ggH_SM125'})
>       noscomp.update({'HiggsVBF125':'qqH_SM125'})
>       noscomp.update({'HiggsVH125' :'VH_SM125' })
37a58,60
>           'HiggsGGH'+str(mass)+'_pthUp'  :'ggH'+str(mass)+'_QCDscale_ggH1inUp'  ,
>           #'HiggsGGH'+str(mass)+'_pthNom' :'ggH'+str(mass)+'_QCDscale_ggH1inNom' ,
>           'HiggsGGH'+str(mass)+'_pthDown':'ggH'+str(mass)+'_QCDscale_ggH1inDown',
54c77
<               
---
>              
61a85
>         print TightIsoOS.histos
78c102
<           if comp in alreadyIn : pass
---
>           if allcomp[comp] in alreadyIn : pass
81c105,106
<         gDirectory.cd('..')
---
>                 
>         gDirectory.cd('..')    
87,88c112,127
<     TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('ZZ'))
<     TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('WZ'))
---
>     #TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('ZZ'))
>     #TightIsoOS.Hist('WW').Add(TightIsoOS.Hist('WZ'))
> 
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('WZJetsTo2L2Q'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('WZJetsTo3LNu'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('ZZJetsTo4L'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('ZZJetsTo2L2Nu'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('ZZJetsTo2L2Q'))
> 
>     ## we add single top to dibosons
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('T_tW'))
>     TightIsoOS.Hist('WWJetsTo2L2Nu').Add(TightIsoOS.Hist('Tbar_tW'))
>     #TightIsoOS.Hist('T_tW').Add(TightIsoOS.Hist('Tbar_tW'))
> 
>     TightIsoOS.Hist('TTJetsFullLept').Add(TightIsoOS.Hist('TTJetsSemiLept'))
>     TightIsoOS.Hist('TTJetsFullLept').Add(TightIsoOS.Hist('TTJetsHadronic'))
91,98c130,140
<         'DYJets'            :'ZTT',
<         'DYJets_Electron'   :'ZL',
<         'DYJets_Fakes'      :'ZJ',
<         'WJets'             :'W',
<         'TTJets'            :'TT',
<         'WW'                :'VV',
<         'QCDdata'           :'QCD',
<         'Data'              :'data_obs'        
---
>         'DYJets'        :'ZTT',
>         'DYJets_ZL'     :'ZL',
>         'DYJets_ZJ'     :'ZJ',
>         'WJets'         :'W',
>         #'TTJets'        :'TT',
>         'TTJetsFullLept':'TT',
>         #'T_tW'          :'T',
>         #'WW'            :'VV',
>         'WWJetsTo2L2Nu' :'VV',
>         'QCDdata'       :'QCD',
>         'Data'          :'data_obs'        
Index: CMGTools/H2TauTau/python/proto/plotter/binning.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/binning.py,v
retrieving revision 1.3
diff -r1.3 binning.py
6,8c6,8
< binning_svfitMass_mssm       = array([0., 20., 40., 60., 80., 100., 120., 140., 160., 180., 200., 250., 300., 350., 400., 500., 700., 1000., 1500])
< binning_svfitMass_finer_mssm = array([0., 10., 20., 30., 40., 50., 60., 70., 80., 90., 100., 110., 120., 130., 140., 150., 160., 170., 180., 190., 200., 225., 250., 275., 300., 325., 350., 400., 500., 700., 1000., 1500])
< 
---
> # HCP
> # binning_svfitMass_mssm       = array([0., 20., 40., 60., 80., 100., 120., 140., 160., 180., 200., 250., 300., 350., 400., 500., 700., 1000., 1500])
> # binning_svfitMass_finer_mssm = array([0., 10., 20., 30., 40., 50., 60., 70., 80., 90., 100., 110., 120., 130., 140., 150., 160., 170., 180., 190., 200., 225., 250., 275., 300., 325., 350., 400., 500., 700., 1000., 1500])
9a10,12
> # for the PAPER
> # binning_svfitMass_mssm       = array([0., 10., 20., 30., 40., 50., 60., 70., 80., 90., 100., 110., 120., 130., 140., 150., 160., 170., 180., 190., 200., 225., 250., 275., 300., 325., 350., 400., 450., 500., 550., 600., 650., 700., 750., 800., 850., 900., 950., 1000., 1100., 1200., 1300., 1400., 1500., 1600., 1800., 2000.])
> # binning_svfitMass_finer_mssm = array([0., 10., 20., 30., 40., 50., 60., 70., 80., 90., 100., 110., 120., 130., 140., 150., 160., 170., 180., 190., 200., 225., 250., 275., 300., 325., 350., 400., 450., 500., 550., 600., 650., 700., 750., 800., 850., 900., 950., 1000., 1100., 1200., 1300., 1400., 1500., 1600., 1800., 2000.])
10a14,16
> ## DATACARD SYNCH
> binning_svfitMass_mssm       = array([0., 20., 40., 60., 80., 100., 120., 140., 160., 180., 200., 250., 300., 350., 400.])
> binning_svfitMass_finer_mssm = array([0., 10., 20., 30., 40., 50., 60., 70., 80., 90., 100., 110., 120., 130., 140., 150., 160., 170., 180., 190., 200., 225., 250., 275., 300., 325., 350., 400.])
Index: CMGTools/H2TauTau/python/proto/plotter/cuts_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/cuts_diTau.py,v
retrieving revision 1.2
diff -r1.2 cuts_diTau.py
17c17
< gStyle.SetTitleX(0.125)
---
> gStyle.SetTitleX(0.125) ## to be changed to 0.15
28c28
< baseline           =  ' l1Pt>35 && l2Pt>35 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 '
---
> baseline           =  ' l1Pt>45 && l2Pt>45 && abs(l1Eta)<2.1 && abs(l2Eta)<2.1 && diTauCharge==0 '
31,33c31,33
< baseline           += ' && l2againstElectronLooseMVA3>0.5 '
< baseline           += ' && l1LooseEle>0.5 && l2LooseEle>0.5'
< baseline           += ' && l1againstMuonLoose2>0.5 && l2againstMuonLoose2>0.5'
---
> baseline           += ' && l1LooseEle>0.5  && l2LooseEle>0.5 '
> baseline           += ' && l1LooseMu >0.5  && l2LooseMu >0.5 '
> baseline           += ' && l2againstElectronNewLooseMVA3>0.5 '
36c36
< 
---
> # baseline           += ' && nbJets == 0'
38c38,52
< baseline           += ' && (l1TrigMatched!=0 && l2TrigMatched!=0 && jetTrigMatched!=0) '
---
> # baseline           += ' && jet1Pt>30. && abs(jet1Eta)<4.7 '
> 
> ###### MSSM or INCLUSIVE ######
> ## trigger matching or embedded
> # baseline           += ' && ( (l1TrigMatched_diTau>0.5 && l2TrigMatched_diTau>0.5) || embedWeight != 1 )'
> 
> 
> ###### SM ######
> ## trigger matching or embedded
> baseline           += ' && ( (l1TrigMatched_diTau>0.5 && l2TrigMatched_diTau>0.5)                                      || \
>                              (l1TrigMatched_diTauJet>0.5 && l2TrigMatched_diTauJet>0.5 && jetTrigMatched_diTauJet>0.5) || \
>                               embedWeight != 1 )'
> ## different jet cut depending on the trigger fired
> baseline           += ' && ( (l1TrigMatched_diTauJet>0.5 && l2TrigMatched_diTauJet>0.5 && jetTrigMatched_diTauJet>0.5 && jet1Pt>50. && abs(jet1Eta)<3.0) || \
>                              (l1TrigMatched_diTauJet<0.5 || l2TrigMatched_diTauJet<0.5 || jetTrigMatched_diTauJet<0.5) )'
40d53
< baselineSS = baseline.replace('diTauCharge==0','diTauCharge!=0')
42,45d54
< isolationLL4       =  ' && l1RawDB3HIso<2.5    && l2RawDB3HIso<2.5   '
< isolationLL        =  ' && l1LooseDB3HIso>0.5   && l2LooseDB3HIso>0.5 '
< isolationMM        =  ' && l1MediumDB3HIso>0.5  && l2MediumDB3HIso>0.5'
< isolationTT        =  ' && l1TightDB3HIso>0.5   && l2TightDB3HIso>0.5 '
48,49d56
< # isolationLL4       =  ' && l1RawMVAIso<0.5  && l2RawMVAIso<0.5    '
< # isolationMM        =  ' && l1MedMVAIso>0.5  && l1MedMVAIso>0.5'
51,52d57
< #isolationMM        =  ' && l1RawDB3HIso<1.0  && l2RawDB3HIso<1.0'
< #isolationTT        =  ' && l1RawDB3HIso<0.8  && l2RawDB3HIso<0.8'
54,55c59,65
< Jet0               =  ' && jet1Pt<50.'	
< BOOSTED            =  ' && jet1Pt>50.'
---
> 
> baselineSS = baseline.replace('diTauCharge==0','diTauCharge!=0')
> 
> isolationLL4       =  ' && l1RawDB3HIso    < 10. && l2RawDB3HIso    < 10. '
> isolationLL        =  ' && l1LooseDB3HIso  > 0.5 && l2LooseDB3HIso  > 0.5 '
> isolationMM        =  ' && l1MediumDB3HIso > 0.5 && l2MediumDB3HIso > 0.5 '
> isolationTT        =  ' && l1TightDB3HIso  > 0.5 && l2TightDB3HIso  > 0.5 '
76a87
>       #binning = binning_svfitMass_finer_mssm
81a93,94
>   #binning_superfine = array([60.,63.,66.,69.,72.,75.,78.,81.,84.,87.,90.,93.,96.,99.,102.,105.,108.,111.,114.,117.,120.,123.,126.,129.,132.,135.,138.,141.,144.,147.,150.,153.,156.,159.,162.,165.,168.,171.,174.,177.,180.,183.,186.,189.,192.,195.,198.,201.,204.,207.,210.])  
> 
83,84c96,97
<     ('svfitMass'     ,len(binning) , binning  ),
< #     ('visMass'    ,len(binning) , binning ),
---
> #     ('visMass'     ,len(binning) , binning ),
> #     ('svfitMass'   ,len(binning) , binning  ),
88,105c101,107
< #     ('dRtt'	  ,int(20/rebin), 0 , 5      ),
< #     ('nJets'      ,10           , 0 , 10     ),
< #     ('nbJets'     ,10           , 0 , 10     ),
< #     ('mjj'        ,20           , 0 , 200    ),
< #     ('dEtajj'     ,int(18/rebin), -6, 6      ),
< #     ('dPhittjj'   ,int(16/rebin), 0 , 3.2    ),
< #     ('dEtattjj'   ,int(20/rebin), 0 , 4      ),
< #     ('mttj'       ,int(40/rebin), 0 , 1000   ),
< #     ('pThiggs'    ,int(30/rebin), 0 , 300    ),
< #     ('jet1Pt'     ,int(30/rebin), 0 , 600    ),
< #     ('jet2Pt'     ,int(25/rebin), 0 , 500    ),
< #     ('jet1Eta'    ,int(20/rebin), -5, 5      ),
< #     ('jet2Eta'    ,int(20/rebin), -5, 5      ),
< #     ('bjet1Pt'    ,int(15/rebin), 0 , 300    ),
< #     ('bjet2Pt'    ,int(15/rebin), 0 , 300    ),
< #     ('bjet1Eta'   ,int(10/rebin), -5, 5      ),
< #     ('bjet2Eta'   ,int(10/rebin), -5, 5      ),
< #     ('met'        ,int(25/rebin), 0 , 200    ),
---
>     ('bjet1Pt'    ,int(15/rebin), 0 , 300    ),
>     ('bjet2Pt'    ,int(15/rebin), 0 , 300    ),
>     ('bjet1Eta'   ,int(10/rebin), -5, 5      ),
>     ('bjet2Eta'   ,int(10/rebin), -5, 5      ),
> #     ('l1Pt'       ,int(32/rebin), 40, 200    ),    
> #     ('l2Pt'       ,int(16/rebin), 40, 120    ),   
> #     ('mjj'        ,20           , 0 , 1000   ),
107,108c109
< #     ('l1Pt'       ,int(60/rebin), 0 , 300    ),    
< #     ('l2Pt'       ,int(40/rebin), 0 , 200    ),   
---
> #     ('dEtajj'     ,int(18/rebin), -6, 6      ),
110a112,122
> #     ('met'        ,int(20/rebin), 0 , 100    ),
> #     ('pThiggs'    ,int(25/rebin), 0 , 250    ),
> #     ('jet1Pt'     ,int(20/rebin), 0 , 400    ),
> #     ('jet2Pt'     ,int(15/rebin), 0 , 300    ),
> #     ('jet1Eta'    ,int(20/rebin), -5, 5      ),
> #     ('jet2Eta'    ,int(20/rebin), -5, 5      ),
> #     ('nJets'      ,8            , 0 , 8      ),
> #     ('nbJets'     ,5            , 0 , 5      ),
> 
> #     ('jet1Btag'   ,int(25/rebin), 0, 1       ),
> #     ('jet2Btag'   ,int(25/rebin), 0, 1       ),
113,116c125,126
< #     ('sumJetPt'   ,50           , 0 , 500    ),
< #     ('allJetPt'   ,50           , 0 , 500    ),
< #     ('sumbJetPt'  ,50           , 0 , 500    ),
< #     ('allbJetPt'  ,50           , 0 , 500    ),
---
> #     ('mt1'        ,int(25/rebin), 0 , 200    ),
> #     ('mt2'        ,int(25/rebin), 0 , 200    ),
118a129,136
> #     ('dRtt'	  ,int(20/rebin), 0 , 5      ),
>     #('dPhittjj'   ,int(16/rebin), 0 , 3.2    ),
>     #('dEtattjj'   ,int(20/rebin), 0 , 4      ),
>     #('mttj'       ,int(40/rebin), 0 , 1000   ),
>     #('sumJetPt'   ,50           , 0 , 500    ),
>     #('allJetPt'   ,50           , 0 , 500    ),
>     #('sumbJetPt'  ,50           , 0 , 500    ),
>     #('allbJetPt'  ,50           , 0 , 500    ),
233c251
<   #variables.extend(otherVariables1)
---
>   variables.extend(otherVariables1)
Index: CMGTools/H2TauTau/python/proto/plotter/plot_H2TauTauDataMC_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/plot_H2TauTauDataMC_diTau.py,v
retrieving revision 1.2
diff -r1.2 plot_H2TauTauDataMC_diTau.py
29c29
<   contributions = ["Data" ,"TTJets" ,"DYJets" ,"DYJets_Electron" ,"DYJets_Fakes", "WJets", "WW", 'ZZ', 'WZ'] ## , "WJets_Fakes"
---
>   contributions = ["Data" ,"DYJets" ,"DYJets_ZL" ,"DYJets_ZJ", "WJets",'Tbar_tW','T_tW','TTJetsFullLept','TTJetsSemiLept','TTJetsHadronic','WWJetsTo2L2Nu','WZJetsTo2L2Q','WZJetsTo3LNu','ZZJetsTo4L','ZZJetsTo2L2Nu','ZZJetsTo2L2Q'] ## , "WJets_Fakes","TTJets" , "WW", 'ZZ', 'WZ'
53a54,58
>   
>   dic = { 'A':['embed_Run2012A_22Jan2013_v1'],
>           'B':['embed_Run2012B_22Jan2013_v1'],
>           'C':['embed_Run2012C_22Jan2013_v1'],
>           'D':['embed_Run2012D_22Jan2013_v1'] }
55,59c60,82
< #   dic = { 'A':['embed_Run2012A_13Jul2012_v1','embed_Run2012A_recover_06Aug2012_v1'],
<   dic = { 'A':['embed_Run2012A_13Jul2012_v1'],
<           'B':['embed_Run2012B_13Jul2012_v4'],
<           'C':['embed_Run2012C_24Aug2012_v1','embed_Run2012C_PromptReco_v2'],
<           'D':['embed_2012D_PromptReco_v1'] }
---
>   if abcd == '' : 
>     return selComps, weights
>   else :
>     for i in dic.keys() :
>       if i in abcd :
>         for l in dic[i] :
>           selComps = removekey(selComps, l)
>           weights  = removekey(weights , l)
>     return selComps, weights
> 
> def shrinkData(selComps, weights, abcd='') :
>   '''
>   pass the name of the sample to be dropped
>   A ==> remove data_Run2012A_22Jan2013_v1
>   B ==> remove data_Run2012B_22Jan2013_v1
>   C ==> remove data_Run2012C_22Jan2013_v1
>   D ==> remove data_Run2012D_22Jan2013_v1
>   '''
> 
>   dic = { 'A':['data_Run2012A_22Jan2013_v1'],
>           'B':['data_Run2012B_22Jan2013_v1'],
>           'C':['data_Run2012C_22Jan2013_v1'],
>           'D':['data_Run2012D_22Jan2013_v1'] }
82,84c105,106
<   selComps = dict( [ (comp.name, comp) for comp in config.components ])
<   weights  = dict( [ (comp.name,comp.getWeight()) \
<                       for comp in selComps.values() ] )
---
>   selComps = dict( [ (comp.name, comp)            for comp in config.components ])
>   weights  = dict( [ (comp.name,comp.getWeight()) for comp in selComps.values() ] )
93,98c115,124
< run2012  = True
< blinding = True
< just125  = True
< embZtt   = True
< datacard = 'svfitMass'  ## 'visMass'
< logVars  = []  ##["svfitMass","visMass","nJets","nbJets","sumJetPt","allJetPt","sumbJetPt","allbJetPt","jet1Pt","jet2Pt","l1Pt","l2Pt"]
---
> run2012       = True
> blinding      = True
> just125       = True
> embZtt        = True
> scale_1pb     = True
> final         = False
> remove_signal = True
> post_fit      = True
> datacards     = ['svfitMass','visMass']
> logVars       = []#["nbJets"]#["nJets","nbJets","jet1Pt","jet2Pt","l1Pt","l2Pt","pThiggs","met"]#"svfitMass","visMass"
134d159
<   weight   = 'weight'
138,139c163,176
<   weight  += "*( (triggerWeight<=0 || embedWeight!=1) + (triggerWeight>0 && embedWeight==1)/triggerWeight )"
<   
---
>   ## if diTau is matched, apply diTau data/MC correction factor 
>   weight  = '   ( ((l1TrigMatched_diTau>0.5) && (l2TrigMatched_diTau>0.5))*triggerWeight_diTau +\
>                   ((l1TrigMatched_diTau<0.5) || (l2TrigMatched_diTau<0.5))                     ) '
>   ## if diTauJet is matched, apply diTau data/MC correction factor 
>   weight += ' * ( ((l1TrigMatched_diTauJet>0.5) && (l2TrigMatched_diTauJet>0.5) && (jetTrigMatched_diTauJet)>0.5)*triggerWeight_diTauJet +\
>                   ((l1TrigMatched_diTauJet<0.5) || (l2TrigMatched_diTauJet<0.5) || (jetTrigMatched_diTauJet)<0.5)                        ) '
>   ## apply the diTau data turn on on embed sample
>   weight += ' * ( (embedWeight == 1) + (embedWeight != 1)*triggerEffData_diTau )'
>   ## stitching weight
>   weight += ' * ( weight * (1/(triggerWeight_diTau*triggerWeight_diTauJet)) )'
>   ## scale down real taus with decay mode 1 prong no pi zero by 0.88
>   weight += ' * ( ((isRealTau==1) * ((l1DecayMode==0)*0.88 + (l1DecayMode!=0))) + (isRealTau==0) ) ' 
>   weight += ' * ( ((isRealTau==1) * ((l2DecayMode==0)*0.88 + (l2DecayMode!=0))) + (isRealTau==0) ) ' 
>  
152c189,195
< 
---
>   if susy : scale_1pb = False
>   if susy :
>     ##################################################
>     ##         PASS THE PERIOD(S) TO DROP           ##
>     ##################################################
>     selComps, weights = shrinkData( selComps, weights, abcd='A') ## remove 2012A as no suitable trigger was there
>     selComps, weights = shrinkEmbed(selComps, weights, abcd='A') ## remove 2012A as no suitable trigger was there
159,162d201
<   ##################################################
<   ##         PASS THE PERIOD(S) TO DROP           ##
<   ##################################################
<   if embZtt : selComps, weights = shrinkEmbed(selComps, weights, 'A')          
168a208,211
> 
>   ##################################################
>   ##        COMPUTE EMBEDDED NORMALIZATION        ##
>   ##################################################
171c214,217
<       embeddedScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, options.prong)
---
>     embedSF = True
>     embeddedScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, options.prong, susy=susy)
>   else : 
>     embedSF = False
173,174c219,220
<       zeeScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, options.embed)
<   
---
>     zeeScaleFactor(anaDir, selCompsNoSignal, weightsNoSignal, selCompsDataMass, weightsDataMass, weight, embed=False, susy=False)
>     
185,214c231,239
< 
<   cuts=[  
< #       ("CMS_2012_incl_again_control_BOOSTED", baseline , ['45','45'], '', isolationMM , 5 ),
< #       ("CMS_2012_bt_l1Pt45_l2Pt45_BOOSTED"  , baseline , ['45','45'], ' && nbJets > 0' , isolationMM , 5 ),
<       ("CMS_2012_bt_l1Pt50_l2Pt45_BOOSTED"  , baseline , ['50','45'], ' && nbJets > 0' , isolationMM , 5 ),
<       ("CMS_2012_bt_l1Pt55_l2Pt45_BOOSTED"  , baseline , ['55','45'], ' && nbJets > 0' , isolationMM , 5 ),
<       ("CMS_2012_bt_l1Pt60_l2Pt45_BOOSTED"  , baseline , ['60','45'], ' && nbJets > 0' , isolationMM , 5 ),
<       ("CMS_2012_bt_l1Pt65_l2Pt45_BOOSTED"  , baseline , ['65','45'], ' && nbJets > 0' , isolationMM , 5 ),
<       ("CMS_2012_bt_l1Pt70_l2Pt45_BOOSTED"  , baseline , ['70','45'], ' && nbJets > 0' , isolationMM , 5 ),
<       ("CMS_2012_bt_l1Pt90_l2Pt45_BOOSTED"  , baseline , ['90','45'], ' && nbJets > 0' , isolationMM , 5 ),
<       ("CMS_2012_bt_l1Pt100_l2Pt45_BOOSTED"  , baseline , ['100','45'], ' && nbJets > 0' , isolationMM , 5 ),
< 
< 
< 
< 
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met10_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>10', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met20_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>20', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met30_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>30', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met40_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>40', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met50_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>50', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met60_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>60', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met70_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>70', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met80_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>80', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_met100_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0 && met>100', isolationMM , 5 ),
< 
< 
< 
< 
< 
< 
---
>   
>   cuts=[    
> #       ("CMS_2012_incl_BOOSTED"   , baseline , ['45','45'], ''                         , isolationMM , 5 ),
> #       ("CMS_2012_nobtag_BOOSTED" , baseline , ['45','45'], '&& nbJets == 0'           , isolationMM , 5 ),
> #       ("CMS_2012_btag_BOOSTED"   , baseline , ['45','45'], '&& nbJets  > 0 & nJets<2' , isolationMM , 5 ),
> 
> #       ("CMS_2012_fb_incl_BOOSTED"   , baseline , ['45','45'], ''                         , isolationMM , 5 ),
> #       ("CMS_2012_fb_nobtag_BOOSTED" , baseline , ['45','45'], '&& nbJets == 0'           , isolationMM , 5 ),
> #       ("CMS_2012_fb_btag_BOOSTED"   , baseline , ['45','45'], '&& nbJets  > 0 & nJets<2' , isolationMM , 5 ),
217,228c242,246
< #       ("CMS_2012_nobt_l1Pt45_l2Pt45_BOOSTED"  , baseline , ['45','45'], ' && nbJets == 0', isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt50_l2Pt45_BOOSTED"  , baseline , ['50','45'], ' && nbJets == 0' , isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt55_l2Pt45_BOOSTED"  , baseline , ['55','45'], ' && nbJets == 0' , isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt60_l2Pt45_BOOSTED"  , baseline , ['60','45'], ' && nbJets == 0' , isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt65_l2Pt45_BOOSTED"  , baseline , ['65','45'], ' && nbJets == 0' , isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt70_l2Pt45_BOOSTED"  , baseline , ['70','45'], ' && nbJets == 0' , isolationMM , 5 ),
<      #("CMS_2012_nobt_l1Pt75_l2Pt45_BOOSTED"  , baseline , ['75','45'], ' && nbJets == 0' , isolationMM , 5 ),
<      #("CMS_2012_nobt_l1Pt80_l2Pt45_BOOSTED"  , baseline , ['80','45'], ' && nbJets == 0' , isolationMM , 5 ),
<      #("CMS_2012_nobt_l1Pt85_l2Pt45_BOOSTED"  , baseline , ['85','45'], ' && nbJets == 0' , isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt90_l2Pt45_BOOSTED"  , baseline , ['90','45'], ' && nbJets == 0' , isolationMM , 5 ),
<      #("CMS_2012_nobt_l1Pt95_l2Pt45_BOOSTED"  , baseline , ['95','45'], ' && nbJets == 0' , isolationMM , 5 ),
< #       ("CMS_2012_nobt_l1Pt100_l2Pt45_BOOSTED" , baseline , ['100','45'], ' && nbJets == 0' , isolationMM , 5 ),
---
> ### check the name otherwise normalization gets screwed
>       ("CMS_2012_incl_BOOSTED"           , baseline                , ['45','45'], ''                                          , isolationMM , 5 ),
> #       ("CMS_2012_VBF"                    , baseline +   VBFstandard, ['45','45'], ' & nbJets == 0 & pThiggs>100'              , isolationMM , 5 ),
> #       ("CMS_2012_pth100_170_low_BOOSTED" , baseline + NOVBFstandard, ['45','45'], ' & nbJets == 0 & pThiggs>100 & pThiggs<170', isolationMM , 5 ),
> #       ("CMS_2012_pth170_high_BOOSTED"    , baseline + NOVBFstandard, ['45','45'], ' & nbJets == 0 & pThiggs>170'              , isolationMM , 5 ),
235c253
<         
---
>             
240c258
<     if str(prefix).find("VBF") > 0 :
---
>     if 'VBF' in prefix or '_btag' in prefix :
250a269,276
> #     #####################################################
> #     ##   IF INCLUSIVE REMOVE BJET VETO AND EXTRA JET   ##
> #     #####################################################
> #     #import pdb ; pdb.set_trace()
> #     if 'incl' in prefix :
> #       cut.replace(' && nbJets == 0','')
> #       cut.replace(' && jet1Pt>30. && abs(jet1Eta)<4.7 ','')
> 
255,257c281,283
<     if susy :
<       variables.append(('svfitMass' ,150 , 0 , 1500))
<       #variables.append(('svfitMass' ,150 , 0 , 600))
---
>     if susy and final:
>       #variables.append(('svfitMass' ,300 , 0 , 1500))
>       variables.append(('svfitMass' ,400 , 0 , 2000))
267c293
<  
---
>       
278d303
<                                        
298a324,328
>       if susy or 'incl' in prefix and '_btag' not in prefix :
>         isolationLL4 =  ' && l1RawDB3HIso < 2. && l2RawDB3HIso < 2. '
>       if susy and '_btag' in prefix :
>         isolationLL4 =  ' && l1RawDB3HIso < 4. && l2RawDB3HIso < 4. '
> 
310,313c340,345
<          cutLooseOS      = cut   + antiqcdcut + looseisocut + relaxedVBF  ## we take the shape from this
<          cutLooseSS      = cutSS + antiqcdcut + looseisocut + relaxedVBF  ## for normalization
<          cutTightSS      = cutSS + antiqcdcut + isocut      + relaxedVBF  ## cutTightSS/cutLooseSS     gives iso/!iso norm factor
<          cutTightSS_VBF  = cutSS + antiqcdcut + looseisocut               ## cutTightSS_VBF/cutLooseSS gives vbf/!vbf norm factor
---
>          cutLooseOS            = cut.replace(VBFstandard,'')   + antiqcdcut + looseisocut + relaxedVBF  ## we take the shape from this
>          cutLooseSS            = cutSS.replace(VBFstandard,'') + antiqcdcut + looseisocut + relaxedVBF  ## for normalization
>          cutTightSS            = cutSS.replace(VBFstandard,'') + antiqcdcut + isocut      + relaxedVBF  ## cutTightSS/cutLooseSS     gives iso/!iso norm factor
>          cutTightOS_relVBF     = cut.replace(VBFstandard,'')   + antiqcdcut + isocut      + relaxedVBF  ## cutTightSS/cutLooseSS     gives iso/!iso norm factor forWJets
>          cutTightSS_VBF        = cutSS + antiqcdcut + looseisocut                                       ## cutTightSS_VBF/cutLooseSS gives vbf/!vbf norm factor
>          cutTightOS_VBF        = cut   + antiqcdcut + looseisocut                                       ## cutTightSS_VBF/cutLooseSS gives vbf/!vbf norm factor for WJets
325,326c357,359
<                                     weight = weight,                 
<                                     embed  = options.embed)
---
>                                     weight = weight    ,                 
>                                     embed  = embedSF   ,
>                                     susy   = susy      )
330,331c363,365
<                                     weight = weight,#+"*weightQCD_nVert(nVert)*weightQCD_HpT(pThiggs)",                     
<                                     embed  = options.embed) 
---
>                                     weight = weight    ,#+"*weightQCD_nVert(nVert)*weightQCD_HpT(pThiggs)",                     
>                                     embed  = embedSF   , 
>                                     susy   = susy      )
337,338c371,373
<                                     weight = weight,                   
<                                     embed  = options.embed)
---
>                                     weight = weight    ,                   
>                                     embed  = embedSF   ,
>                                     susy   = susy      )
340,345d374
<       # for the QCD estimation MC contributions are subtracted in the consistent region NO NEED TO APPLY THE WEIGHT ON THEM
<       LooseIsoOSMC = LooseIsoOS
<       #LooseIsoOSMC = H2TauTauDataMC(var, anaDir, selCompsNoSignal, weightsNoSignal, nx, xmin, xmax,                             
<       #                              cut    = cutLooseOS, 
<       #                              weight = weight,                  
<       #                              embed  = options.embed)
348,351c377,399
<         TightIsoSS_VBF = H2TauTauDataMC(var, anaDir, selCompsNoSignal, weightsNoSignal, nx, xmin, xmax,  
<                                         cut    = cutSS + ptCutString + antiqcdcut + looseisocut, 
<                                         weight = weight,                 
<                                         embed  = options.embed)
---
>         
>         #import pdb ; pdb.set_trace()
>         
>         LooseVBFOS        = H2TauTauDataMC(var, anaDir, selCompsNoSignal, weightsNoSignal, nx, xmin, xmax,                             
>                                            cut    = cutLooseOS , 
>                                            weight = weight     ,                   
>                                            embed  = embedSF    ,
>                                            susy   = susy       )
>         TightIsoSS_VBF    = H2TauTauDataMC(var, anaDir, selCompsNoSignal, weightsNoSignal, nx, xmin, xmax,  
>                                            cut    = cutTightSS_VBF, 
>                                            weight = weight ,                 
>                                            embed  = embedSF,
>                                            susy   = susy   )
>         TightIsoOS_VBF    = H2TauTauDataMC(var, anaDir, selCompsNoSignal, weightsNoSignal, nx, xmin, xmax,  
>                                            cut    = cutTightOS_VBF, 
>                                            weight = weight ,                 
>                                            embed  = embedSF,
>                                            susy   = susy   )
>         TightIsoOS_relVBF = H2TauTauDataMC(var, anaDir, selCompsNoSignal, weightsNoSignal, nx, xmin, xmax,  
>                                            cut    = cutTightOS_relVBF, 
>                                            weight = weight           ,                 
>                                            embed  = embedSF          ,
>                                            susy   = susy             )
356c404
<                                                                                                                 LooseIsoOSMC, 
---
>                                                                                                                 LooseIsoOS, 
369,370c417,419
<         else       : massesRange = [125,110,115,120,130,135,140,145]
<         if susy    : massesRange = [80,90,100,110,120,130,140,160,180,200,250,300,350,400,450,500,600,700,800,1000]
---
>         else       : massesRange = [90,95,100,105,110,115,120,125,130,135,140,145,150,155,160]
>         #if susy    : massesRange = [80,90,100,110,120,130,140,160,180,200,250,300,350,400,450,500,600,700,800,900,1000]
>         if susy    : massesRange = [80]
376a426
>           #massesRange = [160]
382a433,434
>       #import pdb ; pdb.set_trace()
>       
386c438
<                                                                                             LooseIsoOSMC, 
---
>                                                                                             LooseIsoOS, 
388a441
>       #import pdb ; pdb.set_trace()
395c448
<       print "QCDShape yield", QCDShape.Integral()
---
>       print "QCDShape yield"        , QCDShape.Integral()
419,421c472,475
<                                     weight = weight,
<                                     embed  = options.embed)
< 
---
>                                     weight = weight ,
>                                     embed  = embedSF,
>                                     susy   = susy   )
>         
426,427c480,485
<         if 'VBF'     in prefix : scaleFromMuTau  = 1.06  # for 2012D by Jose          
<         if 'BOOSTED' in prefix : scaleFromMuTau  = 0.65  # for 2012D by Jose
---
>         if '_VBF'          in prefix : scaleFromMuTau = 1.03 # by Aram        #1.06  # for 2012D by Jose          
>         if '_incl'         in prefix : scaleFromMuTau = 0.73 # by Aram        #0.65  # for 2012D by Jose
>         if '_low_BOOSTED'  in prefix : scaleFromMuTau = 0.87 # by Aram        #0.65  # for 2012D by Jose
>         if '_high_BOOSTED' in prefix : scaleFromMuTau = 0.76 # by Aram        #0.65  # for 2012D by Jose
>         if '_nobtag'       in prefix : scaleFromMuTau = 0.73 # by Aram        #0.65  # for 2012D by Jose
>         if '_btag'         in prefix : scaleFromMuTau = 1.50 # by Aram        #0.65  # for 2012D by Jose
429,441c487,541
<         WJetsShape        = deepcopy(LooseIsoOSMC.Hist("WJets"))
<         WJetsShapeSS      = deepcopy(LooseIsoSS.Hist("WJets"))
<         
<         WJetsScale        = scaleFromMuTau * TightIsoOS.Hist('WJets').Integral() / LooseIsoOSMC.Hist('WJets').Integral()
<         WJetsScaleSS      = scaleFromMuTau * TightIsoSS.Hist('WJets').Integral() / LooseIsoSS.Hist('WJets').Integral()
<   
<         TightIsoOS.Hist("WJets").obj      = WJetsShape.obj
<         TightIsoOS.Hist("WJets").weighted = WJetsShape.weighted
<         TightIsoOS.Hist("WJets").Scale(WJetsScale)
<   
<         TightIsoSS.Hist('WJets').obj      = WJetsShapeSS.obj
<         TightIsoSS.Hist('WJets').weighted = WJetsShapeSS.weighted
<         TightIsoSS.Hist('WJets').Scale(WJetsScaleSS)
---
>         #if 'incl' in prefix or 'btag' in prefix :
>         if susy :
>           WJetsScale    = scaleFromMuTau  
>           WJetsScaleSS  = scaleFromMuTau 
>           TightIsoOS.Hist("WJets").Scale(WJetsScale)
>           TightIsoSS.Hist('WJets').Scale(WJetsScaleSS)
>          
>         else:
>           WJetsShape        = deepcopy(LooseIsoOS.Hist("WJets"))
>           WJetsShapeSS      = deepcopy(LooseIsoSS.Hist("WJets"))
>           
>           if 'VBF' not in prefix :
>             try :
>               WJetsScale    = scaleFromMuTau * TightIsoOS.Hist('WJets').Integral() / LooseIsoOS.Hist('WJets').Integral()
>               WJetsScaleSS  = scaleFromMuTau * TightIsoSS.Hist('WJets').Integral() / LooseIsoSS.Hist('WJets').Integral()
>             except : 
>               WJetsScale    = 1e-7
>               WJetsScaleSS  = 1e-7
>           else :
>             try :
>               ##              scale factor   * vbf / !vbf                                                                    * iso / !iso
>               WJetsScale    = scaleFromMuTau * TightIsoOS_VBF.Hist('WJets').Integral() / LooseIsoOS.Hist('WJets').Integral() * TightIsoOS_relVBF.Hist('WJets').Integral() / LooseIsoOS.Hist('WJets').Integral() 
>               WJetsScaleSS  = scaleFromMuTau * TightIsoSS_VBF.Hist('WJets').Integral() / LooseIsoSS.Hist('WJets').Integral() * TightIsoSS.Hist('WJets').Integral() / LooseIsoSS.Hist('WJets').Integral() 
>             except : 
>               WJetsScale    = 1e-7
>               WJetsScaleSS  = 1e-7
>                       
>           TightIsoOS.Hist("WJets").obj      = WJetsShape.obj
>           TightIsoOS.Hist("WJets").weighted = WJetsShape.weighted
>           TightIsoOS.Hist("WJets").Scale(WJetsScale)
>     
>           TightIsoSS.Hist('WJets').obj      = WJetsShapeSS.obj
>           TightIsoSS.Hist('WJets').weighted = WJetsShapeSS.weighted
>           TightIsoSS.Hist('WJets').Scale(WJetsScaleSS)
> 
>         #####################################################
>         ###              TTJets ESTIMATION                ###
>         #####################################################
> 
>         #if susy : pass
>         ##if 'incl' in prefix or 'btag' in prefix : pass
>         #
>         #else :
>         #  for tt_sample in ['TTJetsFullLept','TTJetsSemiLept','TTJetsHadronic'] :        
>         #  
>         #    TTJetsShape = deepcopy(LooseIsoOS.Hist(tt_sample))
>         #  
>         #    try :
>         #      TTJetsScale = TightIsoOS.Hist(tt_sample).Integral() / LooseIsoOS.Hist(tt_sample).Integral()
>         #    except :
>         #      TTJetsScale = 0.
>         #  
>         #    TightIsoOS.Hist(tt_sample).obj      = TTJetsShape.obj
>         #    TightIsoOS.Hist(tt_sample).weighted = TTJetsShape.weighted
>         #    TightIsoOS.Hist(tt_sample).Scale(TTJetsScale)
447a548,561
>         
>         if susy or 'incl' in prefix  :
>           bin_min = 0
>           bin_max = 0
>           if var == 'svfitMass' :
>             bin_min = 100
>             bin_max = 150
>           if var == 'visMass' :
>             bin_min = 80
>             bin_max = 130
>           for bin in range(qcdshape.GetNbinsX()):
>             if ( qcdshape.GetBinCenter(bin+1)>bin_min and qcdshape.GetBinCenter(bin+1)<bin_max ):
>               if qcdshape.GetBinError(bin+1) < 0.1001*qcdshape.GetBinContent(bin+1) :
>                 qcdshape.SetBinError(bin+1,0.1001*qcdshape.GetBinContent(bin+1))
457c571
< 
---
>         
459,464c573,616
<           DYJetsScale = TightIsoOS.Hist("DYJets").Integral() / LooseIsoOS.Hist("DYJets").Integral()
<           myDY = {'DYJets':DYJetsScale,'DYJets_Electron':tightLoose,'DYJets_Fakes':tightLoose}
<           for sample in myDY.keys() :
<             TightIsoOS.Hist(sample).obj      = LooseIsoOS.Hist(sample).obj
<             TightIsoOS.Hist(sample).weighted = LooseIsoOS.Hist(sample).weighted
<             TightIsoOS.Hist(sample).Scale(myDY[sample])
---
>         
>           ## take ZTT from relaxed VBF full iso
>           for dy in ['DYJets'] :
>             DYJetsShape = deepcopy(LooseVBFOS.Hist(dy))
>             if TightIsoOS.Hist(dy).Integral() > 0 :
>               DYJetsScale = TightIsoOS.Hist(dy).Integral() / LooseVBFOS.Hist(dy).Integral()
>             else : 
>               DYJetsScale = 0.e-7
>             TightIsoOS.Hist(dy).obj      = DYJetsShape.obj
>             TightIsoOS.Hist(dy).weighted = DYJetsShape.weighted
>             TightIsoOS.Hist(dy).Scale(DYJetsScale)
> 
>           ## take ZL & ZJ from relaxed VBF loose iso
>           for dy in ['DYJets_ZL','DYJets_ZJ'] :
>             DYJetsShape = deepcopy(LooseIsoOS.Hist(dy))
>             if TightIsoOS.Hist(dy).Integral() > 0 :
>               DYJetsScale = TightIsoOS.Hist(dy).Integral() / LooseIsoOS.Hist(dy).Integral()
>             else : 
>               DYJetsScale = 0.e-7
>             TightIsoOS.Hist(dy).obj      = DYJetsShape.obj
>             TightIsoOS.Hist(dy).weighted = DYJetsShape.weighted
>             TightIsoOS.Hist(dy).Scale(DYJetsScale)
> 
>           ## take VV from relaxed VBF full iso
>           for vv in ['Tbar_tW','T_tW','WWJetsTo2L2Nu','WZJetsTo2L2Q','WZJetsTo3LNu','ZZJetsTo4L','ZZJetsTo2L2Nu','ZZJetsTo2L2Q'] :
>             VVJetsShape = deepcopy(LooseVBFOS.Hist(vv))
>             if TightIsoOS.Hist(vv).Integral() > 0 :
>               VVJetsScale = TightIsoOS.Hist(vv).Integral() / LooseVBFOS.Hist(vv).Integral()
>             else : 
>               VVJetsScale = 0.e-7
>             TightIsoOS.Hist(vv).obj      = VVJetsShape.obj
>             TightIsoOS.Hist(vv).weighted = VVJetsShape.weighted
>             TightIsoOS.Hist(vv).Scale(VVJetsScale)
> 
>           ## take TT from relaxed VBF full iso
>           for tt in ['TTJetsFullLept','TTJetsSemiLept','TTJetsHadronic'] :
>             TTJetsShape = deepcopy(LooseVBFOS.Hist(tt))
>             if TightIsoOS.Hist(tt).Integral() > 0 :
>               TTJetsScale = TightIsoOS.Hist(tt).Integral() / LooseVBFOS.Hist(tt).Integral()
>             else : 
>               TTJetsScale = 0.e-7
>             TightIsoOS.Hist(tt).obj      = TTJetsShape.obj
>             TightIsoOS.Hist(tt).weighted = TTJetsShape.weighted
>             TightIsoOS.Hist(tt).Scale(TTJetsScale)
473c625
<                              
---
>         
477,481d628
< 	
<         if datacard in var and (isinstance(nx, numpy.ndarray) or susy) and 'VBF'     in prefix :
<           saveForLimit(deepcopy(TightIsoOS),prefix,mIndex,datacard,not isinstance(nx, numpy.ndarray),"vbf"  ,susy)
<         if datacard in var and (isinstance(nx, numpy.ndarray) or susy) and 'BOOSTED' in prefix :
<           saveForLimit(deepcopy(TightIsoOS),prefix,mIndex,datacard,not isinstance(nx, numpy.ndarray),"boost",susy)
482a630,668
>         if scale_1pb :
>           for h in TightIsoOS.histos :
>             if 'Higgs' in h.name :
>               if susy and '125' in h.name :
>                 continue 
>               comp_name = deepcopy(h.name)
>               comp_name = comp_name.replace('_pthUp','')
>               comp_name = comp_name.replace('_pthNom','')
>               comp_name = comp_name.replace('_pthDown','')
>               print comp_name
>               print 'scaling Higgs to 1pb xSection', h.name, 'integral before', h.Integral(), 'xSection',selCompsDataMass[mIndex][comp_name].xSection
>               h.Scale(1./selCompsDataMass[mIndex][comp_name].xSection)
>               print 'scaling Higgs to 1pb xSection', h.name, 'integral after', h.Integral()
> 
>         for dc in datacards :
>           if dc in var and (isinstance(nx, numpy.ndarray) or susy) and 'VBF'     in prefix :
>             saveForLimit(deepcopy(TightIsoOS),prefix,mIndex,dc,not isinstance(nx, numpy.ndarray),"vbf"  ,susy)
>           if dc in var and (isinstance(nx, numpy.ndarray) or susy) and 'BOOSTED' in prefix :
>             saveForLimit(deepcopy(TightIsoOS),prefix,mIndex,dc,not isinstance(nx, numpy.ndarray),"boost",susy)
> 
>         if scale_1pb :
>           for h in TightIsoOS.histos :
>             if 'Higgs' in h.name :
>               if susy and '125' in h.name :
>                 continue 
>               comp_name = deepcopy(h.name)
>               comp_name = comp_name.replace('_pthUp','')
>               comp_name = comp_name.replace('_pthNom','')
>               comp_name = comp_name.replace('_pthDown','')
>               print 'scaling Higgs to 1pb xSection', h.name, 'integral before', h.Integral(), 'xSection',selCompsDataMass[mIndex][comp_name].xSection
>               h.Scale(selCompsDataMass[mIndex][comp_name].xSection)
>               print 'scaling Higgs to SM xSection', h.name, 'integral after', h.Integral()
> 
>         #####################################################
>         ###        REMOVE PTH SHAPES FROM PLOTTING        ###
>         #####################################################
>         
>         TightIsoOS.histos[:] = [ item for item in TightIsoOS.histos if '_pth' not in item.name ]        
>         
495a682
>           #pass
500a688,751
>         ###             POST FIT SCALE FACTORS            ###
>         #####################################################
>         
>         if post_fit :
>           ### no btag by Felix https://www.dropbox.com/sh/ngwkxtjh3o5vyft/gXR4Kkfm-r/scale-factors/scales_tt_8_8TeV.py
> #           scales = {
> #                     'WJets'         : [0.961             , 0.31800000000000006 ], 
> #                     'DYJets_ZJ'     : [0.9947585867429501, 0.2008190053256912  ], 
> #                     'TTJetsFullLept': [1.060317626483521 , 0.10774460543340446 ], 
> #                     'TTJetsSemiLept': [1.060317626483521 , 0.10774460543340446 ], 
> #                     'TTJetsHadronic': [1.060317626483521 , 0.10774460543340446 ], 
> #                     'T_tW'          : [0.8578554638710396, 0.2091989961734997  ], 
> #                     'WWJetsTo2L2Nu' : [0.8578554638710396, 0.2091989961734997  ], 
> #                     'WZJetsTo2L2Q'  : [0.8578554638710396, 0.2091989961734997  ], 
> #                     'WZJetsTo3LNu'  : [0.8578554638710396, 0.2091989961734997  ], 
> #                     'ZZJetsTo4L'    : [0.8578554638710396, 0.2091989961734997  ], 
> #                     'ZZJetsTo2L2Nu' : [0.8578554638710396, 0.2091989961734997  ], 
> #                     'ZZJetsTo2L2Q'  : [0.8578554638710396, 0.2091989961734997  ], 
> #                     'QCDdata'       : [1.021             , 0.014000000000000004], 
> #                     'DYJets'        : [1.202995664416    , 0.07819925127518802 ], 
> #                     #'ggH'       : [1.0740396143515993, 0.09232850264138373 ],
> #                     #'bbH'       : [1.067510161775943 , 0.09545020900972404 ], 
> #                    }
>           ### btag by Felix https://www.dropbox.com/sh/ngwkxtjh3o5vyft/gXR4Kkfm-r/scale-factors/scales_tt_8_8TeV.py
>           scales = {
>                     'WJets'         : [1.021             , 0.30900000000000005 ], 
>                     'DYJets_ZJ'     : [1.03432           , 0.022769999999999943], 
>                     'TTJetsFullLept': [1.2394256646447848, 0.1271779462013757  ], 
>                     'TTJetsSemiLept': [1.2394256646447848, 0.1271779462013757  ], 
>                     'TTJetsHadronic': [1.2394256646447848, 0.1271779462013757  ], 
>                     'T_tW'          : [1.002769744826734 , 0.21983982805670121 ], 
>                     'WWJetsTo2L2Nu' : [1.002769744826734 , 0.21983982805670121 ], 
>                     'WZJetsTo2L2Q'  : [1.002769744826734 , 0.21983982805670121 ], 
>                     'WZJetsTo3LNu'  : [1.002769744826734 , 0.21983982805670121 ], 
>                     'ZZJetsTo4L'    : [1.002769744826734 , 0.21983982805670121 ], 
>                     'ZZJetsTo2L2Nu' : [1.002769744826734 , 0.21983982805670121 ], 
>                     'ZZJetsTo2L2Q'  : [1.002769744826734 , 0.21983982805670121 ], 
>                     'QCDdata'       : [0.86              , 0.08400000000000002 ], 
>                     'DYJets'        : [1.201196568208    , 0.07796873027053855 ], 
>                     #'ggH'       : [1.2573506435760167, 0.11441102394437352 ],
>                     #'bbH'       : [1.249706780827847 , 0.11694474079666864 ], 
>                    }
>           
>           print scales
>            
>           for h in scales.keys() :
>             ## scale factor
>             TightIsoOS.Hist(h).Scale(scales[h][0])
>             
>             ## add systematics       
>             for bin in range(TightIsoOS.Hist(h).weighted.GetNbinsX()):
>               binerr = TightIsoOS.Hist(h).weighted.GetBinError(bin+1)
>               binc   = TightIsoOS.Hist(h).weighted.GetBinContent(bin+1)
>               newbinerr = math.sqrt( binerr*binerr + scales[h][1]*scales[h][1]*binc*binc )
>               #print 'h',h,'bin', bin+1, 'bin error', binerr, 'bin content',binc,'newbinerr', newbinerr,'scale',scales[h][1]
>               TightIsoOS.Hist(h).weighted.SetBinError(bin+1,newbinerr)
>         
>         #####################################################
>         ###                  REMOVE SIGNAL                ###
>         #####################################################
>         if remove_signal :
>           TightIsoOS.histos[:] = [ item for item in TightIsoOS.histos if 'Higgs' not in item.name ]        
> 
>         #####################################################
504,508c755,763
<         TightIsoOS.Group('electroweak'                                   , ['WJets', 'DYJets_Electron', 'DYJets_Fakes','ZZ','WZ','WW'])
<         TightIsoOS.Group('t#bar{t}'                                      , ['TTJets','Tbar_tW','T_tW'])
<         TightIsoOS.Group('Fakes'                                         , ['QCDdata'])
<         TightIsoOS.Group('Z#rightarrow#tau#tau'                          , ['DYJets'])
<         if susy :
---
>         TightIsoOS.Group('electroweak'          , ['WJets', 'DYJets_ZL', 'DYJets_ZJ','Tbar_tW','T_tW','WWJetsTo2L2Nu','WZJetsTo2L2Q','WZJetsTo3LNu','ZZJetsTo4L','ZZJetsTo2L2Nu','ZZJetsTo2L2Q']) #,'ZZ','WZ','WW'
>         TightIsoOS.Group('t#bar{t}'             , ['TTJetsFullLept','TTJetsSemiLept','TTJetsHadronic'])
>         TightIsoOS.Group('Fakes'                , ['QCDdata'])
>         TightIsoOS.Group('Z#rightarrow#tau#tau' , ['DYJets'])
>         TightIsoOS.Group('Background uncertainty' , [])
>         
>         #import pdb ; pdb.set_trace()
>         
>         if susy and not remove_signal:
510,511c765,766
<           TightIsoOS.Group('electroweak'                                                  , ['WJets', 'DYJets_Electron', 'DYJets_Fakes','ZZ','WZ','WW','HiggsVBF125', 'HiggsGGH125', 'HiggsVH125'])
<         else :
---
>           TightIsoOS.Group('electroweak'                                                   , ['WJets', 'DYJets_ZL', 'DYJets_ZJ','Tbar_tW','T_tW','HiggsVBF125', 'HiggsGGH125', 'HiggsVH125','WWJetsTo2L2Nu','WZJetsTo2L2Q','WZJetsTo3LNu','ZZJetsTo4L','ZZJetsTo2L2Nu','ZZJetsTo2L2Q'])
>         elif not remove_signal :
513,514c768,770
< 
<         #for h in ['electroweak','t#bar{t}','Z#rightarrow#tau#tau','5x H('+str(mIndex)+' GeV)#rightarrow#tau#tau','Data','Fakes'] :
---
>         else :
>           pass
>          
516,517c772,773
<           #TightIsoOS.Hist(h).weighted.SetTitle('CMS preliminary 2012, #sqrt{s} = 8TeV, L = 19.4 fb^{-1}        #tau_{h}#tau_{h}')
<           TightIsoOS.Hist(h).weighted.SetTitle('CMS preliminary 2012, #sqrt{s} = 8TeV, L = 18.4 fb^{-1}        #tau_{h}#tau_{h}')
---
>           TightIsoOS.Hist(h).weighted.SetTitle('CMS preliminary 2012, #sqrt{s} = 8TeV, L = 19.8 fb^{-1}        #tau_{h}#tau_{h}')
>           if susy : TightIsoOS.Hist(h).weighted.SetTitle('CMS preliminary 2012, #sqrt{s} = 8TeV, L = 18.3 fb^{-1}        #tau_{h}#tau_{h}')
542,543c798,799
<         gPad.SetLeftMargin(0.15)
<         gPad.SetBottomMargin(0.15)
---
>         gPad.SetLeftMargin(0.18)
>         gPad.SetBottomMargin(0.18)
550,553c806,813
< #         if not (susy and var == 'svfitMass' and not isinstance(nx, numpy.ndarray) ):
< #           TightIsoOS.DrawStack("HIST")
< 
<         TightIsoOS.DrawStack("HIST")
---
>         #if not (susy and var == 'svfitMass' and not isinstance(nx, numpy.ndarray) ):
>         #  TightIsoOS.DrawStack("HIST")
>         
>         #import pdb ; pdb.set_trace()
>         ymax = None
>         if 'Eta' in var or 'eta' in var or 'dRtt' in var :
>          ymax = TightIsoOS.Hist("Data").GetMaximum()*2.0
>         TightIsoOS.DrawStack("HIST",xmin,xmax,0.1,ymax)
Index: CMGTools/H2TauTau/python/proto/plotter/titles_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/plotter/titles_diTau.py,v
retrieving revision 1.2
diff -r1.2 titles_diTau.py
17a18,19
>     'jet1Btag'        : 'jet_{1} b-Tag',
>     'jet2Btag'        : 'jet_{2} b-Tag',
37,38c39,40
<     'mt1'             : 'm_{T}^1',
<     'mt2'             : 'm_{T}^2',
---
>     'mt1'             : 'm_{T}^{1}',
>     'mt2'             : 'm_{T}^{2}',
Index: CMGTools/H2TauTau/python/proto/samples/run2012/data_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/samples/run2012/data_diTau.py,v
retrieving revision 1.5
diff -r1.5 data_diTau.py
14c14
<     intLumi = 806.194 + 82.136,
---
>     intLumi = 96.404 + 396.906 + 395.991,
20c20
<     intLumi = 4420.,
---
>     intLumi = 4429.,
26c26
<     intLumi = 493.975+6397.,
---
>     intLumi = 1783. + 5087. + 282.692,
32c32
<     intLumi = 7274.,
---
>     intLumi = 7318.,
41c41
<                      #data_Run2012A_22Jan2013_v1,
---
>                      data_Run2012A_22Jan2013_v1,
Index: CMGTools/H2TauTau/python/proto/samples/run2012/embed.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/samples/run2012/embed.py,v
retrieving revision 1.13
diff -r1.13 embed.py
6c6
< vertexFileDir = os.environ['CMSSW_BASE'] + '/src/CMGTools/RootTools/data/Reweight/2012/Vertices'
---
> vertexFileDir = os.environ['CMSSW_BASE'] + '/src/CMGTools/RootTools/embed/Reweight/2012/Vertices'
8,11c8,9
< # trigger list: 'HLT_Mu17_Mu8_v16', 'HLT_Mu17_Mu8_v17', 'HLT_Mu17_Mu8_v18', 'HLT_Mu17_Mu8_v19', 'HLT_Mu17_Mu8_v21', 'HLT_Mu17_Mu8_v22'
< 
< embed_Run2012A_22Jan = cfg.EmbedComponent(
<     name = 'embed_Run2012A_22Jan',
---
> embed_Run2012A_22Jan2013_v1 = cfg.EmbedComponent(
>     name = 'embed_Run2012A_22Jan2013_v1',
18,19c16,17
< embed_Run2012B_22Jan = cfg.EmbedComponent(
<     name = 'embed_Run2012B_22Jan',
---
> embed_Run2012B_22Jan2013_v1 = cfg.EmbedComponent(
>     name = 'embed_Run2012B_22Jan2013_v1',
25,27c23,25
<     
< embed_Run2012C_22Jan = cfg.EmbedComponent(
<     name = 'embed_Run2012C_22Jan',
---
> 
> embed_Run2012C_22Jan2013_v1 = cfg.EmbedComponent(
>     name = 'embed_Run2012C_22Jan2013_v1',
33,35c31,33
<     
< embed_Run2012D_22Jan = cfg.EmbedComponent(
<     name = 'embed_Run2012D_22Jan',
---
> 
> embed_Run2012D_22Jan2013_v1 = cfg.EmbedComponent(
>     name = 'embed_Run2012D_22Jan2013_v1',
42,47c40,43
<     
< 
< embed_list = [embed_Run2012A_22Jan,
<               embed_Run2012B_22Jan,
<               embed_Run2012C_22Jan,
<               embed_Run2012D_22Jan
---
> embed_list = [embed_Run2012A_22Jan2013_v1,
>               embed_Run2012B_22Jan2013_v1,
>               embed_Run2012C_22Jan2013_v1,
>               embed_Run2012D_22Jan2013_v1
52a49,141
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> # 
> # 
> # embed_Run2012A_13Jul2012_v1 = cfg.EmbedComponent(
> #     name = 'embed_Run2012A_13Jul2012_v1',
> #     files = [],
> #     intLumi = 1.0, # dummy
> #     triggers = [],
> #     json = None
> #     )
> # 
> # embed_Run2012A_recover_06Aug2012_v1 = cfg.EmbedComponent(
> #     name = 'embed_Run2012A_recover_06Aug2012_v1',
> #     files = [],
> #     intLumi = 1.0, # dummy
> #     triggers = [],
> #     json = None
> #     )
> # 
> # embed_Run2012B_13Jul2012_v4 = cfg.EmbedComponent(
> #     name = 'embed_Run2012B_13Jul2012_v4',
> #     files = [],
> #     intLumi = 1.0, # dummy
> #     triggers = [],
> #     json = None
> #     )
> #     
> # embed_Run2012C_24Aug2012_v1 = cfg.EmbedComponent(
> #     name = 'embed_Run2012C_24Aug2012_v1',
> #     files = [],
> #     intLumi = 1.0, # dummy
> #     triggers = [],
> #     json = None
> #     )
> #     
> # embed_Run2012C_PromptReco_v2 = cfg.EmbedComponent(
> #     name = 'embed_Run2012C_PromptReco_v2',
> #     files = [],
> #     intLumi = 1.0, # dummy
> #     triggers = [],
> #     json = None
> #     )
> # 
> # embed_2012D_PromptReco_v1 = cfg.EmbedComponent(
> #     name = 'embed_2012D_PromptReco_v1',
> #     files = [],
> #     intLumi = 1.0, # dummy
> #     triggers = [],
> #     json = None
> #     )
> # 
> #     
> # 
> # embed_list = [embed_Run2012A_13Jul2012_v1,
> #               #embed_Run2012A_recover_06Aug2012_v1,
> #               embed_Run2012B_13Jul2012_v4,
> #               embed_Run2012C_24Aug2012_v1,
> #               embed_Run2012C_PromptReco_v2,
> #               embed_2012D_PromptReco_v1
> #               ]
> # 
> # 
> # 
> # 
Index: CMGTools/H2TauTau/python/proto/samples/run2012/ewk.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/samples/run2012/ewk.py,v
retrieving revision 1.15
diff -r1.15 ewk.py
51a52,59
> WJets_v2 = cfg.MCComponent(
>     name = 'WJets_v2',
>     files = [],
>     xSection = 36257.2 ,
>     nGenEvents = 1,
>     triggers = [],
>     effCorrFactor = 1 )
> 
83a92,117
> W1Jets_new = cfg.MCComponent(
>     name = 'W1Jets_new',
>     files = [],
>     xSection = 6440.4, #PG inclusive scaled according to LO XS
>     nGenEvents = 1,
>     triggers = [],
>     effCorrFactor = 1 )
> 
> W2Jets_new = cfg.MCComponent(
>     name = 'W2Jets_new',
>     files = [],
>     xSection = 2087.2, #PG inclusive scaled according to LO XS
>     nGenEvents = 1,
>     triggers = [],
>     effCorrFactor = 1 )
> 
> W3Jets_new = cfg.MCComponent(
>     name = 'W3Jets_new',
>     files = [],
>     xSection = 619.0, #PG inclusive scaled according to LO XS
>     nGenEvents = 1,
>     triggers = [],
>     effCorrFactor = 1 )
> 
> 
> 
87c121,130
<     xSection = 228.4, # correction factor from Valentina removed as it depends on the jet binning
---
>     #xSection = 228.4,  # correction factor from Valentina removed as it depends on the jet binning
>     xSection = 249.5*0.96, # correction factor from Valentina removed as it depends on the jet binning
>     nGenEvents = 1,
>     triggers = [],
>     effCorrFactor = 1 )
> 
> TTJets_emb = cfg.MCComponent(
>     name = 'TTJets_emb',
>     files = [],
>     xSection = 1.,
95c138,139
<     xSection = 228.4*(1-0.676)*(1-0.676),
---
>     #xSection = 228.4*(1-0.676)*(1-0.676),
>     xSection = 249.5*(1-0.676)*(1-0.676)*0.96,
103c147,148
<     xSection = 228.4*(1-0.676)*0.676*2,
---
>     #xSection = 228.4*(1-0.676)*0.676*2,
>     xSection = 249.5*(1-0.676)*0.676*2*0.96,
111c156,157
<     xSection = 228.4*0.676*0.676,
---
>     #xSection = 228.4*0.676*0.676,
>     xSection = 249.5*0.676*0.676*0.96,
132,133d177
< 
< 
143a188
>     WJets_v2,
149a195,201
> mc_w_new = [
>     W1Jets_new,
>     W2Jets_new,
>     W3Jets_new,
>     ]
> 
> 
162a215
> mc_ewk += mc_w_new
Index: CMGTools/H2TauTau/python/proto/samples/run2012/triggers_diTau.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/proto/samples/run2012/triggers_diTau.py,v
retrieving revision 1.8
diff -r1.8 triggers_diTau.py
41a42,51
> emb_rechit_triggers = [
>     'HLT_Mu17_Mu8_v16', 
>     'HLT_Mu17_Mu8_v17', 
>     'HLT_Mu17_Mu8_v18', 
>     'HLT_Mu17_Mu8_v19', 
>     'HLT_Mu17_Mu8_v21', 
>     'HLT_Mu17_Mu8_v21', 
>     'HLT_Mu17_Mu8_v22'
>     ]
> 
Index: CMGTools/H2TauTau/python/tools/setupOutput.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/tools/setupOutput.py,v
retrieving revision 1.5
diff -r1.5 setupOutput.py
5c5
< def addOutput( process, type12, addDebugEventContent=False, addPreSel=True):
---
> def addOutput( process, type12, addDebugEventContent=False, addPreSel=True, RH_Emedded=False):
42c42,51
<         
---
>     
>     if RH_Emedded :
>       eventContent += [
>        'keep *_embeddingKineReweightRECembedding_*_*',
>        'keep *_TauSpinnerReco_*_*',
>        'keep *_ZmumuEvtSelEffCorrWeightProducer_*_*',
>        'keep *_muonRadiationCorrWeightProducer_*_*',
>        'keep *_generator_*_*',
>        'keep *_genTausFromZsForEmbeddingKineReweight_*_*',
>        ] 
79a89
> #     import pdb ; pdb.set_trace()
81a92,94
>     
> def addTauMuOutput( process, debugEventContent=False, addPreSel=True, RH_Emedded=False):
>     addOutput(process,'tauMu', debugEventContent, addPreSel, RH_Emedded )
83,87c96,97
< def addTauMuOutput( process, debugEventContent=False, addPreSel=True):
<     addOutput(process,'tauMu', debugEventContent, addPreSel )
< 
< def addTauEleOutput( process, debugEventContent=False, addPreSel=True ):
<     addOutput(process,'tauEle', debugEventContent, addPreSel )
---
> def addTauEleOutput( process, debugEventContent=False, addPreSel=True, RH_Emedded=False ):
>     addOutput(process,'tauEle', debugEventContent, addPreSel, RH_Emedded )
89,90c99,100
< def addMuEleOutput( process, debugEventContent=False, addPreSel=True ):
<     addOutput(process,'muEle', debugEventContent, addPreSel )
---
> def addMuEleOutput( process, debugEventContent=False, addPreSel=True, RH_Emedded=False ):
>     addOutput(process,'muEle', debugEventContent, addPreSel, RH_Emedded )
92,93c102,103
< def addDiTauOutput( process, debugEventContent=False, addPreSel=True ):
<     addOutput(process,'diTau', debugEventContent, addPreSel )
---
> def addDiTauOutput( process, debugEventContent=False, addPreSel=True, RH_Emedded=False ):
>     addOutput(process,'diTau', debugEventContent, addPreSel, RH_Emedded )
Index: CMGTools/H2TauTau/python/tools/setupRecoilCorrection.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/H2TauTau/python/tools/setupRecoilCorrection.py,v
retrieving revision 1.23
diff -r1.23 setupRecoilCorrection.py
13c13
<     zmm = 'recoilfit_zmm53X_20pv_njet.root',
---
>     zmm = 'recoilfit_zmm53XRR_2012_njet.root',
18a19
>     #zmm = 'recoilfit_zmm53XRR_2012_njet.root',
61,64c62,65
<     if lookup( fileName, 'GluGluToHToTauTau' ) or \
<            lookup( fileName, 'VBF_HToTauTau' ) or \
<            lookup( fileName, 'VBFHToTauTau' ) or \
<            lookup( fileName, 'SUSYBBHToTauTau' ) or \
---
>     if lookup( fileName, 'GluGluToHToTauTau'         ) or \
>            lookup( fileName, 'VBF_HToTau'            ) or \
>            lookup( fileName, 'VBFHToTauTau'          ) or \
>            lookup( fileName, 'SUSYBBHToTauTau'       ) or \
66c67
<            lookup( fileName, 'WH_ZH_TTH_HToTauTau' ):
---
>            lookup( fileName, 'WH_ZH_TTH_HToTauTau'   ):
99,100c100,103
<         fileZmmData = rootfile_dir + 'recoilfit_datamm53X_2012_njet.root'
<         fileZmmMC = rootfile_dir + 'recoilfit_zmm53X_2012_njet.root'
---
>         #fileZmmData = rootfile_dir + 'recoilfit_datamm53X_2012_njet.root' # for Prompt Reco
>         #fileZmmMC = rootfile_dir + 'recoilfit_zmm53X_2012_njet.root'      # for Prompt Reco
>         fileZmmData = rootfile_dir + 'recoilfit_datamm53XRR_2012_njet.root'  # for ReReco
>         fileZmmMC = rootfile_dir   + 'recoilfit_zmm53XRR_2012_njet.root'     # for ReReco
Index: CMGTools/Production/python/dataset.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/Production/python/dataset.py,v
retrieving revision 1.24
diff -r1.24 dataset.py
342,344c342,347
<         pckfile = open( cachename, 'w')
<         pickle.dump(dataset, pckfile)
< 
---
>         try :
>           pckfile = open( cachename, 'w')
>           pickle.dump(dataset, pckfile)
>         except:
>           pass
>         
Index: CMGTools/Production/python/hadd.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/Production/python/hadd.py,v
retrieving revision 1.6
diff -r1.6 hadd.py
39c39,40
<         except ImportError:
---
>         #except ImportError:
>         except :
Index: CMGTools/RootTools/python/Style.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/Style.py,v
retrieving revision 1.15
diff -r1.15 Style.py
28c28
<         hist.GetYaxis().SetTitleOffset(1.2)        
---
>         hist.GetYaxis().SetTitleOffset(1.7)        
Index: CMGTools/RootTools/python/DataMC/DataMCPlot.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/DataMC/DataMCPlot.py,v
retrieving revision 1.20
diff -r1.20 DataMCPlot.py
138a139
>         #import pdb ; pdb.set_trace()
Index: CMGTools/RootTools/python/DataMC/Stack.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/DataMC/Stack.py,v
retrieving revision 1.13
diff -r1.13 Stack.py
71a72,73
>         #else :
>         #    ymax = hist.GetMaximum()*ymax   
91a94
>         #import pdb ; pdb.set_trace()
Index: CMGTools/RootTools/python/analyzers/PileUpAnalyzer.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/analyzers/PileUpAnalyzer.py,v
retrieving revision 1.8
diff -r1.8 PileUpAnalyzer.py
52a53,57
>         ## if component is embed return (has no trigger obj)
>         if self.cfg_comp.isEmbed :
>           self.cfg_comp.puFileMC   = None
>           self.cfg_comp.puFileData = None
>           
92a98,100
>         ## if component is embed return (has no trigger obj)
>         if self.cfg_comp.isEmbed :
>           return True
Index: CMGTools/RootTools/python/analyzers/TriggerAnalyzer.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/analyzers/TriggerAnalyzer.py,v
retrieving revision 1.22
diff -r1.22 TriggerAnalyzer.py
8,9d7
< 
< 
40a39,43
> 
>         #if iEvent.eventAuxiliary().id().event() in notPassed :
>         #  print 'before anything'
>         #  import pdb ; pdb.set_trace()
>         
50a54,57
>         ## if component is embed return (has no trigger obj) RHEMB will have trigger!
>         if self.cfg_comp.isEmbed and len(self.cfg_comp.triggers)==0 :
>           return True
> 
60a68,73
>                 
>         ### want to check whether more than one unprescaled trigger has been fired
>         hltPathVec = []
>         
>         self.triggerList = TriggerList( self.cfg_comp.triggers )
>         
62a76
>                                                          self.cfg_comp.isEmbed,
65,66c79,98
< 
< 
---
>         if passed and not hltPath == None:
>           hltPathVec.append(hltPath)
>         
>         
>         if passed and not hltPath == None:
>           for tr in self.cfg_comp.triggers :       
>             if tr in hltPathVec : 
>               for triggerToRemove in self.triggerList.triggerList :
>                 if triggerToRemove.name == tr :
>                   self.triggerList.triggerList.remove(triggerToRemove)
> 
>               passed2, hltPath2 = self.triggerList.triggerPassed(event.triggerObject,
>                                                                run, lumi, self.cfg_comp.isData,
>                                                                self.cfg_comp.isEmbed,
>                                                                usePrescaled = usePrescaled)
>               if passed2 and not hltPath2 == None:
>                 hltPathVec.append(hltPath2)
>         
>         event.hltPaths = set(hltPathVec)
>         
71a104
>                                                          self.cfg_comp.isEmbed,
80a114,116
>                 #if iEvent.eventAuxiliary().id().event() in notPassed :
>                 #  print 'before anything'
>                 #  import pdb ; pdb.set_trace()
84a121
>         #import pdb ; pdb.set_trace()
Index: CMGTools/RootTools/python/fwlite/Looper.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/fwlite/Looper.py,v
retrieving revision 1.16
diff -r1.16 Looper.py
41a42
>         # import pdb ; pdb.set_trace()
44a46
>             #import pdb ; pdb.set_trace()
Index: CMGTools/RootTools/python/json/jsonPick.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/json/jsonPick.py,v
retrieving revision 1.1
diff -r1.1 jsonPick.py
76a77,86
> 
>                '/Tau/Run2012A-22Jan2013-v1/AOD'      ,
>                '/TauParked/Run2012B-22Jan2013-v1/AOD',
>                '/TauParked/Run2012C-22Jan2013-v1/AOD',
>                '/TauParked/Run2012D-22Jan2013-v1/AOD',
>                '/DoubleMu/StoreResults-Run2012A_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
>                '/DoubleMuParked/StoreResults-Run2012B_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
>                '/DoubleMuParked/StoreResults-Run2012C_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
>                '/DoubleMuParked/StoreResults-Run2012D_22Jan2013_v1_RHembedded_trans1_tau132_pthad1_30had2_30_v1-f456bdbb960236e5c696adfe9b04eaae/USER',
> 
Index: CMGTools/RootTools/python/physicsobjects/DiObject.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/physicsobjects/DiObject.py,v
retrieving revision 1.13
diff -r1.13 DiObject.py
101,104c101,102
<                 dR2leg1 = deltaR2(self.leg1().eta(), self.leg1().phi(),
<                                   genTau.eta(), genTau.phi() )
<                 dR2leg2 = deltaR2(self.leg2().eta(), self.leg2().phi(),
<                                   genTau.eta(), genTau.phi() )
---
>                 dR2leg1 = deltaR2(self.leg1().eta(), self.leg1().phi(), genTau.eta(), genTau.phi() )
>                 dR2leg2 = deltaR2(self.leg2().eta(), self.leg2().phi(), genTau.eta(), genTau.phi() )
Index: CMGTools/RootTools/python/utils/TriggerList.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/utils/TriggerList.py,v
retrieving revision 1.7
diff -r1.7 TriggerList.py
29c29,30
<         datasets = ['TauPlusX']
---
>         #datasets = ['TauPlusX']
>         datasets = ['Tau','TauParked','DoubleMu','DoubleMuParked']
35c36
<     def restrictList(self, run, triggerList ):
---
>     def restrictList(self, run, triggerList, isData, isEmbed ):
44c45,60
<                 selMenus = self.menus.findUnprescaledPaths(run, 'TauPlusX')
---
>                 #import pdb ; pdb.set_trace()
>                 if isData :
>                   selMenus  = self.menus.findUnprescaledPaths(run, 'Tau')
>                   try :
>                     selMenus2 = self.menus.findUnprescaledPaths(run, 'TauParked')
>                     selMenus += selMenus2
>                   except :
>                     pass
>                 if isEmbed :
>                   selMenus  = self.menus.findUnprescaledPaths(run, 'DoubleMu')
>                   try :
>                     selMenus2  = self.menus.findUnprescaledPaths(run, 'DoubleMuParked')
>                     selMenus += selMenus2
>                   except :
>                     pass 
>                 #import pdb ; pdb.set_trace()
57a74
>         #import pdb ; pdb.set_trace()
61c78
<                       isData, usePrescaled=False):
---
>                       isData, isEmbed, usePrescaled=False):
67c84,86
< 
---
>         
>         #import pdb ; pdb.set_trace()
>         
69,70c88,89
<         if isData:
<             triggerList = self.restrictList( run, self.triggerList ) 
---
>         if isData or isEmbed:
>             triggerList = self.restrictList( run, self.triggerList, isData, isEmbed ) 
78a98
>             #import pdb ; pdb.set_trace()
89a110
> 
Index: CMGTools/RootTools/python/utils/TriggerMatching.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/utils/TriggerMatching.py,v
retrieving revision 1.5
diff -r1.5 TriggerMatching.py
1a2
> import math
4d4
< 
6c6
<                     dR2Max=0.089999, pdgIds=None):
---
>                     dR2Max=0.089999, dRMax=0., pdgIds=None):
8d7
<     # import pdb; pdb.set_trace()
14c13
<         if trigObj.hasPath( path ) and \
---
>         if trigObj.hasPath( path )        and \
15a15
>            dRMax == 0.                    and \
17,18c17,23
<             if pdgIds is None or \
<                    abs(trigObj.pdgId()) in pdgIds:
---
>             if pdgIds is None or abs(trigObj.pdgId()) in pdgIds:
>                 return True
>         if trigObj.hasPath( path )        and \
>            trigObj.hasSelection( filter ) and \
>            dRMax > 0.                     and \
>            math.sqrt(deltaR2( eta, phi, trigObj.eta(), trigObj.phi() )) < dRMax:
>             if pdgIds is None or abs(trigObj.pdgId()) in pdgIds:
Index: CMGTools/RootTools/python/utils/triggerevo.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/RootTools/python/utils/triggerevo.py,v
retrieving revision 1.3
diff -r1.3 triggerevo.py
179a180,184
>         #import pdb ; pdb.set_trace()
>         
>         #print data
>         #print data[3]
>         
181,184c186,189
<         self.data = data
<         self.period = data[2]
<         self.lumi = float(data[3])
<         self.version = data[4]
---
>         self.data       = data
>         self.period     = data[2]
>         self.lumi       = float(data[3])
>         self.version    = data[4]
200c205
<     datasets = ['TauPlusX','MuEG']
---
>     datasets = ['TauPlusX','MuEG','Tau','TauParked','DoubleMu','DoubleMuParked']
Index: CMGTools/Utilities/interface/MVAMETProducer.h
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/Utilities/interface/MVAMETProducer.h,v
retrieving revision 1.7
diff -r1.7 MVAMETProducer.h
166,167c166,167
<   const reco::PFMET* pfmet = &( (*pfmetH)[0] );
<   const reco::PFMET* tkmet = &( (*tkmetH)[0] );
---
>   const reco::PFMET* pfmet   = &( (*pfmetH)[0]   );
>   const reco::PFMET* tkmet   = &( (*tkmetH)[0]   );
169,170c169,170
<   const reco::PFMET* pucmet = &( (*pucmetH)[0] );
<   const reco::PFMET* pumet = &( (*pumetH)[0] );
---
>   const reco::PFMET* pucmet  = &( (*pucmetH)[0]  );
>   const reco::PFMET* pumet   = &( (*pumetH)[0]   );
Index: CMGTools/Utilities/interface/RecoilCorrectedMETProducer.h
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/Utilities/interface/RecoilCorrectedMETProducer.h,v
retrieving revision 1.5
diff -r1.5 RecoilCorrectedMETProducer.h
49a50,51
> //   int  nJets( const JetCollectionType& jets, 
> // 	      const RecBosonType& boson, float deltaR, long genPdgId);
51c53
< 	      const RecBosonType& boson, float deltaR);
---
> 	      const RecBosonType& boson, float deltaR, bool isW);
80,84c82,86
<   genBosonSrc_( iConfig.getParameter<edm::InputTag>("genBosonSrc") ),
<   recBosonSrc_( iConfig.getParameter<edm::InputTag>("recBosonSrc") ),
<   jetSrc_( iConfig.getParameter<edm::InputTag>("jetSrc") ),
<   deltaRCut_(0.5),
<   leptonLeg_( iConfig.getParameter<int>("leptonLeg") ),
---
>   genBosonSrc_   ( iConfig.getParameter<edm::InputTag>("genBosonSrc") )                        ,
>   recBosonSrc_   ( iConfig.getParameter<edm::InputTag>("recBosonSrc") )                        ,
>   jetSrc_        ( iConfig.getParameter<edm::InputTag>("jetSrc") )                             ,
>   deltaRCut_     ( 0.5 )                                                                       ,
>   leptonLeg_     ( iConfig.getParameter<int>("leptonLeg") )                                    ,
86,88c88,90
<   enable_( iConfig.getParameter<bool>("enable") ),
<   force_( iConfig.getParameter<bool>("force") ),
<   verbose_( iConfig.getUntrackedParameter<bool>("verbose", false ) ) {
---
>   enable_        ( iConfig.getParameter<bool>("enable") )                                      ,
>   force_         ( iConfig.getParameter<bool>("force") )                                       ,
>   verbose_       ( iConfig.getUntrackedParameter<bool>("verbose", false ) )                    {
91,92c93,94
<   std::string fileZmmData = iConfig.getParameter<std::string>("fileZmmData");
<   std::string fileZmmMC = iConfig.getParameter<std::string>("fileZmmMC");
---
>   std::string fileZmmData   = iConfig.getParameter<std::string>("fileZmmData")  ;
>   std::string fileZmmMC     = iConfig.getParameter<std::string>("fileZmmMC")    ;
136,138c138,141
<   double genPt = genBoson.pt(); 
<   double genPhi = genBoson.phi();
< 
---
>   double genPt    = genBoson.pt()    ; 
>   double genPhi   = genBoson.phi()   ;
>   bool   isW      = false            ;
>   if (abs(genBoson.pdgId()) == 24) isW = true ;
143c146
<   //COLIN should add a force mode to bypass these exceptions
---
>   // COLIN should add a force mode to bypass these exceptions
231c234
<     jetMult = nJets( *jetH, recBoson, deltaRCut_ ); 
---
>     jetMult = nJets( *jetH, recBoson, deltaRCut_, isW); 
282a286,288
> // int  RecoilCorrectedMETProducer< RecBosonType >::nJets( const JetCollectionType& jets, 
> // 							const RecBosonType& boson, float deltaR, long genPdgId) {
>   
284c290,291
< 							const RecBosonType& boson, float deltaR) {
---
> 							const RecBosonType& boson, float deltaR, bool isW) {
>   
317,318c324,326
< 
<   return nJets;
---
>   
>   if (isW) return nJets+1 ;  
>   else     return nJets   ;
Index: CMGTools/Utilities/python/metRecoilCorrection/recoilCorrectedMETDiTau_cfi.py
===================================================================
RCS file: /local/reps/CMSSW/UserCode/CMG/CMGTools/Utilities/python/metRecoilCorrection/recoilCorrectedMETDiTau_cfi.py,v
retrieving revision 1.3
diff -r1.3 recoilCorrectedMETDiTau_cfi.py
7c7
<     metSrc = cms.InputTag('cmgPFMET'),
---
>     # metSrc = cms.InputTag('cmgPFMET'),
19,20c19,22
<     fileZmmData = cms.string(rootfile_dir + 'recoilfit_datamm53X_20pv_njet.root'),
<     fileZmmMC = cms.string(rootfile_dir + 'recoilfit_zmm53X_20pv_njet.root'),
---
>     #fileZmmData = cms.string(rootfile_dir + 'recoilfit_datamm53X_20pv_njet.root'),
>     #fileZmmMC = cms.string(rootfile_dir + 'recoilfit_zmm53X_20pv_njet.root'),
>     fileZmmData = cms.string(rootfile_dir + 'recoilfit_datamm53XRR_2012_njet.root'),
>     fileZmmMC = cms.string(rootfile_dir + 'recoilfit_zmm53XRR_2012_njet.root'),
Index: TauAnalysis/CandidateTools/bin/nsvfitStandalone.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/TauAnalysis/CandidateTools/bin/nsvfitStandalone.cc,v
retrieving revision 1.5.2.5
diff -r1.5.2.5 nsvfitStandalone.cc
2a3,4
> #include "TLorentzVector.h"
> #include <time.h>
15a18,90
> //   ************************************************************************************************************************************************************************************************************
> //   *    Row   *       evt *      pt_1 *      pt_2 *     eta_1 *     eta_2 *     phi_1 *     phi_2 *       m_1 *       m_2 *    mvamet * mvametphi *  mvacov00 *  mvacov01 *  mvacov11 *      m_sv *      mvis *
> //   ************************************************************************************************************************************************************************************************************
> //   *       13 * 165907073 * 75.739288 * 48.324012 * -1.550589 * 0.2400562 * -1.087979 * 2.3772344 * 0.8414608 * 0.8543023 * 4.4676966 * -0.404438 * 166.29016 * 14.817026 * 283.93032 * 195.61764 * 171.72894 *
> //   ************************************************************************************************************************************************************************************************************
> // ************************************************************************************************************************************************
> // *    Row   *     event *      l1Px *      l1Py *      l1Pz *       l1E *      l2Px *      l2Py *      l2Pz *       l2E *       met *    metPhi *
> // ************************************************************************************************************************************************
> // *     1715 * 165907073 * 35.163917 * -67.08158 * -170.4938 * 186.56179 * -34.88156 * 33.443786 * 11.712217 * 49.730434 * 4.4676966 * -0.404438 *
> // ************************************************************************************************************************************************
> // ************************************************************************************************************************************************************************
> // *    Row   *     event *      l1Px *      l1Py *      l1Pz *       l1E *      l2Px *      l2Py *      l2Pz *       l2E *       met *    metPhi *       mex *       mey *
> // ************************************************************************************************************************************************************************
> // *        6 *   5955101 * -27.54659 * 47.296833 * 15.885040 * 56.993610 * 4.5915265 * -45.02828 * -76.17942 * 88.614402 * 7.7737574 * -1.827878 * -1.976556 * -7.518279 *
> 
> 
> 
> 
> 
> /*
> Tau1 px()    	-80.8393
> Tau1 py()    	-8.54607
> Tau1 pz()    	57.1108
> Tau1 mass()  	0.0258703
> Tau1 energy()	99.3462
> Tau1 eta()   	0.654761
> Tau1 phi()   	-3.03627
> Tau2 px()    	-40.0303
> Tau2 py()    	34.8123
> Tau2 pz()    	-25.784
> Tau2 mass()  	0.00879871
> Tau2 energy()	58.9842
> Tau2 eta()   	-0.468683
> Tau2 phi()   	2.4258
> MET          	7.91566
> MET Phi      	1.96094
> MEx          	-3.01049
> MEy          	7.32083
> mvacov00     	416.892
> mvacov01     	72.502
> mvacov10     	72.502
> mvacov11     	169.138
> 	m_vis = 93.7432, m_svfit = 106.369
> found mass    = 109.028
> 
> */
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
20c95,98
<   Vector MET(11.7491, -51.9172, 0.); 
---
>   // event 75225226
>   //Vector MET(-15.6809989128504164, 6.12556021895826319, 0.); 
>   //Vector MET(-19.73485, -5.720700, 0.); 
>   Vector MET(TMath::Cos(-0.242009)*13.177546, TMath::Sin(-0.242009)*13.177546, 0.); 
29,32c107,115
<   covMET[0][0] = 787.352;
<   covMET[1][0] = -178.63;
<   covMET[0][1] = -178.63;
<   covMET[1][1] = 179.545;
---
>   // event 75225226
>   //covMET[0][0] = 117.81176;
>   //covMET[1][0] = 43.810665;
>   //covMET[0][1] = 43.810665;
>   //covMET[1][1] = 127.24190;
>   covMET[0][0] = 535.00811;
>   covMET[1][0] = -202.4530;
>   covMET[0][1] = -202.4530;
>   covMET[1][1] = 422.10998;
34,35c117,122
<   NSVfitStandalone::LorentzVector l1( 28.9132, -17.3888, 36.6411, 49.8088); //lepton
<   NSVfitStandalone::LorentzVector l2(-24.19  ,  8.77449, 16.9413, 30.8086); //tau
---
>                                 //       px    ,  py      , pz        , E 
>   // event 873552766
>   NSVfitStandalone::LorentzVector l1( TMath::Cos(0.5807800)*145.91406, TMath::Sin(0.5807800)*145.91406, 3.01203229139404201e+01 ,1.48996438446225199e+02); // tau
>   NSVfitStandalone::LorentzVector l2( TMath::Cos(0.8599243)*96.976562, TMath::Sin(0.8599243)*96.976562, 9.12369262040504907e+01 ,1.33148975816092161e+02); // tau
>   //NSVfitStandalone::LorentzVector l1( -44.22908, 50.860073, 78.779418, 103.68624); // tau
>   //NSVfitStandalone::LorentzVector l2( -40.81599, -24.83730, -126.8154, 135.52206); // tau
36a124
>   measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(NSVfitStandalone::kHadDecay, l1));
38c126
<   measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(NSVfitStandalone::kLepDecay, l1));
---
> //   measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(NSVfitStandalone::kLepDecay, l1));
40c128
<   NSVfitStandaloneAlgorithm algo(measuredTauLeptons, MET, covMET, /*debug=*/0);
---
>   NSVfitStandaloneAlgorithm algo(measuredTauLeptons, MET, covMET, /*debug=*/3);
48c136
<   //algo.integrateVEGAS();
---
>   algo.integrateVEGAS();
50c138
<   algo.integrateMarkovChain();
---
>   //algo.integrateMarkovChain();
66c154
<     std::cout << "Usage : " << argv[0] << " [inputfile.root] [tree_name]" << std::endl;
---
>     std::cout << "Usage : " << argv[0] << " [inputfile.root] [tree_name] [Chunks] [nchunk] [outfile.root]" << std::endl;
68a157,158
>   
>   
72a163,164
>   // chunks to split
>   int chunks = atoi(argv[3]) ;
77,79c169,207
<   float l1M, l1Px, l1Py, l1Pz;
<   float l2M, l2Px, l2Py, l2Pz;
<   float mTrue;
---
>   float l1E, l1M, l1Px, l1Py, l1Pz;
>   float l2E, l2M, l2Px, l2Py, l2Pz;
>   float l1Pt, l1Eta, l1Phi;
>   float l2Pt, l2Eta, l2Phi;
> //   double met, metPhi;
> //   double covMet11, covMet12; 
> //   double covMet21, covMet22;
> //   double l1E, l1M, l1Px, l1Py, l1Pz;
> //   double l2E, l2M, l2Px, l2Py, l2Pz;
> //   double l1Pt, l1Eta, l1Phi;
> //   double l2Pt, l2Eta, l2Phi;
>   //float mTrue;
>   int ievent ;
> 
>   // save the result into a TTree
>   TFile hfile(argv[5],"RECREATE");
>   Int_t evt;
>   Double_t m_sv;
> 
>   TTree* pMyTree= new TTree("SimpleTree","An example of a tree");
>   pMyTree->Branch("evt"      ,&evt      ,"evt/I"      );
>   pMyTree->Branch("m_sv"     ,&m_sv     ,"m_sv/D"     );
>   pMyTree->Branch("met"      ,&met      ,"met/F"      );
>   pMyTree->Branch("metPhi"   ,&metPhi   ,"metPhi/F"   );
>   pMyTree->Branch("covMet11" ,&covMet11 ,"covMet11/F" );
>   pMyTree->Branch("covMet12" ,&covMet12 ,"covMet12/F" );
>   pMyTree->Branch("covMet21" ,&covMet21 ,"covMet21/F" );
>   pMyTree->Branch("covMet22" ,&covMet22 ,"covMet22/F" );
>   pMyTree->Branch("l1E"      ,&l1E      ,"l1E/F"      );
>   //pMyTree->Branch("l1M"      ,&l1M      ,"l1M/F"      );
>   pMyTree->Branch("l1Px"     ,&l1Px     ,"l1Px/F"     );
>   pMyTree->Branch("l1Py"     ,&l1Py     ,"l1Py/F"     );
>   pMyTree->Branch("l1Pz"     ,&l1Pz     ,"l1Pz/F"     );
>   pMyTree->Branch("l2E"      ,&l2E      ,"l2E/F"      );
>   //pMyTree->Branch("l2M"      ,&l2M      ,"l2M/F"      );
>   pMyTree->Branch("l2Px"     ,&l2Px     ,"l2Px/F"     );
>   pMyTree->Branch("l2Py"     ,&l2Py     ,"l2Py/F"     );
>   pMyTree->Branch("l2Pz"     ,&l2Pz     ,"l2Pz/F"     );
>   
80a209,226
> //   tree->SetBranchAddress("evt"          , &ievent     );
> //   tree->SetBranchAddress("mvamet"       , &met        );
> //   tree->SetBranchAddress("metphi"       , &metPhi     );
> //   tree->SetBranchAddress("mvacov00"     , &covMet11   );
> //   tree->SetBranchAddress("mvacov01"     , &covMet12   );
> //   tree->SetBranchAddress("mvacov10"     , &covMet21   );
> //   tree->SetBranchAddress("mvacov11"     , &covMet22   );
> //   tree->SetBranchAddress("m_1"          , &l1M        );
> //   tree->SetBranchAddress("pt_1"         , &l1Pt       );
> //   tree->SetBranchAddress("eta_1"        , &l1Eta       );
> //   tree->SetBranchAddress("phi_1"        , &l1Phi       );
> //   tree->SetBranchAddress("m_2"          , &l2M        );
> //   tree->SetBranchAddress("pt_2"         , &l2Pt       );
> //   tree->SetBranchAddress("eta_2"        , &l2Eta       );
> //   tree->SetBranchAddress("phi_2"        , &l2Phi       );
>   //tree->SetBranchAddress("m_true"       , &mTrue      );
>   // branch adresses
>   tree->SetBranchAddress("event"        , &ievent     );
82,95c228,243
<   tree->SetBranchAddress("mphi"         , &metPhi     );
<   tree->SetBranchAddress("mcov_11"      , &covMet11   );
<   tree->SetBranchAddress("mcov_12"      , &covMet12   );
<   tree->SetBranchAddress("mcov_21"      , &covMet21   );
<   tree->SetBranchAddress("mcov_22"      , &covMet22   );
<   tree->SetBranchAddress("l1_M"         , &l1M        );
<   tree->SetBranchAddress("l1_Px"        , &l1Px       );
<   tree->SetBranchAddress("l1_Py"        , &l1Py       );
<   tree->SetBranchAddress("l1_Pz"        , &l1Pz       );
<   tree->SetBranchAddress("l2_M"         , &l2M        );
<   tree->SetBranchAddress("l2_Px"        , &l2Px       );
<   tree->SetBranchAddress("l2_Py"        , &l2Py       );
<   tree->SetBranchAddress("l2_Pz"        , &l2Pz       );
<   tree->SetBranchAddress("m_true"       , &mTrue      );
---
>   tree->SetBranchAddress("metPhi"       , &metPhi     );
>   tree->SetBranchAddress("mvacov00"     , &covMet11   );
>   tree->SetBranchAddress("mvacov01"     , &covMet12   );
>   tree->SetBranchAddress("mvacov10"     , &covMet21   );
>   tree->SetBranchAddress("mvacov11"     , &covMet22   );
>   tree->SetBranchAddress("l1E"          , &l1E        );
>   tree->SetBranchAddress("l1M"          , &l1M        );
>   tree->SetBranchAddress("l1Px"         , &l1Px       );
>   tree->SetBranchAddress("l1Py"         , &l1Py       );
>   tree->SetBranchAddress("l1Pz"         , &l1Pz       );
>   tree->SetBranchAddress("l2E"          , &l2E        );
>   tree->SetBranchAddress("l2M"          , &l2M        );
>   tree->SetBranchAddress("l2Px"         , &l2Px       );
>   tree->SetBranchAddress("l2Py"         , &l2Py       );
>   tree->SetBranchAddress("l2Pz"         , &l2Pz       );
>   //tree->SetBranchAddress("m_true"       , &mTrue      );
97c245,256
<   for(int i=0; i<nevent; ++i){
---
>   //nevent = 10 ;
>   int nchunk = atoi(argv[4]) ;
>   int evt_per_chunk = ( (int) nevent / chunks )+ 1                   ;
>   int start_evt     = evt_per_chunk * nchunk                         ;
>   int end_evt       = TMath::Min(nevent, evt_per_chunk * (nchunk+1)) ;
>   
>   std::cout << "running on " << evt_per_chunk << " events " << std::endl ; 
>   std::cout << "from  " << start_evt << " to " << end_evt << std::endl ; 
>   std::cout << "total  " << nevent << " events "<< std::endl ; 
>   
>   for(int i=start_evt; i<end_evt; ++i){    
>   //for(int i=0; i<nevent; ++i){    
99c258,289
<     std::cout << "event " << i+1 << std::endl;
---
>     std::cout << "event " << i+1  << std::endl;
>     
>     /* smear the variables to simulate small differences */
>     /* initialize random seed: */
>     srand (time(NULL));
>     
>     //std::cout << "random1 " << ((float)50*rand()/(RAND_MAX)) << std::endl;
>     if (((float)rand()/(RAND_MAX)) > 0.5) {met      = met      * (1. + ((float)10*rand()/(RAND_MAX))/200.);}
>     else                                  {met      = met      * (1. - ((float)10*rand()/(RAND_MAX))/200.);}
>     srand (time(NULL));
>     if (((float)rand()/(RAND_MAX)) > 0.5) {metPhi   = metPhi   * (1. + ((float)10*rand()/(RAND_MAX))/200.);}
>     else                                  {metPhi   = metPhi   * (1. - ((float)10*rand()/(RAND_MAX))/200.);}
>     srand (time(NULL));
>     if (((float)rand()/(RAND_MAX)) > 0.5) {covMet11 = covMet11 * (1. + ((float)10*rand()/(RAND_MAX))/200.);}
>     else                                  {covMet11 = covMet11 * (1. - ((float)10*rand()/(RAND_MAX))/200.);}
>     srand (time(NULL));
>     if (((float)rand()/(RAND_MAX)) > 0.5) {covMet12 = covMet12 * (1. + ((float)10*rand()/(RAND_MAX))/200.);}
>     else                                  {covMet12 = covMet12 * (1. - ((float)10*rand()/(RAND_MAX))/200.);}
>     srand (time(NULL));
>     if (((float)rand()/(RAND_MAX)) > 0.5) {covMet21 = covMet21 * (1. + ((float)10*rand()/(RAND_MAX))/200.);}
>     else                                  {covMet21 = covMet21 * (1. - ((float)10*rand()/(RAND_MAX))/200.);}
>     srand (time(NULL));
>     if (((float)rand()/(RAND_MAX)) > 0.5) {covMet22 = covMet22 * (1. + ((float)10*rand()/(RAND_MAX))/200.);}
>     else                                  {covMet22 = covMet22 * (1. - ((float)10*rand()/(RAND_MAX))/200.);}    
>     //std::cout << "random2 " << (float)50*rand() / (RAND_MAX) << std::endl;
>      
>     std::cout << "met "      << met      << std::endl;
>     std::cout << "metPhi "   << metPhi   << std::endl;
>     std::cout << "covMet11 " << covMet11 << std::endl;
>     std::cout << "covMet12 " << covMet12 << std::endl;
>     std::cout << "covMet21 " << covMet21 << std::endl;
>     std::cout << "covMet22 " << covMet22 << std::endl;
109,110c299,310
<     NSVfitStandalone::LorentzVector l1(l1Px, l1Py, l1Pz, TMath::Sqrt(l1M*l1M+l1Px*l1Px+l1Py*l1Py+l1Pz*l1Pz));
<     NSVfitStandalone::LorentzVector l2(l2Px, l2Py, l2Pz, TMath::Sqrt(l2M*l2M+l2Px*l2Px+l2Py*l2Py+l2Pz*l2Pz));
---
>     //NSVfitStandalone::LorentzVector l1(l1Px, l1Py, l1Pz, TMath::Sqrt(l1M*l1M+l1Px*l1Px+l1Py*l1Py+l1Pz*l1Pz));
>     //NSVfitStandalone::LorentzVector l2(l2Px, l2Py, l2Pz, TMath::Sqrt(l2M*l2M+l2Px*l2Px+l2Py*l2Py+l2Pz*l2Pz));
>     NSVfitStandalone::LorentzVector l1(l1Px, l1Py, l1Pz, l1E);
>     NSVfitStandalone::LorentzVector l2(l2Px, l2Py, l2Pz, l2E);
>     //NSVfitStandalone::LorentzVector l1;
>     //NSVfitStandalone::LorentzVector l2;
> //     TLorentzVector ll1;
> //     TLorentzVector ll2;
> //     ll1.SetPtEtaPhiM(l1Pt, l1Eta, l1Phi, l1M) ;
> //     ll2.SetPtEtaPhiM(l2Pt, l2Eta, l2Phi, l2M) ;
> //     NSVfitStandalone::LorentzVector l1(ll1.Px(), ll1.Py(), ll1.Pz(), ll1.E());
> //     NSVfitStandalone::LorentzVector l2(ll2.Px(), ll2.Py(), ll2.Pz(), ll2.E());
112,113c312,317
<     measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(std::string(argv[2])==std::string("EMu") ? NSVfitStandalone::kLepDecay : NSVfitStandalone::kLepDecay, l1));
<     measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(std::string(argv[2])==std::string("EMu") ? NSVfitStandalone::kLepDecay : NSVfitStandalone::kHadDecay, l2));
---
>     //measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(std::string(argv[2])==std::string("EMu") ? NSVfitStandalone::kLepDecay : NSVfitStandalone::kLepDecay, l1));
>     //measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(std::string(argv[2])==std::string("EMu") ? NSVfitStandalone::kLepDecay : NSVfitStandalone::kHadDecay, l2));
>     //measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(NSVfitStandalone::kHadDecay, l1));
>     //measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(NSVfitStandalone::kLepDecay, l1));
>     measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(NSVfitStandalone::kHadDecay, l1));
>     measuredTauLeptons.push_back(NSVfitStandalone::MeasuredTauLepton(NSVfitStandalone::kHadDecay, l2));
115c319
<     NSVfitStandaloneAlgorithm algo(measuredTauLeptons, measuredMET, covMET, 1);
---
>     NSVfitStandaloneAlgorithm algo(measuredTauLeptons, measuredMET, covMET, 0);
117,118c321,322
<     algo.maxObjFunctionCalls(5000);
<     //algo.addLogM(false);
---
>     algo.maxObjFunctionCalls(50000);
>     algo.addLogM(false);
121c325,326
<     algo.fit();
---
>     algo.integrateVEGAS();
>     //algo.integrateMarkovChain();
123c328
<     std::cout << "... m truth : " << mTrue  << std::endl;
---
>     //std::cout << "... m truth : " << mTrue  << std::endl;
125c330,333
<       std::cout << "... m svfit : " << algo.mass() << "+/-" << algo.massUncert() << std::endl;
---
>       std::cout << "event: " << ievent << "... m svfit : " << algo.mass() << "+/-" << algo.massUncert() << std::endl;
>       evt  = ievent ;
>       m_sv = algo.mass() ;
>       pMyTree->Fill();
128c336
<       std::cout << "... m svfit : ---" << std::endl;
---
>       std::cout << "event: " << ievent <<  "... m svfit : ---" << std::endl;
130a339,344
>   
>   pMyTree->Print();
>   pMyTree->Write();
>   hfile.Close();
>   //delete hfile;
> 
Index: TauAnalysis/CandidateTools/src/NSVfitStandaloneAlgorithm.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/TauAnalysis/CandidateTools/src/NSVfitStandaloneAlgorithm.cc,v
retrieving revision 1.9.4.3
diff -r1.9.4.3 NSVfitStandaloneAlgorithm.cc
267c267,268
<       if(p<(1.e-3*pMax)){
---
>       //if(p<(1.e-3*pMax)){
>       if(p<(0.5*pMax)){ // cut tails not too late
276a278
>     // Here you change the mass test step ! RICCARDO
277a280
>     //mtest += TMath::Max(0.1, 0.001*mtest);
